{"version":3,"file":"305.b75786bf235a19eb6450.js","mappings":"4ZAoCsD,OAAlDA,OAAOC,aAAaC,QAAQ,oBAC9B,QAAQ,CACNC,QAAQ,IAIZ,MAAMC,EAAqC,EAAGC,eAC5C,MAAOC,EAAcC,IAAmB,IAAAC,YAElCC,GAAO,UACPC,GAAW,IAAAC,eACXC,GAAkB,WAExB,IAAAC,YAAU,MACK,0CACX,MAAMC,QAAiBF,IACvBL,EAAgBO,EAClB,GAAI,GACH,CAACF,IAEJ,MA0BMG,EAAe,CACnBC,SA3Be,EACfC,QACAC,UACAC,cACAC,aACAC,cACAC,cACAC,eACAC,YACAC,eAEAf,GACE,IAAAgB,iBAAgB,CACdT,QACAC,UACAC,cACAC,aACAC,YAAaA,IAAe,EAC5BC,YAAaA,IAAe,EAC5BC,aAAcA,GAAgB,IAC9BC,YACAC,aAEH,GAOGE,GAAW,OAAY3B,OAAO4B,SAASC,WACvC,IAAEC,EAAG,YAAEC,EAAW,WAAEC,GAAevB,EAEzC,OACE,SAAC,cAAkBwB,SAAQ,CAACC,MAAOzB,EAAI,UACrC,SAAC,IAAYwB,SAAQ,CACnBC,MAAO,CACLC,SAAUL,EAAIK,SACdJ,cACAC,aACAI,iBAAkB9B,aAAY,EAAZA,EAAc+B,WACjC,UAED,SAAC,EAAAC,aAAaL,SAAQ,CAACC,MAAOnB,EAAK,UACjC,SAAC,EAAAwB,cAAa,WACZ,SAAC,gBAAM,CAACC,SAAUb,EAAQ,UACxB,SAAC,KAAuB,UAAEtB,aAMrC,EAGGoC,EAAmC,EAAGpC,mBAE3BqC,KADA,IAAAC,YAAW,EAAAC,gBAEjB,SAAC,EAAAC,mBAAkB,KAErB,SAACzC,EAAe,UAAEC,IAGdyC,GAA8B,IAAAC,OAAK,EAAG1C,eACjD,SAAC,EAAA4B,SAAQ,CAACe,OAAO,OAAK,KAAQC,WAAU,UACtC,SAAC,EAAAC,aAAY,CACXC,IAAK,KACLC,UAAW,CACTC,GAAI,CACFC,OAAQ,IACN,oCACF,wBAAyB,IACvB,qCAGFC,MAAO,IACL,qCACFC,QAAS,IACP,qCACFC,SAAU,IACR,qCAGFC,oBAAqB,IACnB,oCAGFC,gBAAiB,IACf,qCAGFC,cAAe,IACb,qCAGF,kBAAmB,IACjB,qCAIFC,kBAAmB,IAAM,qCACzBC,oBAAqB,IAAM,qCAC3BC,kBAAmB,IAAM,kCACzBC,kBAAmB,IAAM,qCACzB,2BAA4B,IAC1B,qCAGF,cAAe,IACb,oCAGF,mBAAoB,IAClB,qCAGF,oBAAqB,IACnB,qCAGF,mBAAoB,IAClB,qCAGF,mBAAoB,IAClB,oCAGF,cAAe,IACb,qCAGF,iBAAkB,IAChB,qCAGFC,MAAO,IACL,uCAGNC,OAAO,EAAI,UAEX,SAAC,KAAmB,WAClB,SAAC,IAAsB,WACrB,SAAC,IAA+B,WAC9B,SAACzB,EAAa,UAAEpC,gBAQ5B,OACE,SAACyC,EAAQ,WACP,SAAC,IAAG,K,yGCjMR,MAAMqB,EAAe,KACnB,MAAMC,GAAY,IAAAC,SAAO,GAOzB,OANA,IAAAxD,YAAU,KACRuD,EAAUE,SAAU,EACb,KACLF,EAAUE,SAAU,CAAK,IAE1B,IACIF,CAAS,EAsBlB,MAyDaG,GACX,IAAAxB,OACE,EAAGyB,QAAOC,SAAQC,SAAQC,eACxBC,QAAQC,IAAI,2BAA4BL,EAAOC,GAC/C,MAAML,EAAYD,KAEZ,cAAEW,EAAa,QAAEC,IAAY,UAC5BC,EAAYC,IAAiB,IAAAzE,YAgBpC,OAdA,IAAAK,YAAU,MAC4B,0CAClC,MAAMmE,QAAmBF,EACvBC,EAAQP,GAAOU,SACfV,EACAO,EAAQP,GAAOW,kBAEbf,EAAUE,SACZW,EAAcD,EAElB,GACiB,GAChB,CAACR,EAAOO,EAASD,EAAeV,SAEhB1B,IAAfsC,GAEA,SAACI,EAAsB,CACrBZ,MAAOA,EACPC,OAAQA,EACRC,OAAQA,EACRM,WAAYA,SAIDtC,IAAbiC,GACK,8BAAGA,IAEL,IAAI,IAEb,CAACU,EAAWC,IACVD,EAAUb,QAAUc,EAAUd,OAC9Ba,EAAUZ,SAAWa,EAAUb,SAO/BW,EAEF,EAAGJ,aAAYL,WAAUH,QAAOE,SAAQD,aAC1C,MAAM,MAAEc,EAAK,OAAEC,GA3GQ,CAACC,IACxB,MAAMrB,EAAYD,KACXoB,EAAOG,IAAY,IAAAlF,WAAS,IAC5BgF,EAAQG,IAAa,IAAAnF,WAAS,GAyCrC,OAvCA,IAAAK,YAAU,KACR,IAAI+E,EACJ,GAAIxB,EAAUE,QAAS,CACrB,IAAKmB,EAEH,YADAE,GAAU,GAIZC,EAAUC,SAASC,cAAc,UAEjCF,EAAQG,IAAMN,EACdG,EAAQI,KAAO,kBACfJ,EAAQK,OAAQ,EAEhBP,GAAS,GACTC,GAAU,GAEVC,EAAQM,OAAS,KACftB,QAAQC,IAAI,oCAAoCY,KAChDC,GAAS,EAAK,EAGhBE,EAAQO,QAAU,KAChBvB,QAAQwB,MAAM,mCAAmCX,KACjDC,GAAS,GACTC,GAAU,EAAK,EAGjBE,SAASQ,KAAKC,YAAYV,E,CAG5B,MAAO,KACDA,IACFhB,QAAQC,IAAI,qCAAqCY,KACjDI,SAASQ,KAAKE,YAAYX,G,CAE7B,GACA,CAACxB,EAAWqB,IAER,CACLF,QACAC,SACD,EA4DyBgB,CAAiBxB,EAAWyB,YAEtD,GAAIlB,IAAUC,EAAQ,CACpB,MAAMkB,GAAY,IAAAC,MA5HtB,SAAuBnC,EAAeC,GACpC,MAAO,KAAY,8CAEX,IAAyB,WAC/B,MAAMmC,EAAa5G,OAAewE,SAE5BoC,EAAUC,KAAK,IAAyBC,SAC9C,MACMC,SADgBH,EAAUI,IAAIvC,MAGpC,OADAG,QAAQV,MAAM,UAAUO,UAAeD,KAChCuC,CACT,GACF,CAgH2BE,CAAczC,EAAOC,IAEtCyC,EAAU,IACPlC,EAAWE,SAGpB,OACE,SAAC,EAAAiC,cAAclF,SAAQ,CAACC,MAAO,CAAEgF,WAAS,UACxC,SAAC,EAAAE,SAAQ,CAACzC,UAAU,SAAC,EAAA9B,mBAAkB,IAAG,SACvC6B,EAAOgC,M,CAMhB,OAAI/B,GACK,8BAAGA,IAEL,IAAI,C,mJCxKb,MAAM0C,EAAc,IAAM,GAEbC,EAER,EAAGC,gBACN,MAAM7C,GAAS,IAAA8C,cACZC,IACC,SAACC,EAAqC,CACpChB,UAAWe,EACXF,UAAWA,KAGf,CAACA,IAEH,OACE,SAAC,EAAAzE,SAAQ,WACP,SAAC,EAAA6E,gBAAgB1F,SAAQ,CAACC,MAAO,CAAEmF,eAAa,UAC9C,SAAC,KAAe,CACd7C,MAAM,MACNC,OAAO,2BACPE,UAAU,SAAC,EAAA9B,mBAAkB,IAC7B6B,OAAQA,OAIf,EAGGgD,EAGD,EAAGhB,YAAWa,gBACjB,MAAM/E,EAAW,oBAEjB,OACE,SAACkE,EAAS,CACRlE,SAAUA,EACV+E,UAAWA,EACXK,aAAeC,IACb,SAAC,IAA0B,CACzBpD,OAAO,2BACPoD,SAAUA,EACVN,UAAWA,EACXO,QAAS,KACTC,QAAS,SACTC,WAAYH,aAAQ,EAARA,EAAUI,GACtBzF,SAAUA,KAIjB,EAGH,G","sources":["webpack://application-services-ui/./src/AppEntry.tsx","webpack://application-services-ui/./src/app/components/FederatedModule/FederatedModule.tsx","webpack://application-services-ui/./src/fm/TopicSchema.tsx"],"sourcesContent":["import {\n  FunctionComponent,\n  memo,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\nimport { Provider, useDispatch } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport logger from \"redux-logger\";\nimport { inspect } from \"@xstate/inspect\";\nimport App from \"@app/App\";\nimport { useAuth, useSSOProviders } from \"@app/hooks\";\nimport { EmbeddedConfigProvider } from \"@app/providers/config/EmbeddedConfigContextProvider\";\nimport { ServiceConstantsContextProvider } from \"@app/providers/config/ServiceConstantsContextProvider\";\nimport { FeatureFlagProvider } from \"@app/providers/featureflags/FeatureFlags\";\nimport { init } from \"@app/store\";\nimport getBaseName from \"@app/utils/getBaseName\";\nimport { addNotification } from \"@redhat-cloud-services/frontend-components-notifications\";\nimport {\n  AppServicesLoading,\n  I18nProvider,\n  ModalProvider,\n} from \"@rhoas/app-services-ui-components\";\nimport {\n  Alert,\n  AlertContext,\n  AlertProps,\n  AuthContext as SharedAuthContext,\n  ConfigContext,\n} from \"@rhoas/app-services-ui-shared\";\nimport { SsoProviderAllOf } from \"@rhoas/kafka-management-sdk\";\nimport \"@rhoas/app-services-ui-components/dist/esm/index.css\";\nimport { AuthContext } from \"@app/providers/auth\";\nimport { FederatedModuleProvider } from \"@app/components\";\n\nif (window.localStorage.getItem(\"xstate-inspect\") !== null) {\n  inspect({\n    iframe: false, // open in new window\n  });\n}\n\nconst AppWithKeycloak: FunctionComponent = ({ children }) => {\n  const [ssoProviders, setSSOProviders] = useState<SsoProviderAllOf>();\n\n  const auth = useAuth();\n  const dispatch = useDispatch();\n  const getSSOProviders = useSSOProviders();\n\n  useEffect(() => {\n    (async () => {\n      const response = await getSSOProviders();\n      setSSOProviders(response);\n    })();\n  }, [getSSOProviders]);\n\n  const addAlert = ({\n    title,\n    variant,\n    description,\n    dataTestId,\n    autoDismiss,\n    dismissable,\n    dismissDelay,\n    requestId,\n    sentryId,\n  }: AlertProps) => {\n    dispatch(\n      addNotification({\n        title,\n        variant,\n        description,\n        dataTestId,\n        autoDismiss: autoDismiss || true,\n        dismissable: dismissable || true,\n        dismissDelay: dismissDelay || 8000,\n        requestId,\n        sentryId,\n      })\n    );\n  };\n\n  const alert: Alert = {\n    addAlert,\n  };\n\n  const baseName = getBaseName(window.location.pathname);\n  const { kas, getUsername, isOrgAdmin } = auth;\n\n  return (\n    <SharedAuthContext.Provider value={auth}>\n      <AuthContext.Provider\n        value={{\n          getToken: kas.getToken,\n          getUsername,\n          isOrgAdmin,\n          tokenEndPointUrl: ssoProviders?.token_url,\n        }}\n      >\n        <AlertContext.Provider value={alert}>\n          <ModalProvider>\n            <Router basename={baseName}>\n              <FederatedModuleProvider>{children}</FederatedModuleProvider>\n            </Router>\n          </ModalProvider>\n        </AlertContext.Provider>\n      </AuthContext.Provider>\n    </SharedAuthContext.Provider>\n  );\n};\n\nconst AppWithConfig: FunctionComponent = ({ children }) => {\n  const config = useContext(ConfigContext);\n  if (config === undefined) {\n    return <AppServicesLoading />;\n  }\n  return <AppWithKeycloak>{children}</AppWithKeycloak>;\n};\n\nexport const AppEntry: FunctionComponent = memo(({ children }) => (\n  <Provider store={init(logger).getStore()}>\n    <I18nProvider\n      lng={\"en\"}\n      resources={{\n        en: {\n          common: () =>\n            import(\"@rhoas/app-services-ui-components/locales/en/common.json\"),\n          \"create-kafka-instance\": () =>\n            import(\n              \"@rhoas/app-services-ui-components/locales/en/create-kafka-instance.json\"\n            ),\n          kafka: () =>\n            import(\"@rhoas/app-services-ui-components/locales/en/kafka.json\"),\n          metrics: () =>\n            import(\"@rhoas/app-services-ui-components/locales/en/metrics.json\"),\n          overview: () =>\n            import(\n              \"@rhoas/app-services-ui-components/locales/en/overview.json\"\n            ),\n          datascienceoverview: () =>\n            import(\n              \"@rhoas/app-services-ui-components/locales/en/datascienceoverview.json\"\n            ),\n          apimgmtoverview: () =>\n            import(\n              \"@rhoas/app-services-ui-components/locales/en/apimgmtoverview.json\"\n            ),\n          kafkaoverview: () =>\n            import(\n              \"@rhoas/app-services-ui-components/locales/en/kafkaoverview.json\"\n            ),\n          \"message-browser\": () =>\n            import(\n              \"@rhoas/app-services-ui-components/locales/en/message-browser.json\"\n            ),\n          // temporary translations until all user facing visuals are ported to the ui components repo\n          appTemporaryFixMe: () => import(\"./locales/app-services-ui.json\"),\n          kafkaTemporaryFixMe: () => import(\"./locales/kafka-ui.json\"),\n          kasTemporaryFixMe: () => import(\"./locales/kas-ui.json\"),\n          srsTemporaryFixMe: () => import(\"./locales/srs-ui.json\"),\n          \"manage-kafka-permissions\": () =>\n            import(\n              \"@rhoas/app-services-ui-components/locales/en/manage-kafka-permissions.json\"\n            ),\n          \"overview-v2\": () =>\n            import(\n              \"@rhoas/app-services-ui-components/locales/en/overview-v2.json\"\n            ),\n          \"kafkaoverview-v2\": () =>\n            import(\n              \"@rhoas/app-services-ui-components/locales/en/kafkaoverview-v2.json\"\n            ),\n          \"connection-tab-p1\": () =>\n            import(\n              \"@rhoas/app-services-ui-components/locales/en/connection-tab-p1.json\"\n            ),\n          \"service-registry\": () =>\n            import(\n              \"@rhoas/app-services-ui-components/locales/en/service-registry.json\"\n            ),\n          \"kafkaoverview-v3\": () =>\n            import(\n              \"@rhoas/app-services-ui-components/locales/en/kafkaoverview-v3.json\"\n            ),\n          \"overview-v4\": () =>\n            import(\n              \"@rhoas/app-services-ui-components/locales/en/overview-v4.json\"\n            ),\n          \"connection-tab\": () =>\n            import(\n              \"@rhoas/app-services-ui-components/locales/en/connection-tab.json\"\n            ),\n          topic: () =>\n            import(\"@rhoas/app-services-ui-components/locales/en/topic.json\"),\n        },\n      }}\n      debug={true}\n    >\n      <FeatureFlagProvider>\n        <EmbeddedConfigProvider>\n          <ServiceConstantsContextProvider>\n            <AppWithConfig>{children}</AppWithConfig>\n          </ServiceConstantsContextProvider>\n        </EmbeddedConfigProvider>\n      </FeatureFlagProvider>\n    </I18nProvider>\n  </Provider>\n));\n\nexport default () => (\n  <AppEntry>\n    <App />\n  </AppEntry>\n);\n","import {\n  ComponentType,\n  FunctionComponent,\n  lazy,\n  LazyExoticComponent,\n  ReactNode,\n  useEffect,\n  useRef,\n  useState,\n  VoidFunctionComponent,\n  Suspense,\n  memo,\n} from \"react\";\nimport { AssetsContext } from \"@rhoas/app-services-ui-shared\";\nimport { ModuleInfo } from \"@app/components/FederatedModule/moduleInfo\";\nimport { useFederatedModule } from \"@app/components\";\nimport { AppServicesLoading } from \"@rhoas/app-services-ui-components\";\n\nconst useIsMounted = () => {\n  const isMounted = useRef(false);\n  useEffect(() => {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n  return isMounted;\n};\n\ntype Container = {\n  init: (shareScopes: unknown) => Promise<void>;\n  get: (module: string) => Promise<{ (): { default: ComponentType<unknown> } }>;\n};\n\nfunction loadComponent(scope: string, module: string) {\n  return async () => {\n    // Initializes the share scope. This fills it with known provided modules from this build and all remotes\n    await __webpack_init_sharing__(\"default\");\n    const container = (window as any)[scope] as unknown as Container; // or get the container somewhere else\n    // Initialize the container, it may provide shared modules\n    await container.init(__webpack_share_scopes__.default);\n    const factory = await container.get(module);\n    const Module = factory();\n    console.debug(`loaded ${module} from ${scope}`);\n    return Module;\n  };\n}\n\nconst useDynamicScript = (url: string) => {\n  const isMounted = useIsMounted();\n  const [ready, setReady] = useState(false);\n  const [failed, setFailed] = useState(false);\n\n  useEffect(() => {\n    let element: HTMLScriptElement;\n    if (isMounted.current) {\n      if (!url) {\n        setFailed(true);\n        return;\n      }\n\n      element = document.createElement(\"script\");\n\n      element.src = url;\n      element.type = \"text/javascript\";\n      element.async = true;\n\n      setReady(false);\n      setFailed(false);\n\n      element.onload = () => {\n        console.log(`Dynamic federated module Loaded: ${url}`);\n        setReady(true);\n      };\n\n      element.onerror = () => {\n        console.error(`Dynamic federated module Error: ${url}`);\n        setReady(false);\n        setFailed(true);\n      };\n\n      document.head.appendChild(element);\n    }\n\n    return () => {\n      if (element) {\n        console.log(`Dynamic federated module Removed: ${url}`);\n        document.head.removeChild(element);\n      }\n    };\n  }, [isMounted, url]);\n\n  return {\n    ready,\n    failed,\n  };\n};\n\nexport type FederatedModuleProps = {\n  scope: string;\n  module: string;\n  render: (component: LazyExoticComponent<ComponentType<any>>) => ReactNode;\n  fallback?: ReactNode;\n};\n\nexport const FederatedModule: VoidFunctionComponent<FederatedModuleProps> =\n  memo(\n    ({ scope, module, render, fallback }) => {\n      console.log(\"Dynamic federated module\", scope, module);\n      const isMounted = useIsMounted();\n\n      const { getModuleInfo, modules } = useFederatedModule();\n      const [moduleInfo, setModuleInfo] = useState<ModuleInfo | undefined>();\n\n      useEffect(() => {\n        const fetchModuleInfo = async () => {\n          const moduleInfo = await getModuleInfo(\n            modules[scope].basePath,\n            scope,\n            modules[scope].fallbackBasePath\n          );\n          if (isMounted.current) {\n            setModuleInfo(moduleInfo);\n          }\n        };\n        fetchModuleInfo();\n      }, [scope, modules, getModuleInfo, isMounted]);\n\n      if (moduleInfo !== undefined) {\n        return (\n          <DynamicFederatedModule\n            scope={scope}\n            module={module}\n            render={render}\n            moduleInfo={moduleInfo}\n          />\n        );\n      }\n      if (fallback !== undefined) {\n        return <>{fallback}</>;\n      }\n      return null;\n    },\n    (prevProps, nextProps) =>\n      prevProps.scope === nextProps.scope &&\n      prevProps.module === nextProps.module\n  );\n\ntype DynamicFederatedModuleProps = FederatedModuleProps & {\n  moduleInfo: ModuleInfo;\n};\n\nconst DynamicFederatedModule: FunctionComponent<\n  DynamicFederatedModuleProps\n> = ({ moduleInfo, fallback, scope, render, module }) => {\n  const { ready, failed } = useDynamicScript(moduleInfo.entryPoint);\n\n  if (ready && !failed) {\n    const Component = lazy(loadComponent(scope, module));\n\n    const getPath = () => {\n      return moduleInfo.basePath;\n    };\n\n    return (\n      <AssetsContext.Provider value={{ getPath }}>\n        <Suspense fallback={<AppServicesLoading />}>\n          {render(Component)}\n        </Suspense>\n      </AssetsContext.Provider>\n    );\n  }\n\n  if (fallback) {\n    return <>{fallback}</>;\n  }\n  return null;\n};\n","import { LazyExoticComponent, useCallback, VoidFunctionComponent } from \"react\";\nimport { Registry } from \"@rhoas/registry-management-sdk\";\nimport { FederatedModule } from \"@app/components\";\nimport { AppServicesLoading } from \"@rhoas/app-services-ui-components\";\nimport { BasenameContext } from \"@rhoas/app-services-ui-shared\";\nimport { FederatedApicurioComponent } from \"@app/pages/ServiceRegistry/FederatedApicurioComponent\";\nimport { AppEntry } from \"../AppEntry\";\n\nconst getBasename = () => \"\";\n\nexport const TopicSchema: VoidFunctionComponent<{\n  topicName: string;\n}> = ({ topicName }) => {\n  const render = useCallback(\n    (component) => (\n      <ServiceRegistrySchemaMappingConnected\n        Component={component}\n        topicName={topicName}\n      />\n    ),\n    [topicName]\n  );\n  return (\n    <AppEntry>\n      <BasenameContext.Provider value={{ getBasename }}>\n        <FederatedModule\n          scope=\"srs\"\n          module=\"./ServiceRegistryMapping\"\n          fallback={<AppServicesLoading />}\n          render={render}\n        />\n      </BasenameContext.Provider>\n    </AppEntry>\n  );\n};\n\nconst ServiceRegistrySchemaMappingConnected: VoidFunctionComponent<{\n  Component: LazyExoticComponent<any>;\n  topicName: string;\n}> = ({ Component, topicName }) => {\n  const basename = \"/service-registry\";\n\n  return (\n    <Component\n      basename={basename}\n      topicName={topicName}\n      renderSchema={(registry: Registry) => (\n        <FederatedApicurioComponent\n          module=\"./FederatedSchemaMapping\"\n          registry={registry}\n          topicName={topicName}\n          groupId={null}\n          version={\"latest\"}\n          registryId={registry?.id}\n          basename={basename}\n        />\n      )}\n    />\n  );\n};\n\nexport default TopicSchema;\n"],"names":["window","localStorage","getItem","iframe","AppWithKeycloak","children","ssoProviders","setSSOProviders","useState","auth","dispatch","useDispatch","getSSOProviders","useEffect","response","alert","addAlert","title","variant","description","dataTestId","autoDismiss","dismissable","dismissDelay","requestId","sentryId","addNotification","baseName","location","pathname","kas","getUsername","isOrgAdmin","Provider","value","getToken","tokenEndPointUrl","token_url","AlertContext","ModalProvider","basename","AppWithConfig","undefined","useContext","ConfigContext","AppServicesLoading","AppEntry","memo","store","getStore","I18nProvider","lng","resources","en","common","kafka","metrics","overview","datascienceoverview","apimgmtoverview","kafkaoverview","appTemporaryFixMe","kafkaTemporaryFixMe","kasTemporaryFixMe","srsTemporaryFixMe","topic","debug","useIsMounted","isMounted","useRef","current","FederatedModule","scope","module","render","fallback","console","log","getModuleInfo","modules","moduleInfo","setModuleInfo","basePath","fallbackBasePath","DynamicFederatedModule","prevProps","nextProps","ready","failed","url","setReady","setFailed","element","document","createElement","src","type","async","onload","onerror","error","head","appendChild","removeChild","useDynamicScript","entryPoint","Component","lazy","container","init","default","Module","get","loadComponent","getPath","AssetsContext","Suspense","getBasename","TopicSchema","topicName","useCallback","component","ServiceRegistrySchemaMappingConnected","BasenameContext","renderSchema","registry","groupId","version","registryId","id"],"sourceRoot":""}
{"version":3,"sources":["webpack://mk-ui-host/./src/app/App.scss","webpack://mk-ui-host/./src/app/App.scss?af09","webpack://mk-ui-host/./src/app/utils/useDocumentTitle.ts","webpack://mk-ui-host/./src/app/NotFound/NotFound.tsx","webpack://mk-ui-host/./src/app/Components/FederatedModule/FederatedModule.tsx","webpack://mk-ui-host/./src/app/Routes.tsx","webpack://mk-ui-host/./src/app/Components/QuickStart/QuickStartDrawerFederated.tsx","webpack://mk-ui-host/./src/app/utils/a11y.ts","webpack://mk-ui-host/./src/app/DataPlanePage/DataPlanePage.tsx","webpack://mk-ui-host/./src/app/ControlPlanePage/ControlPlanePage.tsx","webpack://mk-ui-host/./src/app/Components/QuickStart/QuickStartCatalogFederated.tsx","webpack://mk-ui-host/./src/app/App.tsx","webpack://mk-ui-host/./src/app/Components/Loading/Loading.tsx","webpack://mk-ui-host/./src/app/Config/Config.tsx","webpack://mk-ui-host/./src/app/store/index.ts","webpack://mk-ui-host/./src/app/utils/auth/AuthContext.tsx","webpack://mk-ui-host/./src/app/utils/getBaseName.ts","webpack://mk-ui-host/./src/app/utils/insights.ts","webpack://mk-ui-host/./src/app/utils/keycloakAuth.ts"],"names":["___CSS_LOADER_EXPORT___","i","push","module","id","options","useDocumentTitle","title","originalTitle","document","NotFound","PageSection","EmptyState","variant","EmptyStateIcon","icon","Title","headingLevel","size","EmptyStateBody","history","Button","onClick","FederatedModuleContext","FederatedModuleProvider","children","config","useContext","Config","undefined","Loading","Provider","value","federatedModules","routeFocusTimer","FederatedModule","scope","render","fallback","url","ready","setReady","failed","setFailed","element","createElement","src","type","async","onload","console","log","onerror","error","head","appendChild","removeChild","useDynamicScript","context","basePath","entryPoint","useFederatedModule","Component","window","init","default","get","factory","Module","loadComponent","QuickStartDrawerFederated","guides","useA11yRouteChange","isAsync","lastNavigation","useLastLocation","setTimeout","mainContainer","getElementById","focus","clearTimeout","RouteWithTitleUpdates","rest","routeProps","PageNotFound","component","flattenedRoutes","insights","getToken","AuthContext","useState","showCreateTopic","setShowCreateTopic","parts","location","pathname","endsWith","split","length","onCreateTopic","onCloseCreateTopic","createTopicPage","FederatedTopics","getApiOpenshiftComToken","chrome","auth","apiBasePath","dataPlane","uiServerBasePath","topicListPage","exact","label","path","onConnectInstance","event","Error","getConnectToInstancePath","createHref","dispatch","useDispatch","addAlert","message","addNotification","getUsername","getUser","then","user","identity","username","OpenshiftStreamsFederated","onConnectToInstance","controlPlane","serviceApiBasePath","to","QuickStartCatalogFederated","reduce","flattened","route","routes","AppRoutes","LastLocationProvider","map","idx","key","registry","getRegistry","register","notifications","connect","useEffect","identifyApp","on","navId","store","getStore","NotificationsPortal","Bullseye","Spinner","ConfigContext","ConfigProvider","configUrl","setConfig","controller","AbortController","signal","fetch","json","newConfig","abort","middleware","Promise","resolve","release","pathName","shift","InsightsContext","keycloak","REFRESH_TOKEN_COOKIE_NAME","getKeycloakInstance","k","initOptions","responseMode","storedRefreshToken","refreshJWT","exp","Date","refreshToken","updateToken","onLoad","getValidAccessToken","token"],"mappings":"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","file":"41.74e2cad23785123f4f1e.js","sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_0___ from \"-!../../node_modules/css-loader/dist/cjs.js!../../node_modules/@redhat-cloud-services/frontend-components-notifications/index.css\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root{--ins-color--orange: #ec7a08}button:focus{outline:none}\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/@redhat-cloud-services/frontend-components-utilities/files/Utilities/_variables.scss\",\"webpack://./node_modules/@redhat-cloud-services/frontend-components-utilities/files/Utilities/_helpers.scss\"],\"names\":[],\"mappings\":\"AAAA,MACI,4BAAA,CCDJ,aACI,YAAA\",\"sourcesContent\":[\":root {\\n    --ins-color--orange: #ec7a08;\\n}\\n\\n// Spacing\\n$ins-padding: var(--pf-global--spacer--lg);\\n$ins-margin: var(--pf-global--spacer--xl);\\n$ins-gutter: var(--pf-global--gutter);\\n\\n// Font Size\\n$ins-fontSize: var(--pf-global--FontSize--md);\\n$ins-fontSize--sm: var(--pf-global--FontSize--sm);\\n$ins-fontSize--lg: var(--pf-global--FontSize--lg);\\n$ins-fontSize--xl: var(--pf-global--FontSize--xl);\\n\\n// Borders\\n$ins-borderRadius: var(--pf-global--BorderRadius--sm);\\n$ins-borderRadius--round: var(--pf-global--BorderRadius--lg);\\n\\n// Grid breakpoints\\n$ins-break--xs: var(--pf-global--breakpoint--xs);\\n$ins-break--sm: var(--pf-global--breakpoint--sm);\\n$ins-break--md: var(--pf-global--breakpoint--md);\\n$ins-break--lg: var(--pf-global--breakpoint--lg);\\n$ins-break--xl: var(--pf-global--breakpoint--xl);\\n\\n// Colors\\n$ins-color--red: var(--pf-global--danger-color--100);\\n$ins-color--critical: $ins-color--red;\\n\\n$ins-color--orange: var(--ins-color--orange);\\n$ins-color--high: $ins-color--orange;\\n\\n$ins-color--yellow: var(--pf-global--warning-color--100);\\n$ins-color--medium: $ins-color--yellow;\\n\\n$ins-color--green: var(--pf-global--success-color--100);\\n$ins-color--low: $ins-color--green;\\n\\n$ins-color--blue: var(--pf-global--info-color--100);\\n\\n$ins-color--gray: var(--pf-global--disabled-color--200);\",\"button:focus {\\n    outline:none;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import api from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./App.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import * as React from 'react';\n\n// a custom hook for setting the page title\nexport function useDocumentTitle(title: string) {\n  React.useEffect(() => {\n    const originalTitle = document.title;\n    document.title = title;\n\n    return () => {\n      document.title = originalTitle;\n    };\n  }, [title]);\n}\n","import * as React from 'react';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport {\n  PageSection,\n  Title,\n  Button,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n} from '@patternfly/react-core';\nimport { useHistory } from 'react-router-dom';\n\nconst NotFound: React.FunctionComponent = () => {\n  function GoHomeBtn() {\n    const history = useHistory();\n    function handleClick() {\n      history.push('/');\n    }\n    return (\n      <Button onClick={handleClick}>Take me home</Button>\n    );\n  }\n\n  return (\n    <PageSection>\n    <EmptyState variant=\"full\">\n      <EmptyStateIcon icon={ExclamationTriangleIcon} />\n      <Title headingLevel=\"h1\" size=\"lg\">\n        404 Page not found\n      </Title>\n      <EmptyStateBody>\n        We didn&apos;t find a page that matches the address you navigated to.\n      </EmptyStateBody>\n      <GoHomeBtn />\n    </EmptyState>\n  </PageSection>\n  )\n};\n\nexport { NotFound };\n","/* eslint-disable camelcase */\n/* eslint-disable no-undef */\nimport React, { ReactNode, useContext } from 'react';\nimport { Loading } from '../Loading/Loading';\nimport { ConfigContext, FederatedModuleConfig } from \"@app/Config/Config\";\n\nexport type FederatedModuleContextProps = {\n  [module: string]: FederatedModuleConfig\n}\n\nconst FederatedModuleContext = React.createContext<FederatedModuleContextProps>({});\n\nexport const FederatedModuleProvider: React.FunctionComponent = ({\n                                                                   children\n                                                                 }) => {\n\n  const config = useContext(ConfigContext);\n\n  if (config === undefined) {\n    return <Loading/>;\n  }\n\n  return (\n    <FederatedModuleContext.Provider value={config.federatedModules}>\n      {children}\n    </FederatedModuleContext.Provider>\n  );\n}\n\nfunction useFederatedModule(module) {\n  const context = React.useContext(FederatedModuleContext);\n  return `${context[module].basePath}${context[module].entryPoint}`;\n}\n\nfunction loadComponent(scope, module) {\n  return async () => {\n    // Initializes the share scope. This fills it with known provided modules from this build and all remotes\n    await __webpack_init_sharing__('default');\n    const container = window[scope]; // or get the container somewhere else\n    // Initialize the container, it may provide shared modules\n    await container.init(__webpack_share_scopes__.default);\n    const factory = await window[scope].get(module);\n    const Module = factory();\n    console.log(`${Module} loaded ${module} from ${scope}`);\n    return Module;\n  };\n}\n\nconst useDynamicScript = ({ url }) => {\n  const [ready, setReady] = React.useState(false);\n  const [failed, setFailed] = React.useState(false);\n\n  React.useEffect(() => {\n    if (!url) {\n      return;\n    }\n\n    const element = document.createElement('script');\n\n    element.src = url;\n    element.type = 'text/javascript';\n    element.async = true;\n\n    setReady(false);\n    setFailed(false);\n\n    element.onload = () => {\n      console.log(`Dynamic federated module Loaded: ${url}`);\n      setReady(true);\n    };\n\n    element.onerror = () => {\n      console.error(`Dynamic federated module Error: ${url}`);\n      setReady(false);\n      setFailed(true);\n    };\n\n    document.head.appendChild(element);\n\n    return () => {\n      console.log(`Dynamic federated module Removed: ${url}`);\n      document.head.removeChild(element);\n    };\n  }, [url]);\n\n  return {\n    ready,\n    failed\n  };\n};\n\nexport type FederatedModuleProps = {\n  scope: string;\n  module: string;\n  render: (component: React.LazyExoticComponent<React.ComponentType<any>>) => ReactNode;\n  fallback?: any;\n}\n\nexport const FederatedModule: React.FunctionComponent<FederatedModuleProps> = ({ scope, module, render, fallback }) => {\n  const url = useFederatedModule(scope);\n  const { ready, failed } = useDynamicScript({ url });\n\n  if (!ready || failed) {\n    if (failed && fallback) {\n      return fallback;\n    }\n    return null;\n  }\n\n  const Component = React.lazy(\n    loadComponent(scope, module)\n  );\n\n  return (\n    <React.Suspense fallback={<Loading/>}>\n      {render(Component)}\n    </React.Suspense>\n  );\n}\n\n","import React from 'react';\nimport { Redirect, Route, RouteComponentProps, Switch } from 'react-router-dom';\nimport { accessibleRouteChangeHandler, useDocumentTitle } from '@app/utils';\nimport { NotFound } from '@app/NotFound/NotFound';\nimport { LastLocationProvider, useLastLocation } from 'react-router-last-location';\nimport { ControlPlanePage } from \"@app/ControlPlanePage/ControlPlanePage\";\nimport { DataPlanePage } from \"@app/DataPlanePage/DataPlanePage\";\nimport { QuickStartDrawerFederated } from \"@app/Components/QuickStart/QuickStartDrawerFederated\";\nimport { QuickStartCatalogFederated } from \"@app/Components/QuickStart/QuickStartCatalogFederated\";\n\nlet routeFocusTimer: number;\n\nexport interface IAppRoute {\n  label?: string; // Excluding the label will exclude the route from the nav sidebar in AppLayout\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\n  /* eslint-enable @typescript-eslint/no-explicit-any */\n  exact?: boolean;\n  path: string;\n  title: string;\n  isAsync?: boolean;\n  routes?: undefined;\n}\n\nexport interface IAppRouteGroup {\n  label: string;\n  routes: IAppRoute[];\n}\n\nexport type AppRouteConfig = IAppRoute | IAppRouteGroup;\n\nconst RedirectSlash: React.FunctionComponent = () => (<Redirect to=\"/openshift-streams\" />)\n\nconst routes: AppRouteConfig[] = [\n  {\n    component: DataPlanePage,\n    exact: false,\n    label: 'Red Hat OpenShift Streams for Apache Kafka',\n    path: '/openshift-streams/kafkas',\n    title: 'Red Hat OpenShift Streams for Apache Kafka',\n  },\n  {\n    component: ControlPlanePage,\n    exact: true,\n    label: 'Red Hat OpenShift Streams for Apache Kafka',\n    path: '/openshift-streams',\n    title: 'Red Hat OpenShift Streams for Apache Kafka',\n  },\n  {\n    component: RedirectSlash,\n    exact: true,\n    label: 'Red Hat OpenShift Streams for Apache Kafka',\n    path: '/',\n    title: 'Red Hat OpenShift Streams for Apache Kafka',\n  },\n  {\n    component: QuickStartCatalogFederated,\n    exact: true,\n    label: 'QuickStarts for Red Hat OpenShift Application Services',\n    path: '/quickstarts',\n    title: 'QuickStarts for Red Hat OpenShift Application Services',\n  }\n];\n\n// a custom hook for sending focus to the primary content container\n// after a view has loaded so that subsequent press of tab key\n// sends focus directly to relevant content\nconst useA11yRouteChange = (isAsync: boolean) => {\n  const lastNavigation = useLastLocation();\n  React.useEffect(() => {\n    if (!isAsync && lastNavigation !== null) {\n      routeFocusTimer = accessibleRouteChangeHandler();\n    }\n    return () => {\n      window.clearTimeout(routeFocusTimer);\n    };\n  }, [isAsync, lastNavigation]);\n};\n\nconst RouteWithTitleUpdates = ({ component: Component, isAsync = false, title, ...rest }: IAppRoute) => {\n  useA11yRouteChange(isAsync);\n  useDocumentTitle(title);\n\n  function routeWithTitle(routeProps: RouteComponentProps) {\n    return (\n      <QuickStartDrawerFederated>\n        <Component {...rest} {...routeProps} />\n      </QuickStartDrawerFederated>\n      );\n  }\n\n  return <Route render={routeWithTitle}/>;\n};\n\nconst PageNotFound = ({ title }: { title: string }) => {\n  useDocumentTitle(title);\n  return <Route component={NotFound}/>;\n};\n\nconst flattenedRoutes: IAppRoute[] = routes.reduce(\n  (flattened, route) => [...flattened, ...(route.routes ? route.routes : [route])],\n  [] as IAppRoute[]\n);\n\nconst AppRoutes = (): React.ReactElement => (\n  <LastLocationProvider>\n    <Switch>\n      {flattenedRoutes.map(({ path, exact, component, title, isAsync }, idx) => (\n        <RouteWithTitleUpdates\n          path={path}\n          exact={exact}\n          component={component}\n          key={idx}\n          title={title}\n          isAsync={isAsync}\n        />\n      ))}\n      <PageNotFound title=\"404 Page Not Found\"/>\n    </Switch>\n  </LastLocationProvider>\n);\n\nexport { AppRoutes, routes };\n","import { FederatedModule } from \"@app/Components/FederatedModule/FederatedModule\";\nimport React, { FunctionComponent, useContext } from \"react\";\nimport { ConfigContext } from \"@app/Config/Config\";\nimport { Loading } from \"@app/Components/Loading/Loading\";\n\nexport const QuickStartDrawerFederated: FunctionComponent = ({ children }) => {\n\n  const config = useContext(ConfigContext);\n\n  if (config === undefined) {\n    return <Loading />;\n  }\n\n  return (\n    <FederatedModule\n      scope=\"guides\"\n      module=\"./QuickStartDrawer\"\n      fallback={children}\n      render={(QuickStartDrawerFederated) => (\n        <QuickStartDrawerFederated basePath={config?.federatedModules.guides.basePath}>\n          {children}\n        </QuickStartDrawerFederated>\n      )}/>)\n};\n","function accessibleRouteChangeHandler() {\n  return window.setTimeout(() => {\n    const mainContainer = document.getElementById('primary-app-container');\n    if (mainContainer) {\n      mainContainer.focus();\n    }\n  }, 50);\n}\n\nexport {\n  accessibleRouteChangeHandler\n};\n","import React, { useContext, useState } from 'react';\nimport { InsightsContext } from \"@app/utils\";\nimport { ConfigContext } from \"@app/Config/Config\";\nimport { FederatedModule } from \"../Components/FederatedModule/FederatedModule\";\nimport { AuthContext } from \"@app/utils/auth/AuthContext\";\nimport { Loading } from \"@app/Components/Loading/Loading\";\n\nexport const DataPlanePage: React.FunctionComponent = () => {\n\n  const insights = useContext(InsightsContext);\n  const config = useContext(ConfigContext);\n  const { getToken } = useContext(AuthContext);\n  const [showCreateTopic, setShowCreateTopic] = useState(false);\n\n  // TODO useParams is not working?\n  const pathname = window.location.pathname.endsWith(\"/\") ? window.location.pathname : `${window.location.pathname}/`;\n  const parts = pathname.split(\"/\");\n  const id = parts[parts.length - 2];\n\n  if (config === undefined) {\n    return <Loading/>\n  }\n\n  const onCreateTopic = () => {\n    setShowCreateTopic(true);\n  }\n\n  const onCloseCreateTopic = () => {\n    console.log(\"on close\");\n    setShowCreateTopic(false);\n  }\n\n  const createTopicPage = <FederatedModule\n    scope=\"strimziUi\"\n    module=\"./Panels/CreateTopic.patternfly\"\n    render={(FederatedTopics) => <FederatedTopics\n      getApiOpenshiftComToken={insights.chrome.auth.getToken}\n      getToken={getToken}\n      id={id}\n      apiBasePath={config?.dataPlane.uiServerBasePath}\n      onCloseCreateTopic={onCloseCreateTopic}\n    />}\n  />;\n\n  const topicListPage = <FederatedModule\n    scope=\"strimziUi\"\n    module=\"./Panels/Topics.patternfly\"\n    render={(FederatedTopics) => <FederatedTopics\n      getApiOpenshiftComToken={insights.chrome.auth.getToken}\n      getToken={getToken}\n      id={id}\n      apiBasePath={config?.dataPlane.uiServerBasePath}\n      onCreateTopic={onCreateTopic}\n    />}\n  />;\n\n  if (showCreateTopic) {\n    return createTopicPage;\n  } else {\n    return topicListPage;\n  }\n}\n","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router';\nimport { InsightsContext } from \"@app/utils/insights\";\nimport { useDispatch } from 'react-redux';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { AlertVariant } from \"@patternfly/react-core\";\nimport { FederatedModule } from \"../Components/FederatedModule/FederatedModule\";\nimport { ConfigContext } from \"@app/Config/Config\";\nimport { Loading } from \"@app/Components/Loading/Loading\";\n\nexport const ControlPlanePage: React.FunctionComponent = () => {\n\n  const insights = useContext(InsightsContext);\n  const config = useContext(ConfigContext);\n\n  const history = useHistory();\n\n  const onConnectInstance = async (event) => {\n    if (event.id === undefined) {\n      throw new Error();\n    }\n    history.push(`/openshift-streams/kafkas/${event.id}`);\n  };\n\n  const getConnectToInstancePath = (event) => {\n    if (event.id === undefined) {\n      throw new Error();\n    }\n    return history.createHref({ pathname: `/openshift-streams/kafkas/${event.id}` });\n  }\n\n  const dispatch = useDispatch();\n\n  const addAlert = (message: string, variant?: AlertVariant) => {\n    dispatch(\n      addNotification({\n        variant: variant,\n        title: message\n      })\n    );\n\n  };\n\n  if (config === undefined) {\n    return <Loading/>\n  }\n\n  const getUsername = () => insights.chrome.auth.getUser().then(user => user.identity.user.username);\n\n  const osStreams = (\n    <FederatedModule\n      scope=\"mkUiFrontend\"\n      module=\"./OpenshiftStreams\"\n      render={(OpenshiftStreamsFederated) => {\n        return (\n          <OpenshiftStreamsFederated\n            getToken={insights.chrome.auth.getToken}\n            getUsername={getUsername}\n            onConnectToInstance={onConnectInstance}\n            getConnectToInstancePath={getConnectToInstancePath}\n            addAlert={addAlert}\n            basePath={config?.controlPlane.serviceApiBasePath}\n          />\n        );\n      }}\n    />\n  );\n\n  return osStreams;\n};\n","import { FederatedModule } from \"@app/Components/FederatedModule/FederatedModule\";\nimport React, { FunctionComponent } from 'react';\n\nexport const QuickStartCatalogFederated: FunctionComponent = () => (\n  <FederatedModule\n    scope=\"guides\"\n    module=\"./QuickStartCatalog\"\n    render={(QuickStartCatalogFederated) => <QuickStartCatalogFederated />}\n  />\n);\n","import React, { useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { connect, Provider } from 'react-redux';\nimport './App.scss';\nimport { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/files/Registry';\nimport { notifications, NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { InsightsContext } from \"@app/utils/insights\";\nimport { AppRoutes } from \"@app/Routes\";\nimport { FederatedModuleProvider } from \"./Components/FederatedModule/FederatedModule\";\n\nconst registry = getRegistry();\nregistry.register({ notifications });\n\nexport const App: React.FunctionComponent = () => {\n\n  const insights = useContext(InsightsContext);\n  const history = useHistory();\n\n  useEffect(() => {\n    insights.chrome.init();\n    insights.chrome.identifyApp('application-services');\n\n\n    insights.chrome.on('APP_NAVIGATION', event => {\n      history.push(`/${event.navId}`);\n    });\n  });\n\n  return (\n    <Provider store={registry.getStore()}>\n      <FederatedModuleProvider>\n        <NotificationsPortal/>\n        <AppRoutes/>\n      </FederatedModuleProvider>\n    </Provider>\n  );\n}\n\n/**\n * connect: https://github.com/reactjs/react-redux/blob/master/docs/api.md\n *          https://reactjs.org/docs/higher-order-components.html\n */\nexport default connect()(App);\n","import React from 'react';\nimport { Bullseye } from '@patternfly/react-core';\nimport { Spinner } from '@redhat-cloud-services/frontend-components';\nimport './Loading.css';\n\nexport const Loading: React.FunctionComponent = () => (\n  <Bullseye>\n    <Spinner/>\n  </Bullseye>\n);\n","import React from \"react\";\n\nexport type Config = {\n  controlPlane: {\n    serviceApiBasePath: string\n  }\n  dataPlane: {\n    uiServerBasePath: string\n    keycloak: {\n      authServerUrl: string,\n      clientId: string,\n      realm: string\n    }\n  }\n  federatedModules: {\n    strimziUI: FederatedModuleConfig\n    mkUiFrontend: FederatedModuleConfig\n    guides: FederatedModuleConfig\n  }\n};\n\nexport type FederatedModuleConfig = {\n  basePath: string\n  entryPoint: string\n}\n\nexport const ConfigContext = React.createContext<Config | undefined>(undefined);\n\nexport type ConfigProviderProps = {\n  configUrl: string\n}\n\nexport const ConfigProvider: React.FunctionComponent<ConfigProviderProps> = ({ configUrl, children }) => {\n  const [config, setConfig] = React.useState<Config | undefined>(undefined);\n  React.useEffect(() => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n\n    (async () => {\n      console.log('Loading config');\n      const response = await fetch(configUrl, { signal });\n      const newConfig = await response.json();\n      setConfig(newConfig);\n      console.log('Done loading config', newConfig);\n    })();\n\n    return () => controller.abort();\n  }, [configUrl]);\n\n  return (\n    <ConfigContext.Provider value={config}>\n      {children}\n    </ConfigContext.Provider>\n  );\n}\n","import ReducerRegistry from '@redhat-cloud-services/frontend-components-utilities/files/ReducerRegistry';\nimport promiseMiddleware from 'redux-promise-middleware';\n\nlet registry;\n\nexport function init (...middleware) {\n    if (registry) {\n        throw new Error('store already initialized');\n    }\n\n    registry = new ReducerRegistry({}, [\n        promiseMiddleware,\n        ...middleware\n    ]);\n\n    //If you want to register all of your reducers, this is good place.\n    /*\n     *  registry.register({\n     *    someName: (state, action) => ({...state})\n     *  });\n     */\n    return registry;\n}\n\nexport function getStore () {\n    return registry.getStore();\n}\n\nexport function register (...args) {\n    return registry.register(...args);\n}\n","import React from 'react';\n\nexport interface IAuthContext {\n  getToken: () => Promise<string>\n}\n\nexport const AuthContext = React.createContext<IAuthContext>({\n    getToken: () => Promise.resolve('')\n  }\n);\n","function getBaseName(pathname) {\n    let release = '/';\n    const pathName = pathname.split('/');\n\n    pathName.shift();\n\n    if (pathName[0] === 'beta') {\n        pathName.shift();\n        release = `/beta/`;\n    }\n\n    return `${release}${pathName[0]}`;\n}\n\nexport default getBaseName;\n","import React from 'react';\n\nexport type InsightsType = {\n  chrome: {\n    init: () => void;\n    identifyApp: (appId: string) => Promise<void>;\n    getApp: () => string;\n    getBundle: () => string;\n    getEnvironment: () => 'ci' | 'qa' | 'prod' | 'stage';\n    on: (type: string, callback: ((event: any) => void)) => void;\n    auth: {\n      getToken(): Promise<string>;\n      getUser(): Promise<UserType>;\n    };\n    isProd: boolean;\n    isBeta: () => boolean;\n    isPenTest: () => boolean;\n  };\n};\n\nexport type UserType = {\n  entitlements: {\n    [key: string]: {\n      is_entitled: boolean;\n      is_trial: boolean;\n    }\n  },\n  identity: IdentityType;\n};\n\nexport type IdentityType = {\n  account_number: string;\n  type: string;\n  internal: {\n    org_id: string;\n    account_id: string;\n  }\n  user: {\n    username: string;\n    email: string;\n    first_name: string;\n    last_name: string;\n    is_active: boolean;\n  }\n};\n\nexport const InsightsContext = React.createContext({} as InsightsType);\n","import Keycloak, { KeycloakConfig, KeycloakInitOptions, KeycloakInstance } from 'keycloak-js';\nimport Cookies from 'js-cookie';\nimport jwtDecode, { JwtPayload } from \"jwt-decode\";\nimport getUnixTime from \"date-fns/getUnixTime\";\n\nlet keycloak: KeycloakInstance | undefined;\n\nconst REFRESH_TOKEN_COOKIE_NAME = \"masSSORefreshToken\";\nconst MIN_VALIDITY = 50;\n\n\n/**\n * Get keycloak instance\n *\n * @return an initiated keycloak instance or `undefined`\n * if keycloak isn't configured\n *\n */\nexport const getKeycloakInstance = async (config: KeycloakConfig) => {\n  if (!keycloak) {\n    keycloak = await init(config);\n  }\n  return keycloak;\n}\n\n/**\n * Initiate keycloak instance.\n *\n * Set keycloak to undefined if\n * keycloak isn't configured\n *\n */\nexport const init = async (config: KeycloakConfig): Promise<KeycloakInstance | undefined> => {\n  const k = Keycloak(config);\n\n  const initOptions = {\n    responseMode: \"query\",\n  } as KeycloakInitOptions;\n\n  const storedRefreshToken = Cookies.get(REFRESH_TOKEN_COOKIE_NAME);\n  // parse the refresh token so we can later check for validity\n  let refreshJWT: JwtPayload | undefined;\n  if (storedRefreshToken) {\n    try {\n      refreshJWT = jwtDecode<JwtPayload>(storedRefreshToken);\n    } catch {\n      console.log(\"unable to parse refresh token from cookie\")\n      Cookies.remove(REFRESH_TOKEN_COOKIE_NAME);\n    }\n  }\n\n  if (refreshJWT && refreshJWT.exp) {\n    // if the JWT exists, and has an expiry\n    const now = getUnixTime(new Date());\n    if (now < refreshJWT.exp + MIN_VALIDITY) {\n      // Use the refresh token if it's still valid (make sure it's valid for at least MIN_VALIDITY)\n      try {\n        // Perform a keycloak init without a login\n        await k.init(initOptions);\n        // Set the saved refresh token into Keycloak\n        k.refreshToken = storedRefreshToken\n        // Then force a token refresh to check if the refresh token is actually valid\n        k.updateToken(-1);\n        if (k.refreshToken && k.refreshToken !== storedRefreshToken) {\n          // If we get back a refresh token that has changed, then save it\n          Cookies.set(REFRESH_TOKEN_COOKIE_NAME, k.refreshToken);\n        }\n        return k;\n      } catch {\n        // If any of the methods above error, then perform a login\n        console.log(\"refresh token is not valid, performing full login\");\n        Cookies.remove(REFRESH_TOKEN_COOKIE_NAME);\n      }\n    }\n  }\n\n  initOptions.onLoad = \"login-required\";\n  await k.init(initOptions);\n  if (k.refreshToken && k.refreshToken !== storedRefreshToken) {\n    Cookies.set(REFRESH_TOKEN_COOKIE_NAME, k.refreshToken);\n  }\n  return k;\n\n}\n\n\n/**\n * Use keycloak update token function to retrieve\n * an access token. If an unexpired access token\n * is in memory, it will return it, otherwise it\n * will use the refresh token to get a new access\n * token.\n *\n * It will also save the refresh token into a cookies\n *\n * @return keycloak token\n * @throws error if a token is not available\n *\n */\nexport const getValidAccessToken = async (): Promise<string> => {\n  await keycloak?.updateToken(MIN_VALIDITY);\n  if (!keycloak?.token) {\n    throw new Error(\"No token from keycloak!\");\n  }\n  if (keycloak?.refreshToken) {\n    // Save the most recent refresh token\n    Cookies.set(REFRESH_TOKEN_COOKIE_NAME, keycloak?.refreshToken);\n  }\n  return keycloak?.token;\n}\n\n/**\n * logout of keycloak, clear cache and offline store then redirect to\n * keycloak login page\n *\n * @param keycloak the keycloak instance\n * @param client offix client\n *\n */\nexport const logout = async (keycloak: Keycloak.KeycloakInstance | undefined) => {\n  if (keycloak) {\n    await keycloak.logout();\n  }\n}\n"],"sourceRoot":""}
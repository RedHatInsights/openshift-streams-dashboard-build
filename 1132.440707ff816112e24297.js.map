{"version":3,"file":"1132.440707ff816112e24297.js","mappings":"qRAQO,MAAMA,EAA+B,KAC1C,MAAMC,GAAS,IAAAC,aAEf,OAAID,MAAAA,OAAM,EAANA,EAAQE,cACH,SAAC,KAAe,KAGlB,SAACC,EAAkB,KAGtBA,EAAwC,KAC5C,MAAOC,EAAuBC,IAA4B,IAAAC,YACpDC,GAAO,IAAAC,YACP,iBAAEC,IAAqB,UAQ7B,OANA,IAAAC,YAAU,MACK,0C,YACc,QAAnB,EAAAH,MAAAA,OAAI,EAAJA,EAAMI,qBAAa,eAAEC,MAAMC,GAASR,EAAyBQ,UAEpE,CAACN,KAGF,SAAC,IAAS,CACRO,aAAa,mBACbC,OAASC,I,MACP,QAAiBC,IAAbD,QAAoDC,IAA1Bb,EAC5B,OAAO,SAAC,EAAAc,mBAAkB,IAG5B,MAAMC,EAA+B,QAAlB,EAAAV,WAAkB,eAAEW,QACpCC,GAAMA,EAAEC,KAAOlB,GAAyBiB,EAAEC,MAAON,MAAAA,OAAQ,EAARA,EAAUO,SAG9D,OACE,SAAC,IAA0B,CACzBP,SAAUA,EACVQ,OAAO,uBACPL,WAAYA,QAQxB","sources":["webpack://application-services-ui/./src/app/pages/ServiceRegistry/RolesPage.tsx"],"sourcesContent":["import { useState, useEffect, FunctionComponent } from \"react\";\nimport { FederatedApicurioComponent } from \"@app/pages/ServiceRegistry/FederatedApicurioComponent\";\nimport { SrsLayout } from \"@app/pages/ServiceRegistry/SrsLayout\";\nimport { useConfig, useAuth } from \"@rhoas/app-services-ui-shared\";\nimport { ServiceDownPage } from \"@app/pages\";\nimport { usePrincipal } from \"@app/components\";\nimport { AppServicesLoading } from \"@rhoas/app-services-ui-components\";\n\nexport const RolesPage: FunctionComponent = () => {\n  const config = useConfig();\n\n  if (config?.serviceDown) {\n    return <ServiceDownPage />;\n  }\n\n  return <RolesPageConnected />;\n};\n\nconst RolesPageConnected: FunctionComponent = () => {\n  const [currentlyLoggedInuser, setCurrentlyLoggedInuser] = useState<string>();\n  const auth = useAuth();\n  const { getAllPrincipals } = usePrincipal();\n\n  useEffect(() => {\n    (async () => {\n      await auth?.getUsername()?.then((user) => setCurrentlyLoggedInuser(user));\n    })();\n  }, [auth]);\n\n  return (\n    <SrsLayout\n      breadcrumbId=\"srs.global_roles\"\n      render={(registry) => {\n        if (registry === undefined || currentlyLoggedInuser === undefined) {\n          return <AppServicesLoading />;\n        }\n\n        const principals = getAllPrincipals()?.filter(\n          (p) => p.id !== currentlyLoggedInuser && p.id !== registry?.owner\n        );\n\n        return (\n          <FederatedApicurioComponent\n            registry={registry}\n            module=\"./FederatedRolesPage\"\n            principals={principals}\n          />\n        );\n      }}\n    />\n  );\n};\n\nexport default RolesPage;\n"],"names":["RolesPage","config","useConfig","serviceDown","RolesPageConnected","currentlyLoggedInuser","setCurrentlyLoggedInuser","useState","auth","useAuth","getAllPrincipals","useEffect","getUsername","then","user","breadcrumbId","render","registry","undefined","AppServicesLoading","principals","filter","p","id","owner","module"],"sourceRoot":""}
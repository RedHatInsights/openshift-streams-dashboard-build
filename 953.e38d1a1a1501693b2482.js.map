{"version":3,"file":"953.e38d1a1a1501693b2482.js","mappings":"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","sources":["webpack://application-services-ui/./src/app/utils/useDocumentTitle.ts","webpack://application-services-ui/./src/app/Routes.tsx","webpack://application-services-ui/./src/app/utils/a11y.ts","webpack://application-services-ui/./src/app/App.tsx","webpack://application-services-ui/./src/app/components/FederatedModule/moduleInfo.ts","webpack://application-services-ui/./src/app/components/FederatedModule/FederatedModule.tsx","webpack://application-services-ui/./src/app/components/Loading/Loading.tsx","webpack://application-services-ui/./src/app/components/InstanceDrawer/InstanceDrawer.tsx","webpack://application-services-ui/./src/app/components/FederatedModule/FederatedModuleContext.tsx","webpack://application-services-ui/./src/app/components/DevelopmentPreview/DevelopmentPreview.tsx","webpack://application-services-ui/./src/app/components/Dashboard/Metrics.tsx","webpack://application-services-ui/./src/app/i18n/locale/index.ts","webpack://application-services-ui/./src/app/i18n/index.ts","webpack://application-services-ui/./src/app/providers/config/utils.ts","webpack://application-services-ui/./src/app/providers/config/EmbeddedConfigContextProvider.tsx","webpack://application-services-ui/./src/app/store/index.ts","webpack://application-services-ui/./src/app/utils/getBaseName.ts","webpack://application-services-ui/./src/app/utils/keycloakAuth.ts"],"sourcesContent":["import * as React from 'react';\n\n// a custom hook for setting the page title\nexport function useDocumentTitle(title: string) {\n  React.useEffect(() => {\n    const originalTitle = document.title;\n    document.title = title;\n\n    return () => {\n      document.title = originalTitle;\n    };\n  }, [title]);\n}\n","import React from 'react';\nimport { Redirect, Route, RouteComponentProps, Switch } from 'react-router-dom';\nimport { accessibleRouteChangeHandler, useDocumentTitle } from '@app/utils';\nimport { LastLocationProvider, useLastLocation } from 'react-router-last-location';\nimport { BasenameContext } from '@bf2/ui-shared';\nimport getBaseName from './utils/getBaseName';\nimport { DevelopmentPreview, Loading } from '@app/components';\nconst QuickStartLoaderFederated = React.lazy(() => import('@app/pages/Resources/QuickStartLoaderFederated'));\n\nconst APIManagementPage = React.lazy(() => import('@app/pages/APIManagement/APIManagementPage'));\nconst ArtifactRedirect = React.lazy(() => import('@app/pages/ServiceRegistry/ArtifactsRedirect'));\nconst Artifacts = React.lazy(() => import('@app/pages/ServiceRegistry/Artifacts'));\nconst ArtifactVersionDetails = React.lazy(() => import('@app/pages/ServiceRegistry/ArtifactVersion'));\nconst DataSciencePage = React.lazy(() => import('@app/pages/DataScience/DataSciencePage'));\n\nconst CreateTopic = React.lazy(() => import('@app/pages/Kafka/CreateTopic'));\nconst Topics = React.lazy(() => import('@app/pages/Kafka/Topics'));\nconst TopicDetails = React.lazy(() => import('@app/pages/Kafka/TopicDetails'));\nconst UpdateTopic = React.lazy(() => import('@app/pages/Kafka/UpdateTopic'));\n\nconst KasPage = React.lazy(() => import('@app/pages/Kas/KasPage'));\nconst NotFoundPage = React.lazy(() => import('@app/pages/NotFound/NotFoundPage'));\nconst OverviewPage = React.lazy(() => import('@app/pages/Overview/OverviewPage'));\nconst ResourcesPage = React.lazy(() => import('@app/pages/Resources/ResourcesPage'));\nconst RulesPage = React.lazy(() => import('@app/pages/ServiceRegistry/RulesPage'));\nconst ServiceAccountsPage = React.lazy(() => import('@app/pages/ServiceAccounts/ServiceAccountsPage'));\nconst CosPage = React.lazy(() => import('@app/pages/CosPage/CosPage'));\nconst ServiceRegistryPage = React.lazy(() => import('@app/pages/ServiceRegistry/ServiceRegistryPage'));\n\nlet routeFocusTimer: number;\n\nexport interface IAppRoute {\n  label?: string; // Excluding the label will exclude the route from the nav sidebar in AppLayout\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\n  /* eslint-enable @typescript-eslint/no-explicit-any */\n  exact?: boolean;\n  path: string;\n  title: string;\n  isAsync?: boolean;\n  routes?: undefined;\n  basename?: string;\n  devPreview?: boolean;\n}\n\nexport interface IAppRouteGroup {\n  label: string;\n  routes: IAppRoute[];\n}\n\nexport type AppRouteConfig = IAppRoute | IAppRouteGroup;\n\nconst RedirectToOverview: React.FunctionComponent = () => <Redirect to=\"/overview\" />;\nconst RedirectToStreamsKafkas: React.FunctionComponent = () => <Redirect to=\"/streams/kafkas\" />;\nconst RedirectToServiceAccounts: React.FunctionComponent = () => <Redirect to=\"/service-accounts\" />;\n\nconst routes: AppRouteConfig[] = [\n  {\n    component: Topics,\n    exact: true,\n    label: 'Red Hat OpenShift Streams for Apache Kafka',\n    path: '/streams/kafkas/:id',\n    title: 'Red Hat OpenShift Streams for Apache Kafka',\n    basename: '/streams/kafkas/:id',\n    devPreview: true,\n  },\n  {\n    component: TopicDetails,\n    exact: false,\n    label: 'Red Hat OpenShift Streams for Apache Kafka',\n    path: '/streams/kafkas/:id/topics/:topicName',\n    title: 'Red Hat OpenShift Streams for Apache Kafka',\n    basename: '/streams/kafkas/:id',\n    devPreview: true,\n  },\n  {\n    component: CreateTopic,\n    exact: false,\n    label: 'Red Hat OpenShift Streams for Apache Kafka',\n    path: '/streams/kafkas/:id/topic/create',\n    title: 'Red Hat OpenShift Streams for Apache Kafka',\n    basename: '/streams/kafkas/:id',\n    devPreview: true,\n  },\n  {\n    component: UpdateTopic,\n    exact: false,\n    label: 'Red Hat OpenShift Streams for Apache Kafka',\n    path: '/streams/kafkas/:id/topic/update/:topicName',\n    title: 'Red Hat OpenShift Streams for Apache Kafka',\n    basename: '/streams/kafkas/:id',\n    devPreview: true,\n  },\n  {\n    // Handle the redirect from application-services/streams to application-services/streams/kafkas\n    component: RedirectToStreamsKafkas,\n    exact: true,\n    label: 'Red Hat OpenShift Streams for Apache Kafka',\n    path: '/streams',\n    title: 'Red Hat OpenShift Streams for Apache Kafka',\n  },\n  {\n    component: RedirectToStreamsKafkas,\n    // Handle the redirect for the old url application-services/openshift-streams to application-services/streams/kafkas\n    exact: true,\n    label: 'Red Hat OpenShift Streams for Apache Kafka',\n    path: '/openshift-streams',\n    title: 'Red Hat OpenShift Streams for Apache Kafka',\n  },\n  {\n    component: KasPage,\n    exact: true,\n    label: 'Red Hat OpenShift Streams for Apache Kafka',\n    path: '/streams/kafkas',\n    title: 'Red Hat OpenShift Streams for Apache Kafka',\n    basename: '/streams/kafkas',\n    devPreview: true,\n  },\n  {\n    component: ServiceRegistryPage,\n    exact: true,\n    label: 'Service Registry',\n    path: '/service-registry',\n    title: 'Service Registry | Red Hat OpenShift Application Services',\n    basename: '/service-registry',\n  },\n  {\n    component: Artifacts,\n    exact: true,\n    label: 'Service Registry',\n    path: '/service-registry/t/:tenantId',\n    title: 'Service Registry | Red Hat OpenShift Application Services',\n    basename: '/service-registry',\n    devPreview: true,\n  },\n  {\n    component: Artifacts,\n    exact: true,\n    label: 'Service Registry',\n    path: '/service-registry/t/:tenantId/artifacts',\n    title: 'Service Registry | Red Hat OpenShift Application Services',\n    basename: '/service-registry',\n  },\n  {\n    component: RulesPage,\n    exact: true,\n    label: 'Service Registry',\n    path: '/service-registry/t/:tenantId/rules',\n    title: 'Service Registry | Red Hat OpenShift Application Services',\n    basename: '/service-registry',\n    devPreview: true,\n  },\n  {\n    component: ArtifactRedirect,\n    exact: true,\n    label: 'Service Registry',\n    path: '/service-registry/t/:tenantId/artifacts/:groupId/:artifactId',\n    title: 'Service Registry | Red Hat OpenShift Application Services',\n    basename: '/service-registry',\n  },\n  {\n    component: ArtifactVersionDetails,\n    exact: true,\n    label: 'Service Registry',\n    path: '/service-registry/t/:tenantId/artifacts/:groupId/:artifactId/versions/:version',\n    title: 'Service Registry | Red Hat OpenShift Application Services',\n    basename: '/service-registry',\n    devPreview: true,\n  },\n  {\n    component: CosPage,\n    exact: false,\n    label: 'COS',\n    path: '/cos',\n    title: 'COS',\n    basename: `${getBaseName(window.location.pathname)}/cos`,\n    devPreview: true,\n  },\n  {\n    component: ServiceAccountsPage,\n    exact: true,\n    label: 'Red Hat OpenShift Streams for Apache Kafka',\n    path: '/service-accounts',\n    title: 'Red Hat OpenShift Streams for Apache Kafka',\n    devPreview: true,\n  },\n  {\n    component: ServiceAccountsPage,\n    exact: true,\n    label: 'Red Hat OpenShift Streams for Apache Kafka',\n    path: '/streams/service-accounts',\n    title: 'Red Hat OpenShift Streams for Apache Kafka',\n    devPreview: true,\n  },\n  {\n    component: OverviewPage,\n    exact: true,\n    label: 'Red Hat OpenShift Streams for Apache Kafka',\n    path: '/overview',\n    title: 'Red Hat OpenShift Streams for Apache Kafka',\n  },\n  {\n    component: RedirectToOverview,\n    exact: true,\n    label: 'Red Hat OpenShift Streams for Apache Kafka',\n    path: '/',\n    title: 'Red Hat OpenShift Streams for Apache Kafka',\n  },\n  {\n    component: APIManagementPage,\n    exact: true,\n    label: 'Red Hat OpenShift Streams for Apache Kafka',\n    path: '/api-management',\n    title: 'Red Hat OpenShift Streams for Apache Kafka',\n  },\n  {\n    component: DataSciencePage,\n    exact: true,\n    label: 'Red Hat OpenShift Streams for Apache Kafka',\n    path: '/data-science',\n    title: 'Red Hat OpenShift Streams for Apache Kafka',\n  },\n  {\n    component: ResourcesPage,\n    exact: true,\n    label: 'QuickStarts for Red Hat OpenShift Application Services',\n    path: '/streams/resources',\n    title: 'QuickStarts for Red Hat OpenShift Application Services',\n    devPreview: true,\n  },\n];\n\n// a custom hook for sending focus to the primary content container\n// after a view has loaded so that subsequent press of tab key\n// sends focus directly to relevant content\nconst useA11yRouteChange = (isAsync: boolean) => {\n  const lastNavigation = useLastLocation();\n  React.useEffect(() => {\n    if (!isAsync && lastNavigation !== null) {\n      routeFocusTimer = accessibleRouteChangeHandler();\n    }\n    return () => {\n      window.clearTimeout(routeFocusTimer);\n    };\n  }, [isAsync, lastNavigation]);\n};\n\nconst WrappedRoute = ({ component: Component, isAsync = false, title, basename, devPreview, ...rest }: IAppRoute) => {\n  useA11yRouteChange(isAsync);\n  useDocumentTitle(title);\n  const getBasename = () => {\n    const { computedMatch } = rest || {};\n\n    if (computedMatch?.params?.id && basename) {\n      return basename?.replace(':id', computedMatch?.params?.id);\n    }\n    return basename || '';\n  };\n\n  function wrapRoute(routeProps: RouteComponentProps) {\n    return (\n        <DevelopmentPreview show={devPreview}>\n          <BasenameContext.Provider value={{ getBasename }}>\n            <Component {...rest} {...routeProps} />\n          </BasenameContext.Provider>\n        </DevelopmentPreview>\n    );\n  }\n\n  return <Route render={wrapRoute} {...rest} />;\n};\n\nconst PageNotFound = ({ title }: { title: string }) => {\n  useDocumentTitle(title);\n  return <Route component={NotFoundPage} />;\n};\n\nconst flattenedRoutes: IAppRoute[] = routes.reduce(\n  (flattened, route) => [...flattened, ...(route.routes ? route.routes : [route])],\n  [] as IAppRoute[]\n);\n\nconst AppRoutes = (): React.ReactElement => (\n  <>\n    <LastLocationProvider>\n      <React.Suspense fallback={<Loading />}>\n        <Switch>\n          {flattenedRoutes.map(({ path, exact, component, title, isAsync, ...rest }, idx) => (\n            <WrappedRoute\n              path={path}\n              exact={exact}\n              component={component}\n              key={idx}\n              title={title}\n              isAsync={isAsync}\n              {...rest}\n            />\n          ))}\n          <PageNotFound title=\"404 Page Not Found\" />\n        </Switch>\n      </React.Suspense>\n    </LastLocationProvider>\n    <QuickStartLoaderFederated />\n  </>\n);\n\nexport { AppRoutes, routes };\n","function accessibleRouteChangeHandler() {\n  return window.setTimeout(() => {\n    const mainContainer = document.getElementById('primary-app-container');\n    if (mainContainer) {\n      mainContainer.focus();\n    }\n  }, 50);\n}\n\nexport { accessibleRouteChangeHandler };\n","import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications/';\nimport './App.scss';\nimport { InsightsType } from '@app/utils';\nimport { AppRoutes } from '@app/Routes';\nimport { FederatedModuleProvider } from \"@app/components\";\n\nexport const App: React.FunctionComponent = () => {\n  const insights: InsightsType = window['insights'];\n  const history = useHistory();\n\n  const getAppId = () => {\n    const defaultAppId = 'overview';\n\n    const parts = history.location.pathname.split('/');\n    if (parts.length > 1) {\n      if (parts[1] === '') {\n        return defaultAppId;\n      } else {\n        if (parts[1] === 'openshift-streams') {\n          return 'streams';\n        }\n        return parts[1];\n      }\n    } else {\n      return defaultAppId;\n    }\n  };\n\n  useEffect(() => {\n    insights.chrome.init();\n    const appId = getAppId();\n    insights.chrome.identifyApp(appId);\n\n    const unregister = insights.chrome.on('APP_NAVIGATION', (event) => {\n      const streamUrls = ['kafkas', 'service-accounts', 'resources'];\n      history.push(`/${streamUrls.includes(event.navId) ? 'streams/' : ''}${event.navId}`);\n    });\n    return () => {\n      unregister();\n    };\n  }, [getAppId, history, insights.chrome]);\n\n  return (\n    <FederatedModuleProvider>\n      <NotificationsPortal />\n      <AppRoutes />\n    </FederatedModuleProvider>\n  );\n};\n\n/**\n * connect: https://github.com/reactjs/react-redux/blob/master/docs/api.md\n *          https://reactjs.org/docs/higher-order-components.html\n */\nexport default connect()(App);\n","export type ModuleInfo = {\n  entryPoint: string\n  basePath: string\n}\n\nexport const getModuleInfo = async (baseUrl: string, scope: string, fallbackBasePath?: string): Promise<ModuleInfo | undefined> => {\n\n  const fedModsJsonFileName = \"fed-mods.json\";\n\n  type FedMods = {\n    [key: string]: {\n      entry: string[],\n      modules: string[]\n    };\n  };\n\n  const fetchModuleInfo = async (basePath: string) => {\n    const url = `${basePath}/${fedModsJsonFileName}`;\n    const response = await fetch(url);\n    return await response.json()\n      .then(json => json as FedMods)\n      .then(fedMods => fedMods[scope])\n      .then(s => s.entry[0])\n      .then(path => {\n        if (path.startsWith(basePath)) {\n          return {\n            entryPoint: path,\n            basePath\n          };\n        }\n        return {\n          entryPoint: `${basePath}${path}`,\n          basePath\n        }\n      });\n  }\n\n  try {\n    // First try to fetch the main entry point\n    return await fetchModuleInfo(baseUrl);\n  } catch (e) {\n    if (fallbackBasePath) {\n      try {\n        // If fetching the main entry point failed, and there is a fallback, try fetching that\n        // This allows us to use remote versions locally, transparently\n        return await fetchModuleInfo(fallbackBasePath)\n      } catch (e1) {\n        return undefined;\n      }\n    }\n  }\n  return undefined;\n}\n","/* eslint-disable camelcase */\n/* eslint-disable no-undef */\nimport React, { ComponentType, ReactNode, useEffect, useRef, useState } from 'react';\nimport { AssetsContext } from \"@bf2/ui-shared\";\nimport { Loading } from \"@app/components/Loading/Loading\";\nimport { getModuleInfo, ModuleInfo } from \"@app/components/FederatedModule/moduleInfo\";\nimport { FederatedModuleContext } from \"@app/components\";\n\nconst useIsMounted = () => {\n  const isMounted = useRef(false)\n  useEffect(() => {\n    isMounted.current = true\n    return () => {\n      isMounted.current = false\n    }\n  }, [])\n  return isMounted\n}\n\ndeclare function __webpack_init_sharing__(shareScope: string);\n\ndeclare const __webpack_share_scopes__: {\n  default: unknown\n};\n\ntype Container = {\n  init: (shareScopes: unknown) => Promise<void>;\n  get: (module: string) => Promise<{ (): { default: ComponentType<any>; } }>;\n};\n\nfunction loadComponent(scope, module) {\n  return async () => {\n    // Initializes the share scope. This fills it with known provided modules from this build and all remotes\n    await __webpack_init_sharing__('default');\n    const container = window[scope] as unknown as Container; // or get the container somewhere else\n    // Initialize the container, it may provide shared modules\n    await container.init(__webpack_share_scopes__.default);\n    const factory = await container.get(module);\n    const Module = factory();\n    console.debug(`loaded ${module} from ${scope}`);\n    return Module;\n  };\n}\n\nconst useDynamicScript = (url: string) => {\n  const isMounted = useIsMounted()\n  const [ready, setReady] = React.useState(false);\n  const [failed, setFailed] = React.useState(false);\n\n  React.useEffect(() => {\n    let element;\n    if (isMounted.current) {\n      if (!url) {\n        setFailed(true);\n        return;\n      }\n\n      element = document.createElement('script');\n\n      element.src = url;\n      element.type = 'text/javascript';\n      element.async = true;\n\n      setReady(false);\n      setFailed(false);\n\n      element.onload = () => {\n        console.log(`Dynamic federated module Loaded: ${url}`);\n        setReady(true);\n      };\n\n      element.onerror = () => {\n        console.error(`Dynamic federated module Error: ${url}`);\n        setReady(false);\n        setFailed(true);\n      };\n\n      document.head.appendChild(element);\n    }\n\n    return () => {\n      if (element) {\n        console.log(`Dynamic federated module Removed: ${url}`);\n        document.head.removeChild(element);\n      }\n    };\n  }, [url]);\n\n  return {\n    ready,\n    failed\n  };\n};\n\nexport type FederatedModuleProps = {\n  scope: string;\n  module: string;\n  render: (component: React.LazyExoticComponent<React.ComponentType<any>>) => ReactNode;\n  fallback?: React.ReactNode;\n}\n\nexport const FederatedModule: React.FunctionComponent<FederatedModuleProps> = ({ scope, module, render, fallback }) => {\n  const isMounted = useIsMounted()\n\n  const federatedModuleContext = React.useContext(FederatedModuleContext);\n  const [moduleInfo, setModuleInfo] = useState<ModuleInfo | undefined>();\n\n  useEffect(() => {\n    const fetchModuleInfo = async () => {\n      const moduleInfo = await getModuleInfo(federatedModuleContext[scope].basePath, scope, federatedModuleContext[scope].fallbackBasePath);\n      if (isMounted.current) {\n        setModuleInfo(moduleInfo);\n      }\n    }\n    fetchModuleInfo();\n  }, [scope, federatedModuleContext]);\n\n  if (moduleInfo !== undefined) {\n    return <DynamicFederatedModule scope={scope} module={module} render={render} moduleInfo={moduleInfo}/>\n  }\n  if (fallback !== undefined) {\n    return <>{fallback}</>;\n  }\n  return null;\n}\n\ntype DynamicFederatedModuleProps = FederatedModuleProps & {\n  moduleInfo: ModuleInfo\n}\n\nconst DynamicFederatedModule: React.FunctionComponent<DynamicFederatedModuleProps> = ({\n                                                                                        moduleInfo,\n                                                                                        fallback,\n                                                                                        scope,\n                                                                                        render,\n                                                                                        module\n                                                                                      }) => {\n  const { ready, failed } = useDynamicScript(moduleInfo.entryPoint);\n\n  if (ready && !failed) {\n    const Component = React.lazy(\n      loadComponent(scope, module)\n    );\n\n    const getPath = () => {\n      return moduleInfo.basePath\n    }\n\n    return (\n      <AssetsContext.Provider value={{ getPath }}>\n        <React.Suspense fallback={<Loading/>}>\n          {render(Component)}\n        </React.Suspense>\n      </AssetsContext.Provider>\n    );\n  }\n\n  if (fallback) {\n    return <>{fallback}</>;\n  }\n  return null;\n}\n","import React from 'react';\nimport { Bullseye } from '@patternfly/react-core';\nimport { Spinner } from '@redhat-cloud-services/frontend-components/Spinner';\n\nexport const Loading: React.FunctionComponent = () => (\n  <Bullseye>\n    <Spinner />\n  </Bullseye>\n);\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useConfig } from '@bf2/ui-shared';\nimport { Loading, FederatedModule } from '@app/components';\nimport { KafkaRequest } from '@openapi/kas';\n\ntype InstanceDrawerProps = {\n  kafkaDetail: KafkaRequest | undefined;\n  isExpanded: boolean | undefined;\n  activeTab: string;\n  onClose: () => void;\n  isOpenDeleteInstanceModal: boolean;\n  setIsOpenDeleteInstanceModal: (isopen: boolean) => void;\n};\n\nexport const InstanceDrawer: React.FC<InstanceDrawerProps> = ({\n  isExpanded,\n  onClose,\n  kafkaDetail,\n  activeTab,\n  children,\n  setIsOpenDeleteInstanceModal,\n  isOpenDeleteInstanceModal,\n}) => {\n  const config = useConfig()\n  if (config === undefined) {\n    return <Loading />;\n  }\n\n  const { authServerUrl, realm } = config?.masSso || {};\n  const tokenEndPointUrl = `${authServerUrl}/realms/${realm}/protocol/openid-connect/token`;\n\n  return (\n    <FederatedModule\n      scope=\"kas\"\n      module=\"./InstanceDrawer\"\n      fallback={children}\n      render={(InstanceDrawerFederated) => {\n        return (\n          <InstanceDrawerFederated\n            tokenEndPointUrl={tokenEndPointUrl}\n            isExpanded={isExpanded}\n            onClose={onClose}\n            instanceDetail={kafkaDetail}\n            activeTab={activeTab}\n            isOpenDeleteInstanceModal={isOpenDeleteInstanceModal}\n            setIsOpenDeleteInstanceModal={setIsOpenDeleteInstanceModal}\n          >\n            {children}\n          </InstanceDrawerFederated>\n        );\n      }}\n    />\n  );\n};\n","import React from \"react\";\nimport { FederatedModuleConfig, useConfig } from \"@bf2/ui-shared\";\nimport { Loading } from \"@app/components\";\n\nexport type FederatedModuleContextProps = {\n  [module: string]: FederatedModuleConfig\n}\n\nexport const FederatedModuleContext = React.createContext<FederatedModuleContextProps>({});\n\nexport const FederatedModuleProvider: React.FunctionComponent = ({ children }) => {\n\n  const config = useConfig();\n\n  if (config === undefined) {\n    return <Loading/>;\n  }\n\n  return (\n    <FederatedModuleContext.Provider value={config.federatedModules}>\n      {children}\n    </FederatedModuleContext.Provider>\n  );\n}\n","import React from 'react';\nimport { Banner, Bullseye, Button, Popover } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\n\nexport type DevelopmentPreviewProps = {\n  show?: boolean\n}\n\nexport const DevelopmentPreview: React.FunctionComponent<DevelopmentPreviewProps> = ({ children, show }) => {\n  const { t } = useTranslation();\n  if (show) {\n    return <div id='scrollablePageMain' className='pf-c-page__main' style={{ height: '100%' }}>\n      <Banner isSticky variant=\"info\">\n        <Bullseye>\n          <Popover\n            aria-label=\"Development Preview Button\"\n            hasAutoWidth\n            bodyContent={\n              <div>{t('common.developmentPreviewTooltip')}</div>\n            }\n            position='bottom'\n            minWidth='300px'\n            maxWidth='25%'>\n            <Button className='app-services-ui--button--dev-preview' variant='link'>{t('common.developmentPreview')}</Button>\n          </Popover>\n        </Bullseye>\n      </Banner>\n      {children}\n    </div>\n  }\n  return (\n    <>{children}</>\n  )\n}\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useConfig, useBasename } from '@bf2/ui-shared';\nimport { Loading, FederatedModule } from '@app/components';\n\ntype MetricsProps = {\n  kafkaId: string;\n};\n\nexport const Metrics: React.FC<MetricsProps> = ({ kafkaId }) => {\n  const history = useHistory();\n  const config = useConfig();\n  const { getBasename } = useBasename() || {};\n  const basename = getBasename && getBasename();\n\n  if (config === undefined) {\n    return <Loading />;\n  }\n\n  const onCreateTopic = () => {\n    history.push(`${basename}/topic/create`);\n  };\n\n  return (\n    <FederatedModule\n      scope=\"kas\"\n      module=\"./Metrics\"\n      render={(MetricsFederated) => <MetricsFederated kafkaId={kafkaId} onCreateTopic={onCreateTopic} />}\n    />\n  );\n};\n","import en from './en.json';\n\nexport const resources = {\n  en: {\n    translation: en,\n  },\n};\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { resources } from './locale';\n// don't want to use this?\n// have a look at the Quick start guide\n// for passing in lng and translations on init\n\nconst appServicesi18n = i18n.createInstance();\n\nappServicesi18n\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  .use(LanguageDetector)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    detection: {\n      order: ['htmlTag', 'navigator'],\n      caches: [],\n    },\n    fallbackLng: 'en',\n    debug: true,\n\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n    resources,\n  });\n\nexport default appServicesi18n;\n","import { Config } from '@bf2/ui-shared';\n\nconst defaultHostname = 'console.redhat.com';\n\ntype FederatedModulesConfig = Config['federatedModules'];\n\ntype EnvironmentConfig = {\n  hostnames: string[];\n  type?: string;\n  config: Omit<Config, 'federatedModules'>;\n};\n\nexport type EnvironmentConfigs = Array<EnvironmentConfig>;\n\nexport const filterConfig = (\n  environmentConfig: EnvironmentConfigs,\n  federatedModulesConfig: FederatedModulesConfig\n): Config => {\n  const hostname = window.location.hostname;\n  console.log(`Loading config for ${hostname}`);\n  const possibleConfigs = environmentConfig.filter((entry) => entry.hostnames.includes(hostname));\n  if (possibleConfigs.length > 1) {\n    throw new Error(`Unable to load config for ${hostname}, more than one config matched ${possibleConfigs}`);\n  } else if (possibleConfigs.length < 1) {\n    // Use the default config\n    const possibleDefaultConfigs = environmentConfig.filter((entry) => entry.hostnames.includes(defaultHostname));\n    if (possibleDefaultConfigs.length > 1) {\n      throw new Error(`Unable to load default config, more than one config matched ${possibleConfigs}`);\n    } else if (possibleDefaultConfigs.length < 1) {\n      throw new Error(`Unable to load default config, no configs matched`);\n    } else {\n      const config = addFederatedModulesToConfig(possibleDefaultConfigs[0], federatedModulesConfig);\n      console.log('Done loading default config', config);\n      return config;\n    }\n  }\n  const config = addFederatedModulesToConfig(possibleConfigs[0], federatedModulesConfig);\n  console.log('Done loading default config', config);\n  return config;\n};\n\nconst addFederatedModulesToConfig = (\n  environmentConfig: EnvironmentConfig,\n  federatedModulesConfig: FederatedModulesConfig\n): Config => {\n  if (environmentConfig.type !== 'proxy') {\n    const federatedModules = {} as FederatedModulesConfig;\n    Object.entries(federatedModulesConfig).forEach(([k, v]) => {\n      federatedModules[k] = {\n        basePath: v.fallbackBasePath,\n      };\n    });\n    return {\n      ...environmentConfig.config,\n      federatedModules,\n    };\n  }\n  return {\n    ...environmentConfig.config,\n    federatedModules: federatedModulesConfig,\n  };\n};\n","import React from \"react\";\nimport { ConfigContext } from '@bf2/ui-shared';\nimport config from '../../../../config/config.json';\nimport { EnvironmentConfigs, filterConfig } from \"@app/providers/config/utils\";\n\n\nexport const EmbeddedConfigProvider: React.FunctionComponent = ({ children }) => {\n  const c = config.config as EnvironmentConfigs;\n  return (\n    <ConfigContext.Provider value={filterConfig(c, config.federatedModules)}>\n      {children}\n    </ConfigContext.Provider>\n  );\n}\n","import ReducerRegistry from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry/ReducerRegistry';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nlet registry;\n\nexport function init(...middleware) {\n  if (!registry) {\n    registry = new ReducerRegistry({}, [promiseMiddleware, ...middleware]);\n\n    //If you want to register all of your reducers, this is good place.\n\n    registry.register({\n      notifications: notificationsReducer,\n    });\n  }\n\n  return registry;\n}\n\nexport function getStore() {\n  return registry.getStore();\n}\n\nexport function register(...args) {\n  return registry.register(...args);\n}\n","function getBaseName(pathname) {\n  let release = '/';\n  const pathName = pathname.split('/');\n\n  pathName.shift();\n\n  if (pathName[0] === 'beta') {\n    pathName.shift();\n    release = `/beta/`;\n  }\n\n  return `${release}${pathName[0]}`;\n}\n\nexport default getBaseName;\n","import Keycloak, { KeycloakConfig, KeycloakInitOptions, KeycloakInstance } from 'keycloak-js';\nimport Cookies from 'js-cookie';\nimport jwtDecode, { JwtPayload } from 'jwt-decode';\nimport getUnixTime from 'date-fns/getUnixTime';\nimport { Base64 } from 'js-base64';\n\nlet keycloak: KeycloakInstance | undefined;\n\nconst OLD_REFRESH_TOKEN_COOKIE_NAME = 'masSSORefreshToken';\n// Clean out the old token from cookies\nCookies.remove(OLD_REFRESH_TOKEN_COOKIE_NAME);\n\nconst REFRESH_TOKEN_COOKIE_NAME = 'mrt';\nconst MIN_VALIDITY = 50;\n\ntype StoredToken = {\n  refreshToken: string;\n  rhUserId: string;\n};\n\n/**\n * Get keycloak instance\n *\n * @return an initiated keycloak instance or `undefined`\n * if keycloak isn't configured\n *\n */\nexport const getKeycloakInstance = async (config: KeycloakConfig, getInsightsAccessToken?: () => Promise<string>) => {\n  if (getInsightsAccessToken === undefined) {\n    return undefined;\n  }\n  if (!keycloak) {\n    keycloak = await init(config, getInsightsAccessToken);\n  }\n  return keycloak;\n};\n\nconst storeRefreshToken = async (refreshToken: string, getInsightsAccessToken: () => Promise<string>) => {\n  const insightsToken = await getInsightsAccessToken();\n  const insightsJWT = jwtDecode<JwtPayload>(insightsToken);\n  const rhUserId = insightsJWT['account_id'];\n  const storedToken = JSON.stringify({\n    refreshToken,\n    rhUserId,\n  } as StoredToken);\n  const encoded = Base64.encode(storedToken);\n  console.debug('storing refresh token');\n  Cookies.set(REFRESH_TOKEN_COOKIE_NAME, encoded);\n};\n\nconst clearRefreshToken = () => {\n  console.debug('clearing stored refresh token');\n  Cookies.remove(REFRESH_TOKEN_COOKIE_NAME);\n};\n\nconst retrieveRefreshToken = async (getInsightsAccessToken: () => Promise<string>): Promise<string | undefined> => {\n  const encoded = Cookies.get(REFRESH_TOKEN_COOKIE_NAME);\n  if (encoded === undefined) {\n    return undefined;\n  }\n  const storedToken = Base64.decode(encoded);\n  const storedRefreshToken = (JSON.parse(storedToken) as unknown) as StoredToken;\n  // parse the refresh token so we can later check for validity\n  let refreshJWT: JwtPayload | undefined;\n  try {\n    refreshJWT = jwtDecode<JwtPayload>(storedRefreshToken.refreshToken);\n  } catch {\n    clearRefreshToken();\n    return undefined;\n  }\n\n  // if the JWT exists, and has an expiry\n  if (refreshJWT === undefined || refreshJWT.exp === undefined) {\n    clearRefreshToken();\n    return undefined;\n  }\n  const now = getUnixTime(new Date());\n  if (now > refreshJWT.exp + MIN_VALIDITY) {\n    // the token is invalid\n    clearRefreshToken();\n    return undefined;\n  }\n  const insightsToken = await getInsightsAccessToken();\n  const insightsJWT = jwtDecode<JwtPayload>(insightsToken);\n  if (insightsJWT['account_id'] !== storedRefreshToken.rhUserId) {\n    clearRefreshToken();\n    return undefined;\n  }\n  return storedRefreshToken.refreshToken;\n};\n\n/**\n * Initiate keycloak instance.\n *\n * Set keycloak to undefined if\n * keycloak isn't configured\n *\n */\nconst init = async (\n  config: KeycloakConfig,\n  getInsightsAccessToken: () => Promise<string>\n): Promise<KeycloakInstance | undefined> => {\n  const initOptions = {\n    responseMode: 'query',\n  } as KeycloakInitOptions;\n\n  const refreshToken = await retrieveRefreshToken(getInsightsAccessToken);\n\n  if (refreshToken) {\n    const rk = Keycloak(config);\n    // Use the refresh token\n    try {\n      // Perform a keycloak init without a login\n      await rk.init(initOptions);\n      // Set the saved refresh token into Keycloak\n      rk.refreshToken = refreshToken;\n      // Then force a token refresh to check if the refresh token is actually valid\n      await rk.updateToken(-1);\n      return rk;\n    } catch {\n      clearRefreshToken();\n      await logout(rk);\n    }\n  }\n  const lk = Keycloak(config);\n  initOptions.onLoad = 'login-required';\n  await lk.init(initOptions);\n  if (lk.refreshToken) {\n    await storeRefreshToken(lk.refreshToken, getInsightsAccessToken);\n  }\n  return lk;\n};\n\n/**\n * Use keycloak update token function to retrieve\n * an access token. If an unexpired access token\n * is in memory, it will return it, otherwise it\n * will use the refresh token to get a new access\n * token.\n *\n * It will also save the refresh token into a cookies\n *\n * @return keycloak token\n * @throws error if a token is not available\n *\n */\nexport const getMASSSOToken = async (getInsightsAccessToken: () => Promise<string>): Promise<string> => {\n  await keycloak?.updateToken(MIN_VALIDITY);\n  if (!keycloak?.token || !keycloak.tokenParsed) {\n    throw new Error('No token from keycloak!');\n  }\n  const insightsToken = await getInsightsAccessToken();\n  const insightsJWT = jwtDecode<JwtPayload>(insightsToken);\n  if (insightsJWT['account_id'] !== keycloak.tokenParsed['rh-user-id']) {\n    await logout(keycloak);\n    return '';\n  }\n  if (keycloak?.refreshToken) {\n    // Save the most recent refresh token\n    await storeRefreshToken(keycloak.refreshToken, getInsightsAccessToken);\n  }\n  return keycloak?.token;\n};\n\n/**\n * logout of keycloak, clear cache and offline store then redirect to\n * keycloak login page\n *\n * @param k the keycloak instance\n * @param client offix client\n *\n */\nexport const logout = async (k: Keycloak.KeycloakInstance | undefined) => {\n  if (k) {\n    console.info('Trigger MASSSO logout');\n    await k.logout();\n  }\n};\n"],"names":["useDocumentTitle","title","originalTitle","document","routeFocusTimer","QuickStartLoaderFederated","APIManagementPage","ArtifactRedirect","Artifacts","ArtifactVersionDetails","DataSciencePage","CreateTopic","Topics","TopicDetails","UpdateTopic","KasPage","NotFoundPage","OverviewPage","ResourcesPage","RulesPage","ServiceAccountsPage","CosPage","RedirectToStreamsKafkas","Redirect","to","routes","component","exact","label","path","basename","devPreview","getBaseName","window","location","pathname","useA11yRouteChange","isAsync","lastNavigation","useLastLocation","setTimeout","mainContainer","getElementById","focus","clearTimeout","WrappedRoute","Component","rest","getBasename","computedMatch","params","id","replace","Route","render","routeProps","show","BasenameContext","value","PageNotFound","flattenedRoutes","reduce","flattened","route","AppRoutes","LastLocationProvider","fallback","Switch","map","idx","key","connect","insights","history","useHistory","getAppId","defaultAppId","parts","split","length","useEffect","chrome","init","appId","identifyApp","unregister","on","event","push","includes","navId","getModuleInfo","baseUrl","scope","fallbackBasePath","Promise","fetchModuleInfo","basePath","fetch","json","then","fedMods","s","entry","startsWith","entryPoint","undefined","useIsMounted","isMounted","useRef","current","FederatedModule","module","federatedModuleContext","useState","moduleInfo","setModuleInfo","DynamicFederatedModule","url","ready","setReady","failed","setFailed","element","createElement","src","type","async","onload","console","log","onerror","error","head","appendChild","removeChild","useDynamicScript","container","default","get","factory","Module","debug","loadComponent","AssetsContext","getPath","Loading","Bullseye","InstanceDrawer","isExpanded","onClose","kafkaDetail","activeTab","children","setIsOpenDeleteInstanceModal","isOpenDeleteInstanceModal","config","useConfig","masSso","tokenEndPointUrl","InstanceDrawerFederated","instanceDetail","FederatedModuleContext","FederatedModuleProvider","Provider","federatedModules","DevelopmentPreview","t","useTranslation","className","style","height","Banner","isSticky","variant","Popover","hasAutoWidth","bodyContent","position","minWidth","maxWidth","Button","Metrics","kafkaId","useBasename","onCreateTopic","MetricsFederated","resources","en","translation","appServicesi18n","use","initReactI18next","detection","order","caches","fallbackLng","interpolation","escapeValue","filterConfig","environmentConfig","federatedModulesConfig","hostname","possibleConfigs","filter","hostnames","Error","possibleDefaultConfigs","addFederatedModulesToConfig","Object","entries","forEach","k","v","EmbeddedConfigProvider","c","ConfigContext","registry","middleware","register","notifications","release","pathName","shift","keycloak","REFRESH_TOKEN_COOKIE_NAME","getKeycloakInstance","getInsightsAccessToken","storeRefreshToken","refreshToken","insightsToken","insightsJWT","rhUserId","storedToken","JSON","stringify","encoded","Base64","clearRefreshToken","retrieveRefreshToken","storedRefreshToken","parse","refreshJWT","exp","Date","initOptions","responseMode","rk","updateToken","logout","lk","onLoad","getMASSSOToken","token","tokenParsed","info"],"sourceRoot":""}
{"version":3,"file":"230.648c097e6749378e6b3f.js","mappings":"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","sources":["webpack://application-services-ui/./node_modules/decode-uri-component/index.js","webpack://application-services-ui/./node_modules/filter-obj/index.js","webpack://application-services-ui/./node_modules/query-string/index.js","webpack://application-services-ui/./node_modules/split-on-first/index.js","webpack://application-services-ui/./node_modules/strict-uri-encode/index.js"],"sourcesContent":["'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn decodeURIComponent(components.join(''));\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher);\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher);\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n","'use strict';\nmodule.exports = function (obj, predicate) {\n\tvar ret = {};\n\tvar keys = Object.keys(obj);\n\tvar isArr = Array.isArray(predicate);\n\n\tfor (var i = 0; i < keys.length; i++) {\n\t\tvar key = keys[i];\n\t\tvar val = obj[key];\n\n\t\tif (isArr ? predicate.indexOf(key) !== -1 : predicate(key, val, obj)) {\n\t\t\tret[key] = val;\n\t\t}\n\t}\n\n\treturn ret;\n};\n","'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\nconst splitOnFirst = require('split-on-first');\nconst filterObject = require('filter-obj');\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSep = options.arrayFormat === 'bracket-separator' ?\n\t\t\t\t'[]=' :\n\t\t\t\t'=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tcase 'bracket-separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[\\])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null ?\n\t\t\t\t\t[] :\n\t\t\t\t\tvalue.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], arrayValue);\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nfunction parse(query, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn ret;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of query.split('&')) {\n\t\tif (param === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : ['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options);\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\tfor (const key of Object.keys(ret)) {\n\t\tconst value = ret[key];\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const k of Object.keys(value)) {\n\t\t\t\tvalue[k] = parseValue(value[k], options);\n\t\t\t}\n\t\t} else {\n\t\t\tret[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn ret;\n\t}\n\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ','\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key])) ||\n\t\t(options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const key of Object.keys(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = object[key];\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (url, options) => {\n\toptions = Object.assign({\n\t\tdecode: true\n\t}, options);\n\n\tconst [url_, hash] = splitOnFirst(url, '#');\n\n\treturn Object.assign(\n\t\t{\n\t\t\turl: url_.split('?')[0] || '',\n\t\t\tquery: parse(extract(url), options)\n\t\t},\n\t\toptions && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}\n\t);\n};\n\nexports.stringifyUrl = (object, options) => {\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true\n\t}, options);\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = exports.extract(object.url);\n\tconst parsedQueryFromUrl = exports.parse(queryFromUrl, {sort: false});\n\n\tconst query = Object.assign(parsedQueryFromUrl, object.query);\n\tlet queryString = exports.stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\thash = `#${options[encodeFragmentIdentifier] ? encode(object.fragmentIdentifier, options) : object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n};\n\nexports.pick = (input, filter, options) => {\n\toptions = Object.assign({\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false\n\t}, options);\n\n\tconst {url, query, fragmentIdentifier} = exports.parseUrl(input, options);\n\treturn exports.stringifyUrl({\n\t\turl,\n\t\tquery: filterObject(query, filter),\n\t\tfragmentIdentifier\n\t}, options);\n};\n\nexports.exclude = (input, filter, options) => {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn exports.pick(input, exclusionFilter, options);\n};\n","'use strict';\n\nmodule.exports = (string, separator) => {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (separator === '') {\n\t\treturn [string];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [string];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n};\n","'use strict';\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n"],"names":["token","singleMatcher","RegExp","multiMatcher","decodeComponents","components","split","decodeURIComponent","join","err","length","left","slice","right","Array","prototype","concat","call","decode","input","tokens","match","i","module","exports","encodedURI","TypeError","replace","replaceMap","exec","result","entries","Object","keys","key","customDecodeURIComponent","obj","predicate","ret","isArr","isArray","val","indexOf","strictUriEncode","decodeComponent","splitOnFirst","filterObject","encodeFragmentIdentifier","Symbol","validateArrayFormatSeparator","value","encode","options","strict","encodeURIComponent","keysSorter","sort","a","b","Number","map","removeHash","hashStart","extract","queryStart","parseValue","parseNumbers","isNaN","trim","parseBooleans","toLowerCase","parse","query","assign","arrayFormat","arrayFormatSeparator","formatter","accumulator","undefined","includes","isEncodedArray","newValue","item","test","arrayValue","parserForArrayFormat","create","param","k","reduce","Boolean","stringify","object","shouldFilter","skipNull","skipEmptyString","index","keyValueSep","encoderForArrayFormat","objectCopy","filter","x","parseUrl","url","url_","hash","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","queryFromUrl","parsedQueryFromUrl","queryString","getHash","pick","exclude","exclusionFilter","string","separator","separatorIndex","str","charCodeAt","toString","toUpperCase"],"sourceRoot":""}
{"version":3,"file":"4359.beb14d1e3ef8ca7ee0cc.js","mappings":"qRAQaA,EAAqC,WAChD,IAAMC,GAAS,IAAAC,aAEf,OAAID,MAAAA,OAAM,EAANA,EAAQE,aACH,kBAAC,KAAe,MAGlB,kBAACC,EAAkB,OAGtBA,EAA8C,WAC5C,OAAoD,IAAAC,YAAnDC,EAAqB,KAAEC,EAAwB,KAChDC,GAAO,IAAAC,WACLC,GAAqB,UAAc,iBAQ3C,OANA,IAAAC,YAAU,YACP,gD,uEACC,SAAyB,QAAnB,EAAAH,MAAAA,OAAI,EAAJA,EAAMI,qBAAa,eAAEC,MAAK,SAACC,GAAS,OAAAP,EAAyBO,O,cAAnE,S,aAED,CAACN,IAGF,kBAAC,IAAS,CACRO,aAAa,mBACbC,OAAQ,SAACC,G,MACP,QAAiBC,IAAbD,QAAoDC,IAA1BZ,EAC5B,OAAO,kBAAC,EAAAa,mBAAkB,MAG5B,IAAMC,EAA+B,QAAlB,EAAAV,WAAkB,eAAEW,QACrC,SAACC,GAAM,OAAAA,EAAEC,KAAOjB,GAAyBgB,EAAEC,MAAON,MAAAA,OAAQ,EAARA,EAAUO,UAG9D,OAAO,kBAAC,IAA0B,CAACP,SAAUA,EAAUQ,OAAO,uBAAuBL,WAAYA,QAMzG","sources":["webpack://application-services-ui/./src/app/pages/ServiceRegistry/RolesPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FederatedApicurioComponent } from '@app/pages/ServiceRegistry/FederatedApicurioComponent';\nimport { SrsLayout } from '@app/pages/ServiceRegistry/SrsLayout';\nimport { useConfig, useAuth } from '@rhoas/app-services-ui-shared';\nimport { ServiceDownPage } from '@app/pages';\nimport { usePrincipal } from '@app/components';\nimport { AppServicesLoading } from '@rhoas/app-services-ui-components';\n\nexport const RolesPage: React.FunctionComponent = () => {\n  const config = useConfig();\n\n  if (config?.serviceDown) {\n    return <ServiceDownPage />;\n  }\n\n  return <RolesPageConnected />;\n};\n\nconst RolesPageConnected: React.FunctionComponent = () => {\n  const [currentlyLoggedInuser, setCurrentlyLoggedInuser] = useState<string>();\n  const auth = useAuth();\n  const { getAllPrincipals } = usePrincipal();\n\n  useEffect(() => {\n    (async () => {\n      await auth?.getUsername()?.then((user) => setCurrentlyLoggedInuser(user));\n    })();\n  }, [auth]);\n\n  return (\n    <SrsLayout\n      breadcrumbId=\"srs.global_roles\"\n      render={(registry) => {\n        if (registry === undefined || currentlyLoggedInuser === undefined) {\n          return <AppServicesLoading />;\n        }\n\n        const principals = getAllPrincipals()?.filter(\n          (p) => p.id !== currentlyLoggedInuser && p.id !== registry?.owner\n        );\n\n        return <FederatedApicurioComponent registry={registry} module=\"./FederatedRolesPage\" principals={principals} />;\n      }}\n    />\n  );\n};\n\nexport default RolesPage;\n"],"names":["RolesPage","config","useConfig","serviceDown","RolesPageConnected","useState","currentlyLoggedInuser","setCurrentlyLoggedInuser","auth","useAuth","getAllPrincipals","useEffect","getUsername","then","user","breadcrumbId","render","registry","undefined","AppServicesLoading","principals","filter","p","id","owner","module"],"sourceRoot":""}
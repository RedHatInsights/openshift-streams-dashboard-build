{"version":3,"file":"8576.5744b8c255200e8014b7.js","mappings":"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","sources":["webpack://application-services-ui/./node_modules/@patternfly/react-icons/dist/esm/icons/external-link-alt-icon.js","webpack://application-services-ui/./static/images/Logo-Red_Hat-OpenShift_Streams_for_Apache_Kafka-A-Standard-RGB.svg","webpack://application-services-ui/./static/images/Logo-Red_Hat-OpenShift-API_Management-A-Standard-RGB.svg","webpack://application-services-ui/./static/images/Logo-Red_Hat-OpenShift-Data_Science-A-Standard-RGB.svg","webpack://application-services-ui/./static/images/Logo-Red_Hat-OpenShift_Service_Registry-A-Standard-RGB.png","webpack://application-services-ui/./src/app/pages/Overview/OverviewPage.tsx"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const ExternalLinkAltIconConfig = {\n  name: 'ExternalLinkAltIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const ExternalLinkAltIcon = createIcon(ExternalLinkAltIconConfig);\n\nexport default ExternalLinkAltIcon;","export default __webpack_public_path__ + \"d0f2bb14.svg\";","export default __webpack_public_path__ + \"61fdfbf5.svg\";","export default __webpack_public_path__ + \"485bae8d.svg\";","export default __webpack_public_path__ + \"98789eae.png\";","import React from 'react';\nimport {\n  Bullseye,\n  Button,\n  ButtonVariant,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CardHeaderMain,\n  CardTitle,\n  Grid,\n  Label,\n  PageSection,\n  PageSectionVariants,\n  Stack,\n  StackItem,\n  Text,\n  TextVariants,\n  Title,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport ApacheKafkaLogo from \"/static/images/Logo-Red_Hat-OpenShift_Streams_for_Apache_Kafka-A-Standard-RGB.svg\";\nimport APIMgmtLogo from \"/static/images/Logo-Red_Hat-OpenShift-API_Management-A-Standard-RGB.svg\";\nimport DataScienceLogo from \"static/images/Logo-Red_Hat-OpenShift-Data_Science-A-Standard-RGB.svg\";\nimport ServiceRegistryLogo from \"static/images/Logo-Red_Hat-OpenShift_Service_Registry-A-Standard-RGB.png\"\n\nimport { useTranslation } from 'react-i18next';\n\nimport { useHistory } from 'react-router-dom';\nimport { useBasename } from '@bf2/ui-shared';\n\nexport const OverviewPage: React.FunctionComponent = () => {\n\n  const { t } = useTranslation();\n\n  const history = useHistory();\n  const { getBasename } = useBasename() || { getBasename: () => '' };\n  const basename = getBasename();\n\n  const onClickKafkainstance = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    event.preventDefault();\n    history.push(`${basename}/streams/kafkas`);\n  }\n\n  const kafkaHref = history.createHref({\n    pathname: '/streams/kafkas'\n  })\n\n\n  const onClickServiceRegistry = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    event.preventDefault();\n    history.push(`${basename}/service-registry`);\n  }\n\n  const serviceRegistryHref = history.createHref({\n    pathname: '/service-registry'\n  })\n\n  return (\n    <>\n      {/* Hero banner with graphic */}\n      <PageSection className=\"app-services-ui--page-section--marketing app-services-ui--banner pf-t-dark pf-u-background-color-dark-100\" variant={PageSectionVariants.dark}>\n        <Stack hasGutter>\n          <Title headingLevel=\"h1\" size=\"2xl\">\n            {t('overview.heroTitle')}\n          </Title>\n          <Text className=\"app-services-ui--banner__tagline\">{t('overview.heroTagline')}</Text>\n          <Text component={TextVariants.p}>\n            {t('overview.heroDescription')}\n          </Text>\n          <Text component={TextVariants.p} className=\"pf-u-mt-md\">\n            {t('overview.heroDescription2')}\n          </Text>\n          <StackItem>\n            <Button variant={ButtonVariant.primary} isLarge component=\"a\" data-testid=\"hero-buttonTryKafka\" href={kafkaHref} onClick={onClickKafkainstance}>\n              {t('overview.heroCallToActionButton')}\n            </Button>\n          </StackItem>\n        </Stack>\n      </PageSection>\n\n      {/* Banner with just text */}\n      <PageSection variant={PageSectionVariants.light} className=\"app-services-ui--page-section--marketing\">\n        <Bullseye>\n          <Text component={TextVariants.p} className=\"app-services-ui--banner--text-only\">\n            {t('overview.banner')}\n          </Text>\n        </Bullseye>\n      </PageSection>\n\n      {/* Cards */}\n      <PageSection isWidthLimited className=\"app-services-ui--page-section--marketing\">\n        <Grid md={6} lg={3} hasGutter>\n\n          {/* API Management card */}\n          <Card>\n            <CardHeader>\n              <CardHeaderMain>\n                <img\n                  src={APIMgmtLogo}\n                  alt=\"Red Hat OpenShift API Management logo\"\n                  style={{ height: '50px' }}\n                />\n              </CardHeaderMain>\n            </CardHeader>\n            <CardTitle>\n              <Title headingLevel=\"h2\" size=\"xl\">\n                {t('overview.rhoamTitle')}\n              </Title>\n            </CardTitle>\n            <CardBody>\n              <Stack hasGutter>\n                <StackItem className=\"pf-u-mb-lg\">\n                  <Label color=\"blue\">{t('overview.generalAvailability')}</Label>\n                </StackItem>\n                <StackItem>\n                  {t('overview.rhoamMainText')}\n                </StackItem>\n                <StackItem className=\"pf-u-color-200\">\n                  {t('overview.rhoamSecondaryText')} <Button data-testid=\"cardRHOAM-linkOpenShift\" isInline variant={ButtonVariant.link} component=\"a\" target=\"_blank\" href=\"http://openshift.com\">OpenShift\n                    <ExternalLinkAltIcon className=\"pf-u-ml-xs\" /></Button>.\n                </StackItem>\n              </Stack>\n            </CardBody>\n            <CardFooter>\n              <Button variant={ButtonVariant.secondary} data-testid=\"cardRHOAM-buttonCTA\" component=\"a\" target=\"_blank\" href=\"https://developers.redhat.com/products/rhoam/getting-started\">\n                {t('overview.getStarted')} <ExternalLinkAltIcon className=\"pf-u-ml-sm\" />\n              </Button>\n            </CardFooter>\n          </Card>\n\n          {/* Data science card */}\n          <Card>\n            <CardHeader>\n              <CardHeaderMain>\n                <img\n                  src={DataScienceLogo}\n                  alt=\"Red Hat OpenShift Data Science logo\"\n                  style={{ height: '50px' }}\n                />\n              </CardHeaderMain>\n            </CardHeader>\n            <CardTitle>\n              <Title headingLevel=\"h2\" size=\"xl\">\n                {t('overview.rhodsTitle')}\n              </Title>\n            </CardTitle>\n            <CardBody>\n              <Stack hasGutter>\n                <StackItem className=\"pf-u-mb-lg\">\n                  <Label>{t('overview.beta')}</Label>\n                </StackItem>\n                <StackItem>\n                  {t('overview.rhodsMainText')}\n                </StackItem>\n                <StackItem className=\"pf-u-color-200\">\n                  {t('overview.rhodsSecondaryText')} <Button data-testid=\"cardRHODS-linkOpenShift\" isInline variant={ButtonVariant.link} component=\"a\" target=\"_blank\" href=\"http://openshift.com\"> OpenShift\n                    <ExternalLinkAltIcon className=\"pf-u-ml-xs\" /></Button>.\n                </StackItem>\n              </Stack>\n            </CardBody>\n            <CardFooter>\n              <Button data-testid=\"cardRHODS-buttonCTA\" variant={ButtonVariant.secondary} component=\"a\" target=\"_blank\" href=\"https://www.redhat.com/en/technologies/cloud-computing/openshift/openshift-data-science\">\n                {t('overview.learnMore')} <ExternalLinkAltIcon className=\"pf-u-ml-sm\" />\n              </Button>\n            </CardFooter>\n          </Card>\n\n          {/* Service Registry card */}\n          <Card>\n            <CardHeader>\n              <CardHeaderMain>\n                <img\n                  src={ServiceRegistryLogo}\n                  alt=\"Red Hat OpenShift Service Registry logo\"\n                  style={{ height: '50px' }}\n                />\n              </CardHeaderMain>\n            </CardHeader>\n            <CardTitle>\n              <Title headingLevel=\"h2\" size=\"xl\">\n                {t('overview.rhosrTitle')}\n              </Title>\n            </CardTitle>\n            <CardBody>\n              <Stack hasGutter>\n                <StackItem className=\"pf-u-mb-lg\">\n                  <Label>{t('overview.developmentPreview')}</Label>\n                </StackItem>\n                <StackItem>\n                  {t('overview.rhosrMainText')}\n                </StackItem>\n                <StackItem className=\"pf-u-color-200\">\n                  {t('overview.rhosrSecondaryText')}\n                </StackItem>\n              </Stack>\n            </CardBody>\n            <CardFooter>\n              <Button data-testid=\"cardRHOSR-buttonCTA\" variant={ButtonVariant.secondary} component=\"a\" href={serviceRegistryHref} onClick={onClickServiceRegistry}>{t('overview.rhosrCallToActionButton')}</Button>\n            </CardFooter>\n          </Card>\n\n          {/* Kafka card */}\n          <Card>\n            <CardHeader>\n              <CardHeaderMain>\n                <img\n                  src={ApacheKafkaLogo}\n                  alt=\"Red Hat OpenShift Streams for Apache Kafka logo\"\n                  style={{ height: '50px' }}\n                />\n              </CardHeaderMain>\n            </CardHeader>\n            <CardTitle>\n              <Title headingLevel=\"h2\" size=\"xl\">\n                {t('overview.rhosakTitle')}\n              </Title>\n            </CardTitle>\n            <CardBody>\n              <Stack hasGutter>\n                <StackItem className=\"pf-u-mb-lg\">\n                  <Label>{t('overview.developmentPreview')}</Label>\n                </StackItem>\n                <StackItem>\n                  {t('overview.rhosakMainText')}\n                </StackItem>\n                <StackItem className=\"pf-u-color-200\">\n                  {t('overview.rhosakSecondaryText')}\n                </StackItem>\n              </Stack>\n            </CardBody>\n            <CardFooter>\n              <Button data-testid=\"cardRHOSAK-buttonCreateKafka\" variant={ButtonVariant.secondary} component=\"a\" href={kafkaHref} onClick={onClickKafkainstance} >{t('overview.rhosakCallToActionButton')}</Button>\n            </CardFooter>\n          </Card>\n        </Grid>\n      </PageSection>\n    </>\n  );\n};\n\nexport default OverviewPage;\n"],"names":["ExternalLinkAltIcon","name","height","width","svgPath","yOffset","xOffset","OverviewPage","t","useTranslation","history","useHistory","basename","getBasename","useBasename","onClickKafkainstance","event","preventDefault","push","kafkaHref","createHref","pathname","serviceRegistryHref","PageSection","className","variant","PageSectionVariants","Stack","hasGutter","Title","headingLevel","size","Text","component","TextVariants","StackItem","Button","ButtonVariant","isLarge","href","onClick","Bullseye","isWidthLimited","Grid","md","lg","Card","CardHeader","CardHeaderMain","src","alt","style","CardTitle","CardBody","Label","color","isInline","target","CardFooter"],"sourceRoot":""}
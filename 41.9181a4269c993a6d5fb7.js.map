{"version":3,"sources":["webpack://mk-ui-host/./src/app/App.scss","webpack://mk-ui-host/./src/app/App.scss?af09","webpack://mk-ui-host/./src/app/utils/useDocumentTitle.ts","webpack://mk-ui-host/./src/app/NotFound/NotFound.tsx","webpack://mk-ui-host/./src/app/Components/FederatedModule/FederatedModule.tsx","webpack://mk-ui-host/./src/app/ControlPlanePage/ControlPlanePage.tsx","webpack://mk-ui-host/./src/app/Routes.tsx","webpack://mk-ui-host/./src/app/Components/QuickStart/QuickStartDrawerFederated.tsx","webpack://mk-ui-host/./src/app/utils/a11y.ts","webpack://mk-ui-host/./src/app/DataPlanePage/DataPlanePage.tsx","webpack://mk-ui-host/./src/app/Components/QuickStart/QuickStartCatalogFederated.tsx","webpack://mk-ui-host/./src/app/App.tsx","webpack://mk-ui-host/./src/app/Components/Loading/Loading.tsx","webpack://mk-ui-host/./src/app/Config/Config.tsx","webpack://mk-ui-host/./src/app/store/index.ts","webpack://mk-ui-host/./src/app/utils/auth/AuthContext.tsx","webpack://mk-ui-host/./src/app/utils/getBaseName.ts","webpack://mk-ui-host/./src/app/utils/insights.ts","webpack://mk-ui-host/./src/app/utils/keycloakAuth.ts"],"names":["___CSS_LOADER_EXPORT___","i","push","module","id","options","useDocumentTitle","title","originalTitle","document","NotFound","PageSection","EmptyState","variant","EmptyStateIcon","icon","ExclamationTriangleIcon","Title","headingLevel","size","EmptyStateBody","history","Button","onClick","FederatedModuleContext","FederatedModuleProvider","children","config","useContext","Config","undefined","Loading","Provider","value","federatedModules","propTypes","configUrl","FederatedModule","scope","render","fallback","url","ready","setReady","failed","setFailed","element","createElement","src","type","async","onload","console","log","onerror","error","head","appendChild","removeChild","useDynamicScript","context","basePath","entryPoint","useFederatedModule","Component","window","init","default","get","factory","Module","loadComponent","routeFocusTimer","QuickStartDrawerFederated","guides","useA11yRouteChange","isAsync","lastNavigation","useLastLocation","setTimeout","mainContainer","getElementById","focus","clearTimeout","RouteWithTitleUpdates","rest","routeProps","PageNotFound","component","flattenedRoutes","insights","getToken","AuthContext","parts","location","pathname","endsWith","split","length","FederatedTopics","getApiOpenshiftComToken","chrome","auth","apiBasePath","dataPlane","uiServerBasePath","exact","label","path","onConnectInstance","event","Error","dispatch","useDispatch","addAlert","message","addNotification","getUsername","getUser","then","user","identity","username","OpenshiftStreamsFederated","onConnectToInstance","controlPlane","serviceApiBasePath","to","QuickStartCatalogFederated","reduce","flattened","route","routes","AppRoutes","LastLocationProvider","map","idx","key","registry","getRegistry","register","notifications","connect","useEffect","identifyApp","on","navId","store","getStore","NotificationsPortal","Bullseye","Spinner","ConfigContext","ConfigProvider","setConfig","controller","AbortController","signal","fetch","json","newConfig","abort","middleware","Promise","resolve","release","pathName","shift","InsightsContext","keycloak","TOKEN_COOKIE_NAME","REFRESH_TOKEN_COOKIE_NAME","getKeycloakInstance","storeTokensInCookies","token","refreshToken","initOptions","onLoad","responseMode","storedRefreshToken","storedToken","warn","getKeyCloakToken","updateToken"],"mappings":"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","file":"41.9181a4269c993a6d5fb7.js","sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_0___ from \"-!../../node_modules/css-loader/dist/cjs.js!../../node_modules/@redhat-cloud-services/frontend-components-notifications/index.css\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root{--ins-color--orange: #ec7a08}button:focus{outline:none}\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/@redhat-cloud-services/frontend-components-utilities/files/Utilities/_variables.scss\",\"webpack://./node_modules/@redhat-cloud-services/frontend-components-utilities/files/Utilities/_helpers.scss\"],\"names\":[],\"mappings\":\"AAAA,MACI,4BAAA,CCDJ,aACI,YAAA\",\"sourcesContent\":[\":root {\\n    --ins-color--orange: #ec7a08;\\n}\\n\\n// Spacing\\n$ins-padding: var(--pf-global--spacer--lg);\\n$ins-margin: var(--pf-global--spacer--xl);\\n$ins-gutter: var(--pf-global--gutter);\\n\\n// Font Size\\n$ins-fontSize: var(--pf-global--FontSize--md);\\n$ins-fontSize--sm: var(--pf-global--FontSize--sm);\\n$ins-fontSize--lg: var(--pf-global--FontSize--lg);\\n$ins-fontSize--xl: var(--pf-global--FontSize--xl);\\n\\n// Borders\\n$ins-borderRadius: var(--pf-global--BorderRadius--sm);\\n$ins-borderRadius--round: var(--pf-global--BorderRadius--lg);\\n\\n// Grid breakpoints\\n$ins-break--xs: var(--pf-global--breakpoint--xs);\\n$ins-break--sm: var(--pf-global--breakpoint--sm);\\n$ins-break--md: var(--pf-global--breakpoint--md);\\n$ins-break--lg: var(--pf-global--breakpoint--lg);\\n$ins-break--xl: var(--pf-global--breakpoint--xl);\\n\\n// Colors\\n$ins-color--red: var(--pf-global--danger-color--100);\\n$ins-color--critical: $ins-color--red;\\n\\n$ins-color--orange: var(--ins-color--orange);\\n$ins-color--high: $ins-color--orange;\\n\\n$ins-color--yellow: var(--pf-global--warning-color--100);\\n$ins-color--medium: $ins-color--yellow;\\n\\n$ins-color--green: var(--pf-global--success-color--100);\\n$ins-color--low: $ins-color--green;\\n\\n$ins-color--blue: var(--pf-global--info-color--100);\\n\\n$ins-color--gray: var(--pf-global--disabled-color--200);\",\"button:focus {\\n    outline:none;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import api from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./App.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import * as React from 'react';\n\n// a custom hook for setting the page title\nexport function useDocumentTitle(title: string) {\n  React.useEffect(() => {\n    const originalTitle = document.title;\n    document.title = title;\n\n    return () => {\n      document.title = originalTitle;\n    };\n  }, [title]);\n}\n","import * as React from 'react';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport {\n  PageSection,\n  Title,\n  Button,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n} from '@patternfly/react-core';\nimport { useHistory } from 'react-router-dom';\n\nconst NotFound: React.FunctionComponent = () => {\n  function GoHomeBtn() {\n    const history = useHistory();\n    function handleClick() {\n      history.push('/');\n    }\n    return (\n      <Button onClick={handleClick}>Take me home</Button>\n    );\n  }\n\n  return (\n    <PageSection>\n    <EmptyState variant=\"full\">\n      <EmptyStateIcon icon={ExclamationTriangleIcon} />\n      <Title headingLevel=\"h1\" size=\"lg\">\n        404 Page not found\n      </Title>\n      <EmptyStateBody>\n        We didn&apos;t find a page that matches the address you navigated to.\n      </EmptyStateBody>\n      <GoHomeBtn />\n    </EmptyState>\n  </PageSection>\n  )\n};\n\nexport { NotFound };\n","/* eslint-disable camelcase */\n/* eslint-disable no-undef */\nimport React, {ReactNode, useContext} from 'react';\nimport PropTypes from 'prop-types';\nimport {Loading} from '../Loading/Loading';\nimport {ConfigContext, FederatedModuleConfig} from \"@app/Config/Config\";\n\nexport type FederatedModuleContextProps = {\n  [module: string]: FederatedModuleConfig\n}\n\nconst FederatedModuleContext = React.createContext<FederatedModuleContextProps>({});\n\nexport function FederatedModuleProvider({configUrl, children}) {\n\n  const config = useContext(ConfigContext);\n\n  if (config === undefined) {\n    return <Loading/>;\n  }\n\n  return (\n    <FederatedModuleContext.Provider value={config.federatedModules}>\n      {children}\n    </FederatedModuleContext.Provider>\n  );\n}\n\nFederatedModuleProvider.propTypes = {\n  configUrl: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\n\nfunction useFederatedModule(module) {\n  const context = React.useContext(FederatedModuleContext);\n  return `${context[module].basePath}${context[module].entryPoint}`;\n}\n\nfunction loadComponent(scope, module) {\n  return async () => {\n    // Initializes the share scope. This fills it with known provided modules from this build and all remotes\n    await __webpack_init_sharing__('default');\n    const container = window[scope]; // or get the container somewhere else\n    // Initialize the container, it may provide shared modules\n    await container.init(__webpack_share_scopes__.default);\n    const factory = await window[scope].get(module);\n    const Module = factory();\n    console.log(`${Module} loaded ${module} from ${scope}`);\n    return Module;\n  };\n}\n\nconst useDynamicScript = ({url}) => {\n  const [ready, setReady] = React.useState(false);\n  const [failed, setFailed] = React.useState(false);\n\n  React.useEffect(() => {\n    if (!url) {\n      return;\n    }\n\n    const element = document.createElement('script');\n\n    element.src = url;\n    element.type = 'text/javascript';\n    element.async = true;\n\n    setReady(false);\n    setFailed(false);\n\n    element.onload = () => {\n      console.log(`Dynamic federated module Loaded: ${url}`);\n      setReady(true);\n    };\n\n    element.onerror = () => {\n      console.error(`Dynamic federated module Error: ${url}`);\n      setReady(false);\n      setFailed(true);\n    };\n\n    document.head.appendChild(element);\n\n    return () => {\n      console.log(`Dynamic federated module Removed: ${url}`);\n      document.head.removeChild(element);\n    };\n  }, [url]);\n\n  return {\n    ready,\n    failed\n  };\n};\n\ntype FederatedModuleType = {\n  scope: string;\n  module: string;\n  render: (component: React.LazyExoticComponent<React.ComponentType<any>>) => ReactNode;\n  fallback?: any;\n}\n\nexport function FederatedModule({scope, module, render, fallback}: FederatedModuleType) {\n  const url = useFederatedModule(scope);\n  const {ready, failed} = useDynamicScript({url});\n\n  if (!ready || failed) {\n    if (failed && fallback) {\n      return fallback;\n    }\n    return null;\n  }\n\n  const Component = React.lazy(\n    loadComponent(scope, module)\n  );\n\n  return (\n    <React.Suspense fallback={<Loading/>}>\n      {render(Component)}\n    </React.Suspense>\n  );\n}\n\n","import React, {useContext, useEffect, useState} from 'react';\nimport {useHistory} from 'react-router';\nimport {InsightsContext} from \"@app/utils/insights\";\nimport {useDispatch} from 'react-redux';\nimport {addNotification} from '@redhat-cloud-services/frontend-components-notifications/';\nimport {AlertVariant} from \"@patternfly/react-core\";\nimport {FederatedModule} from \"../Components/FederatedModule/FederatedModule\";\nimport {ConfigContext} from \"@app/Config/Config\";\nimport {Loading} from \"@app/Components/Loading/Loading\";\n\nexport const ControlPlanePage = () => {\n\n  const insights = useContext(InsightsContext);\n  const config = useContext(ConfigContext);\n\n  const history = useHistory();\n\n  const onConnectInstance = async (event) => {\n    if (event.id === undefined) {\n      throw new Error();\n    }\n\n    history.push(`/openshift-streams/kafkas/${event.id}`);\n  };\n\n  const dispatch = useDispatch();\n\n  const addAlert = (message: string, variant?: AlertVariant) => {\n    dispatch(\n      addNotification({\n        variant: variant,\n        title: message\n      })\n    );\n\n  };\n\n  if (config === undefined) {\n    return <Loading />\n  }\n\n  const getUsername = () => insights.chrome.auth.getUser().then(user => user.identity.user.username);\n\n  const osStreams = (\n    <FederatedModule\n      scope=\"mkUiFrontend\"\n      module=\"./OpenshiftStreams\"\n      render={(OpenshiftStreamsFederated) => {\n        return (\n          <OpenshiftStreamsFederated\n            getToken={insights.chrome.auth.getToken}\n            getUsername={getUsername}\n            onConnectToInstance={onConnectInstance}\n            addAlert={addAlert}\n            basePath={config?.controlPlane.serviceApiBasePath}\n          />\n        );\n      }}\n    />\n  );\n\n  return osStreams;\n};\n","import React from 'react';\nimport {Redirect, Route, RouteComponentProps, Switch} from 'react-router-dom';\nimport {accessibleRouteChangeHandler, useDocumentTitle} from '@app/utils';\nimport {NotFound} from '@app/NotFound/NotFound';\nimport {LastLocationProvider, useLastLocation} from 'react-router-last-location';\nimport {ControlPlanePage} from \"@app/ControlPlanePage/ControlPlanePage\";\nimport {DataPlanePage} from \"@app/DataPlanePage/DataPlanePage\";\nimport {QuickStartDrawerFederated} from \"@app/Components/QuickStart/QuickStartDrawerFederated\";\nimport {QuickStartCatalogFederated} from \"@app/Components/QuickStart/QuickStartCatalogFederated\";\n\nlet routeFocusTimer: number;\n\nexport interface IAppRoute {\n  label?: string; // Excluding the label will exclude the route from the nav sidebar in AppLayout\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\n  /* eslint-enable @typescript-eslint/no-explicit-any */\n  exact?: boolean;\n  path: string;\n  title: string;\n  isAsync?: boolean;\n  routes?: undefined;\n}\n\nexport interface IAppRouteGroup {\n  label: string;\n  routes: IAppRoute[];\n}\n\nexport type AppRouteConfig = IAppRoute | IAppRouteGroup;\n\nconst RedirectSlash = () => (<Redirect to=\"/openshift-streams\" />)\n\nconst routes: AppRouteConfig[] = [\n  {\n    component: DataPlanePage,\n    exact: false,\n    label: 'Red Hat OpenShift Streams for Apache Kafka',\n    path: '/openshift-streams/kafkas',\n    title: 'Red Hat OpenShift Streams for Apache Kafka',\n  },\n  {\n    component: ControlPlanePage,\n    exact: true,\n    label: 'Red Hat OpenShift Streams for Apache Kafka',\n    path: '/openshift-streams',\n    title: 'Red Hat OpenShift Streams for Apache Kafka',\n  },\n  {\n    component: RedirectSlash,\n    exact: true,\n    label: 'Red Hat OpenShift Streams for Apache Kafka',\n    path: '/',\n    title: 'Red Hat OpenShift Streams for Apache Kafka',\n  },\n  {\n    component: QuickStartCatalogFederated,\n    exact: true,\n    label: 'QuickStarts for Red Hat OpenShift Application Services',\n    path: '/quickstarts',\n    title: 'QuickStarts for Red Hat OpenShift Application Services',\n  }\n];\n\n// a custom hook for sending focus to the primary content container\n// after a view has loaded so that subsequent press of tab key\n// sends focus directly to relevant content\nconst useA11yRouteChange = (isAsync: boolean) => {\n  const lastNavigation = useLastLocation();\n  React.useEffect(() => {\n    if (!isAsync && lastNavigation !== null) {\n      routeFocusTimer = accessibleRouteChangeHandler();\n    }\n    return () => {\n      window.clearTimeout(routeFocusTimer);\n    };\n  }, [isAsync, lastNavigation]);\n};\n\nconst RouteWithTitleUpdates = ({component: Component, isAsync = false, title, ...rest}: IAppRoute) => {\n  useA11yRouteChange(isAsync);\n  useDocumentTitle(title);\n\n  function routeWithTitle(routeProps: RouteComponentProps) {\n    return (\n      <QuickStartDrawerFederated>\n        <Component {...rest} {...routeProps} />\n      </QuickStartDrawerFederated>\n      );\n  }\n\n  return <Route render={routeWithTitle}/>;\n};\n\nconst PageNotFound = ({title}: { title: string }) => {\n  useDocumentTitle(title);\n  return <Route component={NotFound}/>;\n};\n\nconst flattenedRoutes: IAppRoute[] = routes.reduce(\n  (flattened, route) => [...flattened, ...(route.routes ? route.routes : [route])],\n  [] as IAppRoute[]\n);\n\nconst AppRoutes = (): React.ReactElement => (\n  <LastLocationProvider>\n    <Switch>\n      {flattenedRoutes.map(({path, exact, component, title, isAsync}, idx) => (\n        <RouteWithTitleUpdates\n          path={path}\n          exact={exact}\n          component={component}\n          key={idx}\n          title={title}\n          isAsync={isAsync}\n        />\n      ))}\n      <PageNotFound title=\"404 Page Not Found\"/>\n    </Switch>\n  </LastLocationProvider>\n);\n\nexport {AppRoutes, routes};\n","import {FederatedModule} from \"@app/Components/FederatedModule/FederatedModule\";\nimport React, {FunctionComponent, useContext} from \"react\";\nimport {ConfigContext} from \"@app/Config/Config\";\nimport {Loading} from \"@app/Components/Loading/Loading\";\n\nexport const QuickStartDrawerFederated: FunctionComponent = ({children}) => {\n\n  const config = useContext(ConfigContext);\n\n  if (config === undefined) {\n    return <Loading />;\n  }\n\n  return (\n    <FederatedModule\n      scope=\"guides\"\n      module=\"./QuickStartDrawer\"\n      fallback={children}\n      render={(QuickStartDrawerFederated) => (\n        <QuickStartDrawerFederated basePath={config?.federatedModules.guides.basePath}>\n          {children}\n        </QuickStartDrawerFederated>\n      )}/>)\n};\n","function accessibleRouteChangeHandler() {\n  return window.setTimeout(() => {\n    const mainContainer = document.getElementById('primary-app-container');\n    if (mainContainer) {\n      mainContainer.focus();\n    }\n  }, 50);\n}\n\nexport {\n  accessibleRouteChangeHandler\n};\n","import React, {useContext} from 'react';\nimport {InsightsContext} from \"@app/utils\";\nimport {RouteComponentProps} from \"react-router-dom\";\nimport {ConfigContext} from \"@app/Config/Config\";\nimport {FederatedModule} from \"../Components/FederatedModule/FederatedModule\";\nimport {AuthContext} from \"@app/utils/auth/AuthContext\";\nimport {Loading} from \"@app/Components/Loading/Loading\";\n\ntype DataPlanePageParams = {\n  id: string\n}\n\nexport const DataPlanePage = ({match}: RouteComponentProps<DataPlanePageParams>) => {\n\n  const insights = useContext(InsightsContext);\n  const config = useContext(ConfigContext);\n  const {getToken} = useContext(AuthContext);\n\n  // TODO useParams is not working?\n  const pathname = window.location.pathname.endsWith(\"/\") ? window.location.pathname : `${window.location.pathname}/`;\n  const parts = pathname.split(\"/\");\n  const id = parts[parts.length - 2];\n\n  if (config === undefined) {\n    return <Loading />\n  }\n\n  return (\n    <FederatedModule\n      scope=\"strimziUi\"\n      module=\"./Panels/Topics.patternfly\"\n      render={(FederatedTopics) => <FederatedTopics\n        getApiOpenshiftComToken={insights.chrome.auth.getToken}\n        getToken={getToken}\n        id={id}\n        apiBasePath={config?.dataPlane.uiServerBasePath}\n      />}\n    />\n  );\n}\n","import {FederatedModule} from \"@app/Components/FederatedModule/FederatedModule\";\nimport React, { FunctionComponent } from 'react';\n\nexport const QuickStartCatalogFederated: FunctionComponent = () => (\n  <FederatedModule\n    scope=\"guides\"\n    module=\"./QuickStartCatalog\"\n    render={(QuickStartCatalogFederated) => <QuickStartCatalogFederated />}\n  />\n);\n","import React, {useContext, useEffect} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport {connect, Provider} from 'react-redux';\nimport './App.scss';\nimport {getRegistry} from '@redhat-cloud-services/frontend-components-utilities/files/Registry';\nimport {notifications, NotificationsPortal} from '@redhat-cloud-services/frontend-components-notifications/';\nimport {InsightsContext} from \"@app/utils/insights\";\nimport {AppRoutes} from \"@app/Routes\";\nimport {FederatedModuleProvider} from \"./Components/FederatedModule/FederatedModule\";\n\ndeclare const __PUBLIC_PATH__: string;\nconst registry = getRegistry();\nregistry.register({notifications});\n\nexport const App = () => {\n\n  const insights = useContext(InsightsContext);\n  const history = useHistory();\n\n  useEffect(() => {\n    insights.chrome.init();\n    insights.chrome.identifyApp('application-services');\n\n    const appNav = insights.chrome.on('APP_NAVIGATION', event => {\n      console.log(`nav: ${event.navId}`);\n      history.push(`/${event.navId}`);\n    });\n    return function cleanup() {\n      //appNav();\n    }\n  });\n\n  return (\n    <Provider store={registry.getStore()}>\n      <FederatedModuleProvider configUrl={`${__PUBLIC_PATH__}federated-modules.json`}>\n        <NotificationsPortal/>\n        <AppRoutes/>\n      </FederatedModuleProvider>\n    </Provider>\n  );\n}\n\n/**\n * connect: https://github.com/reactjs/react-redux/blob/master/docs/api.md\n *          https://reactjs.org/docs/higher-order-components.html\n */\nexport default connect()(App);\n","import React from 'react';\nimport { PageSection, Bullseye } from '@patternfly/react-core';\nimport { Spinner } from '@redhat-cloud-services/frontend-components';\nimport './Loading.css';\n\nexport const Loading: React.FunctionComponent = () => (\n    <Bullseye>\n        <Spinner />\n    </Bullseye>\n);\n","import React from \"react\";\n\nexport type Config = {\n  controlPlane: {\n    serviceApiBasePath: string\n  }\n  dataPlane: {\n    uiServerBasePath: string\n    keycloak: {\n      authServerUrl: string,\n      clientId: string,\n      realm: string\n    }\n  }\n  federatedModules: {\n    strimziUI: FederatedModuleConfig\n    mkUiFrontend: FederatedModuleConfig\n    guides: FederatedModuleConfig\n  }\n};\n\nexport type FederatedModuleConfig = {\n  basePath: string\n  entryPoint: string\n}\n\nexport const ConfigContext = React.createContext<Config | undefined>(undefined);\n\nexport function ConfigProvider({ configUrl, children }) {\n  const [config, setConfig] = React.useState<Config | undefined>(undefined);\n  React.useEffect(() => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n\n    (async () => {\n      console.log('Loading config');\n      const response = await fetch(configUrl, { signal });\n      const newConfig = await response.json();\n      setConfig(newConfig);\n      console.log('Done loading config', newConfig);\n    })();\n\n    return () => controller.abort();\n  }, [configUrl]);\n\n  return (\n    <ConfigContext.Provider value={config}>\n      {children}\n    </ConfigContext.Provider>\n  );\n}\n","import ReducerRegistry from '@redhat-cloud-services/frontend-components-utilities/files/ReducerRegistry';\nimport promiseMiddleware from 'redux-promise-middleware';\n\nlet registry;\n\nexport function init (...middleware) {\n    if (registry) {\n        throw new Error('store already initialized');\n    }\n\n    registry = new ReducerRegistry({}, [\n        promiseMiddleware,\n        ...middleware\n    ]);\n\n    //If you want to register all of your reducers, this is good place.\n    /*\n     *  registry.register({\n     *    someName: (state, action) => ({...state})\n     *  });\n     */\n    return registry;\n}\n\nexport function getStore () {\n    return registry.getStore();\n}\n\nexport function register (...args) {\n    return registry.register(...args);\n}\n","import React from 'react';\n\nexport interface IAuthContext {\n  getToken: () => Promise<string>\n}\n\nexport const AuthContext = React.createContext<IAuthContext>({\n    getToken: () => Promise.resolve('')\n  }\n);\n","function getBaseName(pathname) {\n    let release = '/';\n    const pathName = pathname.split('/');\n\n    pathName.shift();\n\n    if (pathName[0] === 'beta') {\n        pathName.shift();\n        release = `/beta/`;\n    }\n\n    return `${release}${pathName[0]}`;\n}\n\nexport default getBaseName;\n","import React from 'react';\n\nexport type InsightsType = {\n  chrome: {\n    init: () => void;\n    identifyApp: (appId: string) => Promise<void>;\n    getApp: () => string;\n    getBundle: () => string;\n    getEnvironment: () => 'ci' | 'qa' | 'prod' | 'stage';\n    on: (type: string, callback: ((event: any) => void)) => void;\n    auth: {\n      getToken(): Promise<string>;\n      getUser(): Promise<UserType>;\n    };\n    isProd: boolean;\n    isBeta: () => boolean;\n    isPenTest: () => boolean;\n  };\n};\n\nexport type UserType = {\n  entitlements: {\n    [key: string]: {\n      is_entitled: boolean;\n      is_trial: boolean;\n    }\n  },\n  identity: IdentityType;\n};\n\nexport type IdentityType = {\n  account_number: string;\n  type: string;\n  internal: {\n    org_id: string;\n    account_id: string;\n  }\n  user: {\n    username: string;\n    email: string;\n    first_name: string;\n    last_name: string;\n    is_active: boolean;\n  }\n};\n\nexport const InsightsContext = React.createContext({} as InsightsType);\n","import Keycloak, {KeycloakConfig, KeycloakInitOptions, KeycloakInstance} from 'keycloak-js';\nimport Cookies from 'js-cookie';\n\nexport let keycloak: KeycloakInstance | undefined;\n\nconst TOKEN_COOKIE_NAME = \"masSSOToken\";\nconst REFRESH_TOKEN_COOKIE_NAME = \"masSSORefreshToken\";\n\n\n/**\n * Get keycloak instance\n *\n * @return an initiated keycloak instance or `undefined`\n * if keycloak isn't configured\n *\n */\nexport const getKeycloakInstance = async (config: KeycloakConfig) => {\n  if (!keycloak) await init(config);\n  storeTokensInCookies();\n  return keycloak;\n}\n\nconst storeTokensInCookies = () => {\n  if (keycloak?.token && keycloak.refreshToken) {\n    Cookies.set(TOKEN_COOKIE_NAME, keycloak?.token);\n    Cookies.set(REFRESH_TOKEN_COOKIE_NAME, keycloak?.refreshToken);\n  }\n}\n\n/**\n * Initiate keycloak instance.\n *\n * Set keycloak to undefined if\n * keycloak isn't configured\n *\n */\nexport const init = async (config: KeycloakConfig) => {\n  try {\n    keycloak = new (Keycloak as any)(config);\n    if (keycloak) {\n      const initOptions = {\n        onLoad: 'login-required',\n        responseMode: \"query\",\n      } as KeycloakInitOptions;\n      const storedRefreshToken = Cookies.get(REFRESH_TOKEN_COOKIE_NAME);\n      const storedToken = Cookies.get(TOKEN_COOKIE_NAME);\n      if (storedRefreshToken && storedToken) {\n        initOptions.refreshToken = storedRefreshToken;\n        initOptions.token = storedToken;\n      }\n      await keycloak.init(initOptions);\n    }\n  } catch {\n    keycloak = undefined;\n    console.warn('Auth: Unable to initialize keycloak. Client side will not be configured to use authentication');\n  }\n}\n\n\n/**\n * Use keycloak update token function to retrieve\n * keycloak token\n *\n * @return keycloak token or empty string if keycloak\n * isn't configured\n *\n */\nexport const getKeyCloakToken = async (): Promise<string> => {\n  await keycloak?.updateToken(50);\n  if (keycloak?.token) {\n    storeTokensInCookies();\n    return keycloak.token;\n  }\n  console.error('No keycloak token available');\n  return 'foo';\n}\n3\n/**\n * logout of keycloak, clear cache and offline store then redirect to\n * keycloak login page\n *\n * @param keycloak the keycloak instance\n * @param client offix client\n *\n */\nexport const logout = async (keycloak: Keycloak.KeycloakInstance | undefined) => {\n  if (keycloak) {\n    await keycloak.logout();\n  }\n}\n"],"sourceRoot":""}
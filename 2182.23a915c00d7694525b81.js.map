{"version":3,"file":"2182.23a915c00d7694525b81.js","mappings":"oUAcMA,EAA2C,WAC/CC,QAAQC,IAAI,4BACZ,IAAMC,GAAO,UACPC,GAAW,IAAAC,eA4BXC,EAAe,CACnBC,SA3Be,SAAC,G,IAChBC,EAAK,QACLC,EAAO,UACPC,EAAW,cACXC,EAAU,aACVC,EAAW,cACXC,EAAW,cACXC,EAAY,eACZC,EAAS,YACTC,EAAQ,WAERZ,GACE,QAAgB,CACdI,MAAK,EACLC,QAAO,EACPC,YAAW,EACXC,WAAU,EACVC,YAAaA,IAAe,EAC5BC,YAAaA,IAAe,EAC5BC,aAAcA,GAAgB,IAC9BC,UAAS,EACTC,SAAQ,OASRC,GAAW,OAAYC,OAAOC,SAASC,UAC7C,OACE,kBAAC,EAAAC,YAAA,SAAoB,CAACC,MAAOnB,GAC3B,kBAAC,EAAAoB,aAAA,SAAqB,CAACD,MAAOhB,GAC5B,kBAAC,gBAAM,CAACkB,SAAUP,GAChB,kBAAC,IAAG,UAkBd,QAV0C,UAAW,WAAM,OACzD,kBAAC,EAAAQ,SAAQ,CAACC,OAAO,QAAK,KAAQC,YAC5B,kBAAC,EAAAC,gBAAe,CAACC,KAAM,KACrB,kBAAC,IAAsB,KACrB,kBAAC7B,EAAe","sources":["webpack://application-services-ui/./src/AppEntry.tsx"],"sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider, useDispatch } from 'react-redux';\nimport { init } from '@app/store';\nimport App from '@app/App';\nimport logger from 'redux-logger';\nimport getBaseName from '@app/utils/getBaseName';\nimport { Alert, AlertContext, AlertProps, AuthContext } from '@rhoas/app-services-ui-shared';\nimport { I18nextProvider } from 'react-i18next';\nimport appServicesi18n from '@app/i18n';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { EmbeddedConfigProvider } from '@app/providers/config/EmbeddedConfigContextProvider';\nimport { useAuth } from '@app/hooks';\n\nconst AppWithKeycloak: React.FunctionComponent = () => {\n  console.log('starting appwithkeycloak');\n  const auth = useAuth();\n  const dispatch = useDispatch();\n\n  const addAlert = ({\n    title,\n    variant,\n    description,\n    dataTestId,\n    autoDismiss,\n    dismissable,\n    dismissDelay,\n    requestId,\n    sentryId,\n  }: AlertProps) => {\n    dispatch(\n      addNotification({\n        title,\n        variant,\n        description,\n        dataTestId,\n        autoDismiss: autoDismiss || true,\n        dismissable: dismissable || true,\n        dismissDelay: dismissDelay || 8000,\n        requestId,\n        sentryId,\n      })\n    );\n  };\n\n  const alert: Alert = {\n    addAlert,\n  };\n\n  const baseName = getBaseName(window.location.pathname);\n  return (\n    <AuthContext.Provider value={auth}>\n      <AlertContext.Provider value={alert}>\n        <Router basename={baseName}>\n          <App />\n        </Router>\n      </AlertContext.Provider>\n    </AuthContext.Provider>\n  );\n};\n\n// eslint-disable-next-line react/display-name\nconst AppEntry: React.FunctionComponent = React.memo(() => (\n  <Provider store={init(logger).getStore()}>\n    <I18nextProvider i18n={appServicesi18n}>\n      <EmbeddedConfigProvider>\n        <AppWithKeycloak />\n      </EmbeddedConfigProvider>\n    </I18nextProvider>\n  </Provider>\n));\n\nexport default AppEntry;\n"],"names":["AppWithKeycloak","console","log","auth","dispatch","useDispatch","alert","addAlert","title","variant","description","dataTestId","autoDismiss","dismissable","dismissDelay","requestId","sentryId","baseName","window","location","pathname","AuthContext","value","AlertContext","basename","Provider","store","getStore","I18nextProvider","i18n"],"sourceRoot":""}
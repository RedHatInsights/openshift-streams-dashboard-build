{"version":3,"file":"6636.af8fd0d911849a6fc9d3.js","mappings":"uVAgBMA,EAA2C,WAC/CC,QAAQC,IAAI,4BACZ,IAAMC,GAAO,UACPC,GAAW,IAAAC,eA4BXC,EAAe,CACnBC,SA3Be,SAAC,G,IAChBC,EAAK,QACLC,EAAO,UACPC,EAAW,cACXC,EAAU,aACVC,EAAW,cACXC,EAAW,cACXC,EAAY,eACZC,EAAS,YACTC,EAAQ,WAERZ,GACE,QAAgB,CACdI,MAAK,EACLC,QAAO,EACPC,YAAW,EACXC,WAAU,EACVC,YAAaA,IAAe,EAC5BC,YAAaA,IAAe,EAC5BC,aAAcA,GAAgB,IAC9BC,UAAS,EACTC,SAAQ,OASRC,GAAW,EAAAC,EAAA,GAAYC,OAAOC,SAASC,UAC7C,OACE,kBAAC,EAAAC,YAAA,SAAoB,CAACC,MAAOpB,GAC3B,kBAAC,EAAAqB,aAAA,SAAqB,CAACD,MAAOjB,GAC5B,kBAAC,EAAAmB,cAAa,KACZ,kBAAC,gBAAM,CAACC,SAAUT,GAChB,kBAACU,EAAA,EAAG,WAQVC,EAAyC,WAE7C,YAAeC,KADA,IAAAC,YAAW,EAAAC,eAEjB,kBAAC,EAAAC,mBAAkB,MAErB,kBAAChC,EAAe,OAgBzB,QAZ0C,UAAW,WAAM,OACzD,kBAAC,EAAAiC,SAAQ,CAACC,OAAO,QAAK,KAAQC,YAC5B,kBAAC,EAAAC,gBAAe,CAACC,KAAM,KACrB,kBAAC,KAAmB,KAClB,kBAAC,IAAsB,KACrB,kBAACT,EAAa,aC3ExB,IAAMU,EAAOC,SAASC,eAAe,QAErC,WAAgB,kBAAC,EAAQ,MAAKF","sources":["webpack://application-services-ui/./src/AppEntry.tsx","webpack://application-services-ui/./src/bootstrap.tsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider, useDispatch } from 'react-redux';\nimport { init } from '@app/store';\nimport App from '@app/App';\nimport logger from 'redux-logger';\nimport getBaseName from '@app/utils/getBaseName';\nimport { Alert, AlertContext, AlertProps, AuthContext, ConfigContext } from '@rhoas/app-services-ui-shared';\nimport { I18nextProvider } from 'react-i18next';\nimport appServicesi18n from '@app/i18n';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { EmbeddedConfigProvider } from '@app/providers/config/EmbeddedConfigContextProvider';\nimport { useAuth } from '@app/hooks';\nimport { AppServicesLoading, ModalProvider } from '@rhoas/app-services-ui-components';\nimport { FeatureFlagProvider } from '@app/providers/featureflags/FeatureFlags';\n\nconst AppWithKeycloak: React.FunctionComponent = () => {\n  console.log('starting appwithkeycloak');\n  const auth = useAuth();\n  const dispatch = useDispatch();\n\n  const addAlert = ({\n    title,\n    variant,\n    description,\n    dataTestId,\n    autoDismiss,\n    dismissable,\n    dismissDelay,\n    requestId,\n    sentryId,\n  }: AlertProps) => {\n    dispatch(\n      addNotification({\n        title,\n        variant,\n        description,\n        dataTestId,\n        autoDismiss: autoDismiss || true,\n        dismissable: dismissable || true,\n        dismissDelay: dismissDelay || 8000,\n        requestId,\n        sentryId,\n      })\n    );\n  };\n\n  const alert: Alert = {\n    addAlert,\n  };\n\n  const baseName = getBaseName(window.location.pathname);\n  return (\n    <AuthContext.Provider value={auth}>\n      <AlertContext.Provider value={alert}>\n        <ModalProvider>\n          <Router basename={baseName}>\n            <App />\n          </Router>\n        </ModalProvider>\n      </AlertContext.Provider>\n    </AuthContext.Provider>\n  );\n};\n\nconst AppWithConfig: React.FunctionComponent = () => {\n  const config = useContext(ConfigContext);\n  if (config === undefined) {\n    return <AppServicesLoading />;\n  }\n  return <AppWithKeycloak />;\n};\n\n// eslint-disable-next-line react/display-name\nconst AppEntry: React.FunctionComponent = React.memo(() => (\n  <Provider store={init(logger).getStore()}>\n    <I18nextProvider i18n={appServicesi18n}>\n      <FeatureFlagProvider>\n        <EmbeddedConfigProvider>\n          <AppWithConfig />\n        </EmbeddedConfigProvider>\n      </FeatureFlagProvider>\n    </I18nextProvider>\n  </Provider>\n));\n\nexport default AppEntry;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppEntry from './AppEntry';\n\nconst root = document.getElementById('root');\n\nReactDOM.render(<AppEntry />, root);\n"],"names":["AppWithKeycloak","console","log","auth","dispatch","useDispatch","alert","addAlert","title","variant","description","dataTestId","autoDismiss","dismissable","dismissDelay","requestId","sentryId","baseName","getBaseName","window","location","pathname","AuthContext","value","AlertContext","ModalProvider","basename","App","AppWithConfig","undefined","useContext","ConfigContext","AppServicesLoading","Provider","store","getStore","I18nextProvider","i18n","root","document","getElementById"],"sourceRoot":""}
{"version":3,"file":"7941.1a2e48e15d5ab8bfc8d9.js","mappings":"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","sources":["webpack://application-services-ui/./src/app/AppRoutes.tsx","webpack://application-services-ui/./src/app/App.tsx","webpack://application-services-ui/./src/app/components/FederatedModule/FederatedModule.tsx","webpack://application-services-ui/./src/app/components/PrincipalsProvider/PrincipalsProvider.tsx","webpack://application-services-ui/./src/app/components/InstanceDrawer/InstanceDrawer.tsx","webpack://application-services-ui/./src/app/components/FederatedModule/moduleInfo.ts","webpack://application-services-ui/./src/app/components/FederatedModule/FederatedModuleContext.tsx","webpack://application-services-ui/./src/app/components/KasModalLoader/KasModalLoader.tsx","webpack://application-services-ui/./src/app/hooks/quota.ts","webpack://application-services-ui/./src/app/services/fetch.ts","webpack://application-services-ui/./src/app/services/termsReview.ts","webpack://application-services-ui/./src/app/utils/termsApp.ts","webpack://application-services-ui/./src/app/hooks/modal.ts","webpack://application-services-ui/./src/app/hooks/insights.ts","webpack://application-services-ui/./src/app/hooks/keycloak.ts","webpack://application-services-ui/./src/app/hooks/useSSOProviders.ts","webpack://application-services-ui/./src/app/pages/APIManagement/APIManagementPage.tsx","webpack://application-services-ui/./src/app/pages/CosPage/CosPage.tsx","webpack://application-services-ui/./src/app/pages/DataScience/DataSciencePage.tsx","webpack://application-services-ui/./src/app/pages/Kafka/KafkaFederatedComponent.tsx","webpack://application-services-ui/./src/app/pages/Kafka/Topics.tsx","webpack://application-services-ui/./src/app/pages/Kafka/TopicDetails.tsx","webpack://application-services-ui/./src/app/pages/Kafka/CreateTopic.tsx","webpack://application-services-ui/./src/app/pages/Kafka/UpdateTopic.tsx","webpack://application-services-ui/./src/app/pages/Kafka/Dashboard.tsx","webpack://application-services-ui/./src/app/pages/Kafka/ConsumerGroups.tsx","webpack://application-services-ui/./src/app/pages/Kafka/AclPermissions.tsx","webpack://application-services-ui/./src/app/pages/Kafka/KafkaRoutes.tsx","webpack://application-services-ui/./src/app/pages/Kafka/KafkaMainView.tsx","webpack://application-services-ui/./src/app/pages/Kafka/api/fetchKafkaTopicsFromAdmin.ts","webpack://application-services-ui/./src/app/pages/Kafka/api/fetchTopicsMetrics.ts","webpack://application-services-ui/./src/app/pages/Kafka/ConnectedMetrics.tsx","webpack://application-services-ui/./src/app/pages/Kafka/api/fetchKafkaInstanceMetrics.ts","webpack://application-services-ui/./src/app/pages/Kafka/api/fetchMetricsKpi.ts","webpack://application-services-ui/./src/app/pages/Kafka/kafka-instance.ts","webpack://application-services-ui/./src/app/pages/Kas/KasPage.tsx","webpack://application-services-ui/./src/app/pages/NotFound/NotFoundPage.tsx","webpack://application-services-ui/./src/app/pages/Overview/OverviewPage.tsx","webpack://application-services-ui/./src/app/pages/Resources/ResourcesPage.tsx","webpack://application-services-ui/./src/app/pages/ServiceAccounts/ServiceAccountsPage.tsx","webpack://application-services-ui/./src/app/pages/ServiceDown/ServiceDownPage.tsx","webpack://application-services-ui/./src/app/pages/ServiceRegistry/ArtifactVersion.tsx","webpack://application-services-ui/./src/app/pages/ServiceRegistry/Artifacts.tsx","webpack://application-services-ui/./src/app/pages/ServiceRegistry/ArtifactsRedirect.tsx","webpack://application-services-ui/./src/app/pages/ServiceRegistry/DownloadArtifacts.tsx","webpack://application-services-ui/./src/app/pages/ServiceRegistry/FederatedApicurioComponent.tsx","webpack://application-services-ui/./src/app/pages/ServiceRegistry/utils.ts","webpack://application-services-ui/./src/app/pages/ServiceRegistry/RulesPage.tsx","webpack://application-services-ui/./src/app/pages/ServiceRegistry/ServiceRegistryPage.tsx","webpack://application-services-ui/./src/app/pages/ServiceRegistry/SrsLayout.tsx","webpack://application-services-ui/./src/app/pages/ServiceRegistry/ServiceRegistrySchemaMapping.tsx","webpack://application-services-ui/./src/app/pages/AccessDenied/AccessDeniedPage.tsx","webpack://application-services-ui/./src/app/providers/auth/auth.ts","webpack://application-services-ui/./src/app/providers/config/utils.ts","webpack://application-services-ui/./src/app/providers/config/EmbeddedConfigContextProvider.tsx","webpack://application-services-ui/./src/app/providers/config/ServiceConstants.ts","webpack://application-services-ui/./src/app/providers/config/ServiceConstantsContextProvider.tsx","webpack://application-services-ui/./src/app/providers/featureflags/FeatureFlags.tsx","webpack://application-services-ui/./src/app/store/index.ts","webpack://application-services-ui/./src/app/utils/Routing.tsx","webpack://application-services-ui/./src/app/utils/getBaseName.ts","webpack://application-services-ui/./src/app/utils/useDocumentTitle.ts"],"sourcesContent":["import {\n  FunctionComponent,\n  lazy,\n  useCallback,\n  VoidFunctionComponent,\n  Suspense,\n} from \"react\";\nimport {\n  Redirect,\n  Route,\n  RouteComponentProps,\n  Switch,\n  useHistory,\n} from \"react-router-dom\";\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport getBaseName from \"./utils/getBaseName\";\nimport {\n  DevelopmentPreview,\n  AppServicesPageNotFound,\n  AppServicesEmptyState,\n  AppServicesEmptyStateVariant,\n} from \"@rhoas/app-services-ui-components\";\nimport {\n  AppRouteConfig,\n  flattenedRoutes,\n  IAppRoute,\n  PageNotFoundRoute,\n} from \"@app/utils/Routing\";\nimport { useDocumentTitle } from \"@app/utils\";\nimport { KafkaMainView } from \"@app/pages/Kafka\";\nimport { BasenameContext } from \"@rhoas/app-services-ui-shared\";\nimport { AppServicesLoading } from \"@rhoas/app-services-ui-components\";\nimport { useTranslation } from \"react-i18next\";\nimport { Button } from \"@patternfly/react-core\";\n\nconst QuickStartLoaderFederated = lazy(\n  () => import(\"@app/pages/Resources/QuickStartLoaderFederated\")\n);\n\nconst APIManagementPage = lazy(\n  () => import(\"@app/pages/APIManagement/APIManagementPage\")\n);\nconst ArtifactRedirect = lazy(\n  () => import(\"@app/pages/ServiceRegistry/ArtifactsRedirect\")\n);\nconst Artifacts = lazy(() => import(\"@app/pages/ServiceRegistry/Artifacts\"));\nconst ArtifactVersionDetails = lazy(\n  () => import(\"@app/pages/ServiceRegistry/ArtifactVersion\")\n);\nconst ApiDesignerHomePage = lazy(\n  () => import(\"@app/pages/APIDesigner/ApiDesignerHomePage\")\n);\nconst ApiDesignerEditorPage = lazy(\n  () => import(\"@app/pages/APIDesigner/ApiDesignerEditorPage\")\n);\n\nconst DataSciencePage = lazy(\n  () => import(\"@app/pages/DataScience/DataSciencePage\")\n);\nconst KafkaOverviewPage = lazy(\n  () => import(\"@app/pages/KafkaOverview/KafkaOverviewPage\")\n);\n\nconst KasPage = lazy(() => import(\"@app/pages/Kas/KasPage\"));\nconst OverviewPage = lazy(() => import(\"@app/pages/Overview/OverviewPage\"));\nconst ResourcesPage = lazy(() => import(\"@app/pages/Resources/ResourcesPage\"));\nconst RulesPage = lazy(() => import(\"@app/pages/ServiceRegistry/RulesPage\"));\nconst RolesPage = lazy(() => import(\"@app/pages/ServiceRegistry/RolesPage\"));\nconst SettingsPage = lazy(\n  () => import(\"@app/pages/ServiceRegistry/SettingsPage\")\n);\nconst ServiceAccountsPage = lazy(\n  () => import(\"@app/pages/ServiceAccounts/ServiceAccountsPage\")\n);\nconst CosPage = lazy(() => import(\"@app/pages/CosPage/CosPage\"));\nconst ServiceRegistryPage = lazy(\n  () => import(\"@app/pages/ServiceRegistry/ServiceRegistryPage\")\n);\nconst SmartEventsPage = lazy(\n  () => import(\"@app/pages/SmartEventsPage/SmartEventsPage\")\n);\n\nconst RedirectToOverview: FunctionComponent = () => <Redirect to=\"/overview\" />;\nconst RedirectToStreamsKafkas: FunctionComponent = () => (\n  <Redirect to=\"/streams/kafkas\" />\n);\nconst RedirectToServiceAccounts: FunctionComponent = () => (\n  <Redirect to=\"/service-accounts\" />\n);\nconst RedirectToResources: FunctionComponent = () => (\n  <Redirect to=\"/learning-resources\" />\n);\n\nconst appRoutes: AppRouteConfig<unknown>[] = [\n  {\n    component: RedirectToOverview,\n    exact: true,\n    label: \"Overview\",\n    path: \"/\",\n    title: \"Overview | Red Hat OpenShift Application Services\",\n  },\n  {\n    component: OverviewPage,\n    exact: true,\n    label: \"Overview\",\n    path: \"/overview\",\n    title: \"Overview | Red Hat OpenShift Application Services\",\n  },\n  {\n    component: APIManagementPage,\n    exact: true,\n    label: \"API Management\",\n    path: \"/api-management\",\n    title: \"API Management | Red Hat OpenShift Application Services\",\n  },\n  {\n    component: DataSciencePage,\n    exact: true,\n    label: \"Data Science\",\n    path: \"/data-science\",\n    title: \"Data Science | Red Hat OpenShift Application Services\",\n  },\n  {\n    component: ResourcesPage,\n    exact: true,\n    label: \"Learning Resources | Red Hat OpenShift Application Services\",\n    path: \"/learning-resources\",\n    title: \"Learning Resources | Red Hat OpenShift Application Services\",\n    devPreview: false,\n  },\n  /**\n   * STREAMS SECTION\n   */\n  {\n    // Handle the redirect from application-services/streams to application-services/streams/kafkas\n    component: RedirectToStreamsKafkas,\n    exact: true,\n    label: \"Streams for Apache Kafka\",\n    path: \"/streams\",\n    title: \"Streams for Apache Kafka | Red Hat OpenShift Application Services\",\n  },\n  {\n    component: KafkaOverviewPage,\n    exact: true,\n    label: \"Streams for Apache Kafka\",\n    path: \"/streams/overview\",\n    title:\n      \"Overview | Streams for Apache Kafka | Red Hat OpenShift Application Services\",\n  },\n  {\n    component: KasPage,\n    exact: true,\n    label: \"Streams for Apache Kafka\",\n    path: \"/streams/kafkas\",\n    title: \"Streams for Apache Kafka | Red Hat OpenShift Application Services\",\n    basename: \"/streams/kafkas\",\n    devPreview: false,\n  },\n  {\n    component: ServiceRegistryPage,\n    exact: true,\n    label: \"Service Registry\",\n    path: \"/service-registry\",\n    title: \"Service Registry | Red Hat OpenShift Application Services\",\n    basename: \"/service-registry\",\n  },\n  {\n    component: Artifacts,\n    exact: true,\n    label: \"Service Registry\",\n    path: \"/service-registry/t/:tenantId\",\n    title: \"Service Registry | Red Hat OpenShift Application Services\",\n    basename: \"/service-registry\",\n  },\n  {\n    component: RedirectToServiceAccounts,\n    exact: true,\n    label: \"Service Accounts\",\n    path: \"/streams/service-accounts\",\n    title: \"Service Accounts | Red Hat OpenShift Application Services\",\n    devPreview: false,\n  },\n  {\n    // Handle the redirect for the old url application-services/streams/resources to application-services/learning-resources\n    component: RedirectToResources,\n    label: \"QuickStarts for Red Hat OpenShift Application Services\",\n    path: \"/streams/resources\",\n    title: \"QuickStarts for Red Hat OpenShift Application Services\",\n    devPreview: true,\n  },\n  // this needs to be the last route for the streams section since it's the catch-all one\n  {\n    component: KafkaMainView,\n    label: \"Streams for Apache Kafka\",\n    path: \"/streams/kafkas/:id\",\n    title: \"Streams for Apache Kafka | Red Hat OpenShift Application Services\",\n    basename: \"/streams/kafkas/:id\",\n    devPreview: false,\n  },\n  /**\n   * END OF STREAMS SECTION\n   */\n\n  /**\n   * SERVICE REGISTRY SECTION\n   */\n  {\n    component: Artifacts,\n    exact: true,\n    label: \"Service Registry\",\n    path: \"/service-registry/t/:tenantId/artifacts\",\n    title: \"Service Registry | Red Hat OpenShift Application Services\",\n    basename: \"/service-registry\",\n  },\n  {\n    component: RulesPage,\n    exact: true,\n    label: \"Service Registry\",\n    path: \"/service-registry/t/:tenantId/rules\",\n    title: \"Service Registry | Red Hat OpenShift Application Services\",\n    basename: \"/service-registry\",\n  },\n  {\n    component: RolesPage,\n    exact: true,\n    label: \"Service Registry\",\n    path: \"/service-registry/t/:tenantId/roles\",\n    title: \"Service Registry | Red Hat OpenShift Application Services\",\n    basename: \"/service-registry\",\n  },\n  {\n    component: SettingsPage,\n    exact: true,\n    label: \"Service Registry\",\n    path: \"/service-registry/t/:tenantId/settings\",\n    title: \"Service Registry | Red Hat OpenShift Application Services\",\n    basename: \"/service-registry\",\n  },\n  {\n    component: ArtifactRedirect,\n    exact: true,\n    label: \"Service Registry\",\n    path: \"/service-registry/t/:tenantId/artifacts/:groupId/:artifactId\",\n    title: \"Service Registry | Red Hat OpenShift Application Services\",\n    basename: \"/service-registry\",\n  },\n  {\n    component: ArtifactVersionDetails,\n    exact: true,\n    label: \"Service Registry\",\n    path: \"/service-registry/t/:tenantId/artifacts/:groupId/:artifactId/versions/:version\",\n    title: \"Service Registry | Red Hat OpenShift Application Services\",\n    basename: \"/service-registry\",\n  },\n  /**\n   * END OF SERVICE REGISTRY SECTION\n   */\n\n  /**\n   * API DESIGNER SECTION\n   */\n  {\n    component: ApiDesignerHomePage,\n    exact: true,\n    label: \"API Designer\",\n    path: \"/api-designer\",\n    title: \"API Designer | Red Hat OpenShift Application Services\",\n    basename: \"/api-designer\",\n    devPreview: true,\n  },\n  {\n    component: ApiDesignerEditorPage,\n    exact: true,\n    label: \"Service Registry\",\n    path: \"/api-designer/designs/:designId/editor\",\n    title: \"API Designer | Red Hat OpenShift Application Services\",\n    basename: \"/api-designer\",\n    devPreview: true,\n  },\n  /**\n   * END OF API DESIGNER SECTION\n   */\n\n  {\n    component: CosPage,\n    exact: false,\n    label: \"COS\",\n    path: \"/connectors\",\n    title: \"Connectors | Red Hat OpenShift Application Services\",\n    basename: `${getBaseName(window.location.pathname)}/connectors`,\n    devPreview: true,\n  },\n  {\n    component: ServiceAccountsPage,\n    exact: true,\n    label: \"Service Accounts\",\n    path: \"/service-accounts\",\n    title: \"Service Accounts | Red Hat OpenShift Application Services\",\n    devPreview: false,\n  },\n  {\n    component: SmartEventsPage,\n    exact: false,\n    label: \"Smart Events\",\n    path: \"/smart-events\",\n    title: \"Smart Events | Red Hat OpenShift Application Services\",\n    basename: `${getBaseName(window.location.pathname)}/smart-events`,\n    devPreview: true,\n  },\n\n  // old url handling\n  {\n    component: RedirectToStreamsKafkas,\n    // Handle the redirect for the old url application-services/openshift-streams to application-services/streams/kafkas\n    exact: true,\n    label: \"Streams for Apache Kafka\",\n    path: \"/openshift-streams\",\n    title: \"Streams for Apache Kafka | Red Hat OpenShift Application Services\",\n  },\n];\n\nconst WrappedRoute: FunctionComponent<IAppRoute<unknown>> = ({\n  component: Component,\n  title,\n  basename,\n  devPreview,\n  ...rest\n}) => {\n  const { t } = useTranslation();\n  const history = useHistory();\n  useDocumentTitle(title);\n  const getBasename = useCallback(() => {\n    return basename || \"\";\n  }, [basename]);\n  const onClickButton = useCallback(() => history.push(\"/\"), [history]);\n\n  const wrapRoute = useCallback(\n    (routeProps: RouteComponentProps) => {\n      return (\n        <ErrorBoundary\n          fallbackRender={({ error }) =>\n            error.message === \"404\" ? (\n              <AppServicesPageNotFound />\n            ) : (\n              <AppServicesEmptyState\n                emptyStateProps={{\n                  variant: AppServicesEmptyStateVariant.UnexpectedError,\n                }}\n                emptyStateIconProps={{\n                  className: \"icon-color\",\n                }}\n                titleProps={{\n                  title: t(\"common:something_went_wrong\"),\n                }}\n                emptyStateBodyProps={{\n                  body: t(\"common:unexpected_error\"),\n                }}\n              >\n                <Button onClick={onClickButton}>\n                  {t(\"common:return_to_home_page\")}\n                </Button>\n              </AppServicesEmptyState>\n            )\n          }\n        >\n          <DevelopmentPreview show={devPreview}>\n            <BasenameContext.Provider value={{ getBasename }}>\n              <Component {...rest} {...routeProps} />\n            </BasenameContext.Provider>\n          </DevelopmentPreview>\n        </ErrorBoundary>\n      );\n    },\n    [Component, devPreview, getBasename, onClickButton, rest, t]\n  );\n\n  return <Route render={wrapRoute} {...rest} />;\n};\n\nconst AppRoutes: VoidFunctionComponent = () => {\n  return (\n    <>\n      <Suspense fallback={<AppServicesLoading />}>\n        <Switch>\n          {flattenedRoutes(appRoutes).map(\n            ({ path, exact, component, title, isAsync, ...rest }, idx) => (\n              <WrappedRoute\n                path={path}\n                exact={exact}\n                component={component}\n                key={idx}\n                title={title}\n                isAsync={isAsync}\n                {...rest}\n              />\n            )\n          )}\n          <PageNotFoundRoute title=\"404 Page Not Found\" />\n        </Switch>\n      </Suspense>\n      <QuickStartLoaderFederated />\n    </>\n  );\n};\n\nexport { AppRoutes, appRoutes };\n","import { FunctionComponent, useCallback, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { NotificationsPortal } from \"@redhat-cloud-services/frontend-components-notifications\";\nimport { AppRoutes } from \"@app/AppRoutes\";\nimport { FederatedModuleProvider } from \"@app/components\";\nimport { useInsights } from \"@app/hooks\";\nimport { Page } from \"@patternfly/react-core\";\nimport \"./App.css\";\n\nexport const App: FunctionComponent = () => {\n  const insights = useInsights();\n  const history = useHistory();\n\n  const getAppId = useCallback(() => {\n    const defaultAppId = \"overview\";\n\n    const parts = history.location.pathname.split(\"/\");\n    if (parts.length > 1) {\n      if (parts[1] === \"\") {\n        return defaultAppId;\n      } else {\n        if (parts[1] === \"openshift-streams\") {\n          return \"streams\";\n        }\n        return parts[1];\n      }\n    } else {\n      return defaultAppId;\n    }\n  }, [history]);\n\n  useEffect(() => {\n    insights.chrome.init();\n    const appId = getAppId();\n    insights.chrome.identifyApp(appId);\n\n    const unregister = insights.chrome.on(\"APP_NAVIGATION\", (event) => {\n      const streamUrls = [\"kafkas\", \"service-accounts\", \"resources\"];\n      history.push(\n        `/${streamUrls.includes(event.navId) ? \"streams/\" : \"\"}${event.navId}`\n      );\n    });\n    return () => {\n      unregister();\n    };\n  }, [getAppId, history, insights.chrome]);\n\n  return (\n    <FederatedModuleProvider>\n      <NotificationsPortal />\n      <Page>\n        <AppRoutes />\n      </Page>\n    </FederatedModuleProvider>\n  );\n};\n\n/**\n * connect: https://github.com/reactjs/react-redux/blob/master/docs/api.md\n *          https://reactjs.org/docs/higher-order-components.html\n */\nexport default connect()(App);\n","import {\n  ComponentType,\n  FunctionComponent,\n  lazy,\n  LazyExoticComponent,\n  ReactNode,\n  useEffect,\n  useRef,\n  useState,\n  VoidFunctionComponent,\n  Suspense,\n} from \"react\";\nimport { AssetsContext } from \"@rhoas/app-services-ui-shared\";\nimport { ModuleInfo } from \"@app/components/FederatedModule/moduleInfo\";\nimport { useFederatedModule } from \"@app/components\";\nimport { AppServicesLoading } from \"@rhoas/app-services-ui-components\";\n\nconst useIsMounted = () => {\n  const isMounted = useRef(false);\n  useEffect(() => {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n  return isMounted;\n};\n\ntype Container = {\n  init: (shareScopes: unknown) => Promise<void>;\n  get: (module: string) => Promise<{ (): { default: ComponentType<unknown> } }>;\n};\n\nfunction loadComponent(scope: string, module: string) {\n  return async () => {\n    // Initializes the share scope. This fills it with known provided modules from this build and all remotes\n    await __webpack_init_sharing__(\"default\");\n    const container = (window as any)[scope] as unknown as Container; // or get the container somewhere else\n    // Initialize the container, it may provide shared modules\n    await container.init(__webpack_share_scopes__.default);\n    const factory = await container.get(module);\n    const Module = factory();\n    console.debug(`loaded ${module} from ${scope}`);\n    return Module;\n  };\n}\n\nconst useDynamicScript = (url: string) => {\n  const isMounted = useIsMounted();\n  const [ready, setReady] = useState(false);\n  const [failed, setFailed] = useState(false);\n\n  useEffect(() => {\n    let element: HTMLScriptElement;\n    if (isMounted.current) {\n      if (!url) {\n        setFailed(true);\n        return;\n      }\n\n      element = document.createElement(\"script\");\n\n      element.src = url;\n      element.type = \"text/javascript\";\n      element.async = true;\n\n      setReady(false);\n      setFailed(false);\n\n      element.onload = () => {\n        console.log(`Dynamic federated module Loaded: ${url}`);\n        setReady(true);\n      };\n\n      element.onerror = () => {\n        console.error(`Dynamic federated module Error: ${url}`);\n        setReady(false);\n        setFailed(true);\n      };\n\n      document.head.appendChild(element);\n    }\n\n    return () => {\n      if (element) {\n        console.log(`Dynamic federated module Removed: ${url}`);\n        document.head.removeChild(element);\n      }\n    };\n  }, [isMounted, url]);\n\n  return {\n    ready,\n    failed,\n  };\n};\n\nexport type FederatedModuleProps = {\n  scope: string;\n  module: string;\n  render: (component: LazyExoticComponent<ComponentType<any>>) => ReactNode;\n  fallback?: ReactNode;\n};\n\nexport const FederatedModule: VoidFunctionComponent<FederatedModuleProps> = ({\n  scope,\n  module,\n  render,\n  fallback,\n}) => {\n  console.log(\"Dynamic federated module\", scope, module);\n  const isMounted = useIsMounted();\n\n  const { getModuleInfo, modules } = useFederatedModule();\n  const [moduleInfo, setModuleInfo] = useState<ModuleInfo | undefined>();\n\n  useEffect(() => {\n    const fetchModuleInfo = async () => {\n      const moduleInfo = await getModuleInfo(\n        modules[scope].basePath,\n        scope,\n        modules[scope].fallbackBasePath\n      );\n      if (isMounted.current) {\n        setModuleInfo(moduleInfo);\n      }\n    };\n    fetchModuleInfo();\n  }, [scope, modules, getModuleInfo, isMounted]);\n\n  if (moduleInfo !== undefined) {\n    return (\n      <DynamicFederatedModule\n        scope={scope}\n        module={module}\n        render={render}\n        moduleInfo={moduleInfo}\n      />\n    );\n  }\n  if (fallback !== undefined) {\n    return <>{fallback}</>;\n  }\n  return null;\n};\n\ntype DynamicFederatedModuleProps = FederatedModuleProps & {\n  moduleInfo: ModuleInfo;\n};\n\nconst DynamicFederatedModule: FunctionComponent<\n  DynamicFederatedModuleProps\n> = ({ moduleInfo, fallback, scope, render, module }) => {\n  const { ready, failed } = useDynamicScript(moduleInfo.entryPoint);\n\n  if (ready && !failed) {\n    const Component = lazy(loadComponent(scope, module));\n\n    const getPath = () => {\n      return moduleInfo.basePath;\n    };\n\n    return (\n      <AssetsContext.Provider value={{ getPath }}>\n        <Suspense fallback={<AppServicesLoading />}>\n          {render(Component)}\n        </Suspense>\n      </AssetsContext.Provider>\n    );\n  }\n\n  if (fallback) {\n    return <>{fallback}</>;\n  }\n  return null;\n};\n","import { FunctionComponent, useCallback, useEffect, useState } from \"react\";\nimport {\n  Configuration,\n  KafkaRequest,\n  SecurityApi,\n} from \"@rhoas/kafka-management-sdk\";\nimport {\n  Principal,\n  PrincipalsContext,\n  PrincipalType,\n  useAuth,\n  useConfig,\n} from \"@rhoas/app-services-ui-shared\";\nimport { PrincipalApi } from \"@redhat-cloud-services/rbac-client\";\n\nexport type PrincipalsProviderProps = {\n  kafkaInstance?: KafkaRequest;\n};\n\nexport const usePrincipal = () => {\n  const config = useConfig();\n  const auth = useAuth();\n\n  const [serviceAccountPrincipals, setServiceAccountPrincipals] = useState<\n    Principal[] | undefined\n  >();\n  const [userAcountPrincipals, setUserAccountPrincipals] = useState<\n    Principal[] | undefined\n  >();\n\n  useEffect(() => {\n    const fetchUserAccounts = async () => {\n      if (\n        config !== undefined &&\n        auth !== undefined &&\n        config.rbac.basePath !== undefined\n      ) {\n        const accessToken = await auth.kas.getToken();\n        const principalApi = new PrincipalApi({\n          accessToken,\n          basePath: config?.rbac.basePath,\n        });\n\n        try {\n          const userAccounts = await principalApi\n            .listPrincipals(-1)\n            .then((response) =>\n              response.data.data.map((p) => {\n                return {\n                  id: p.username,\n                  principalType: PrincipalType.UserAccount,\n                  displayName: `${p.first_name} ${p.last_name}`,\n                  emailAddress: p.email,\n                } as Principal;\n              })\n            );\n          setUserAccountPrincipals(userAccounts);\n        } catch (e) {\n          // temp fix - this API is only available to org admins\n          // needs a proper approach longer term\n        }\n      }\n    };\n    fetchUserAccounts();\n  }, [auth, config]);\n\n  useEffect(() => {\n    const fetchServiceAccounts = async () => {\n      if (\n        config !== undefined &&\n        auth !== undefined &&\n        config.rbac.basePath !== undefined\n      ) {\n        const accessToken = await auth.kas.getToken();\n        const securityApi = new SecurityApi({\n          accessToken,\n          basePath: config.kas.apiBasePath,\n        } as Configuration);\n        const serviceAccounts = await securityApi\n          .getServiceAccounts()\n          .then((response) =>\n            response.data.items.map((sa) => {\n              return {\n                id: sa.client_id,\n                displayName: sa.name,\n                principalType: PrincipalType.ServiceAccount,\n              } as Principal;\n            })\n          );\n\n        setServiceAccountPrincipals(serviceAccounts);\n      }\n    };\n    fetchServiceAccounts();\n  }, [auth, config]);\n\n  const getAllPrincipals = useCallback(() => {\n    let answer: Principal[] = [];\n    if (\n      userAcountPrincipals !== undefined &&\n      serviceAccountPrincipals !== undefined\n    ) {\n      answer = answer.concat(userAcountPrincipals);\n    }\n    if (serviceAccountPrincipals !== undefined) {\n      answer = answer.concat(serviceAccountPrincipals);\n    }\n    return answer;\n  }, [serviceAccountPrincipals, userAcountPrincipals]);\n\n  const getAllUserAccounts = useCallback(\n    () => userAcountPrincipals || [],\n    [userAcountPrincipals]\n  );\n  const getAllServiceAccounts = useCallback(\n    () => serviceAccountPrincipals || [],\n    [serviceAccountPrincipals]\n  );\n\n  return {\n    getAllPrincipals,\n    getAllUserAccounts,\n    getAllServiceAccounts,\n  };\n};\n\nexport const PrincipalsProvider: FunctionComponent<PrincipalsProviderProps> = ({\n  children,\n}) => {\n  const value = usePrincipal();\n  return (\n    <PrincipalsContext.Provider value={value}>\n      {children}\n    </PrincipalsContext.Provider>\n  );\n};\n","import { useCallback, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAuth } from \"@app/providers/auth\";\n\nexport function useKafkaInstanceDrawer() {\n  const history = useHistory();\n  const auth = useAuth();\n\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n  const [drawerActiveTab, setDrawerActiveTab] = useState<string | undefined>(\n    undefined\n  );\n\n  const openDrawer = useCallback((tab: string | undefined) => {\n    if (tab) {\n      setDrawerActiveTab(tab);\n    }\n    setIsDrawerOpen(true);\n  }, []);\n\n  const closeDrawer = useCallback(() => {\n    setDrawerActiveTab(undefined);\n    setIsDrawerOpen(false);\n  }, []);\n\n  const onDeleteInstance = () => {\n    history.push(\"/streams/kafkas\");\n  };\n\n  return {\n    isDrawerOpen,\n    drawerActiveTab,\n    setDrawerActiveTab,\n    openDrawer,\n    closeDrawer,\n    tokenEndPointUrl: auth?.tokenEndPointUrl,\n    onDeleteInstance,\n  };\n}\n","export type ModuleInfo = {\n  entryPoint: string;\n  basePath: string;\n};\n\nexport type FetchModuleInfoFunction = {\n  (baseUrl: string, scope: string, fallbackBasePath?: string): Promise<\n    ModuleInfo | undefined\n  >;\n};\n\nexport const fetchModuleInfo: FetchModuleInfoFunction = async (\n  baseUrl,\n  scope,\n  fallbackBasePath\n) => {\n  const fedModsJsonFileName = \"fed-mods.json\";\n\n  type FedMods = {\n    [key: string]: {\n      entry: string[];\n      modules: string[];\n    };\n  };\n\n  const fetchModuleInfo = async (basePath: string) => {\n    const url = `${basePath}/${fedModsJsonFileName}?ts=${Date.now()}`;\n    const response = await fetch(url);\n    return await response\n      .json()\n      .then((json) => json as FedMods)\n      .then((fedMods) => fedMods[scope])\n      .then((s) => s.entry[0])\n      .then((path) => {\n        if (path.startsWith(basePath)) {\n          return {\n            entryPoint: path,\n            basePath,\n          };\n        }\n        return {\n          entryPoint: `${basePath}${path}`,\n          basePath,\n        };\n      });\n  };\n\n  try {\n    // First try to fetch the main entry point\n    return await fetchModuleInfo(baseUrl);\n  } catch (e) {\n    if (fallbackBasePath) {\n      try {\n        // If fetching the main entry point failed, and there is a fallback, try fetching that\n        // This allows us to use remote versions locally, transparently\n        return await fetchModuleInfo(fallbackBasePath);\n      } catch (e1) {\n        return undefined;\n      }\n    }\n  }\n  return undefined;\n};\n","import { createContext, FunctionComponent, useContext, useRef } from \"react\";\nimport {\n  FederatedModuleConfig,\n  useConfig,\n} from \"@rhoas/app-services-ui-shared\";\nimport { AppServicesLoading } from \"@rhoas/app-services-ui-components\";\nimport {\n  fetchModuleInfo,\n  FetchModuleInfoFunction,\n  ModuleInfo,\n} from \"@app/components/FederatedModule/moduleInfo\";\n\nexport type FederatedModuleContextProps = {\n  modules: {\n    [module: string]: FederatedModuleConfig;\n  };\n  getModuleInfo: FetchModuleInfoFunction;\n};\n\nexport const FederatedModuleContext = createContext<\n  FederatedModuleContextProps | undefined\n>(undefined);\n\nexport const FederatedModuleProvider: FunctionComponent = ({ children }) => {\n  type ModuleInfoCache = {\n    [key: string]: ModuleInfo;\n  };\n\n  const moduleInfoCache = useRef<ModuleInfoCache>({} as ModuleInfoCache);\n  const config = useConfig();\n\n  if (config === undefined) {\n    return <AppServicesLoading />;\n  }\n\n  const getModuleInfo: FetchModuleInfoFunction = async (\n    baseUrl,\n    scope,\n    fallbackBasePath\n  ) => {\n    if (moduleInfoCache.current[scope] !== undefined) {\n      return moduleInfoCache.current[scope];\n    }\n    const answer = await fetchModuleInfo(baseUrl, scope, fallbackBasePath);\n    if (answer !== undefined) {\n      moduleInfoCache.current[scope] = answer;\n    }\n    return answer;\n  };\n\n  return (\n    <FederatedModuleContext.Provider\n      value={{\n        modules: config.federatedModules,\n        getModuleInfo,\n      }}\n    >\n      {children}\n    </FederatedModuleContext.Provider>\n  );\n};\n\nexport const useFederatedModule = (): FederatedModuleContextProps => {\n  const answer = useContext(FederatedModuleContext);\n  if (answer === undefined) {\n    throw new Error(\"must be used inside FederatedModuleContext provider\");\n  }\n  return answer;\n};\n","import { FC } from \"react\";\nimport { FederatedModule } from \"@app/components\";\n\nexport const KasModalLoader: FC = ({ children }) => {\n  return (\n    <FederatedModule\n      scope=\"kas\"\n      module=\"./KasModalLoader\"\n      fallback={null}\n      render={(KasModalLoaderFederated) => {\n        return <KasModalLoaderFederated>{children}</KasModalLoaderFederated>;\n      }}\n    />\n  );\n};\n","import { useCallback, useEffect, useState } from \"react\";\nimport {\n  useAuth,\n  useConfig,\n  Quota,\n  QuotaValue,\n  QuotaType,\n  ProductType,\n} from \"@rhoas/app-services-ui-shared\";\nimport { Configuration, AppServicesApi } from \"@rhoas/account-management-sdk\";\nimport { useConstants } from \"@app/providers/config/ServiceConstants\";\n\nexport const useQuota = (productId: ProductType) => {\n  const config = useConfig();\n  const auth = useAuth();\n  const constants = useConstants();\n\n  const [orgId, setOrgId] = useState<string>();\n\n  useEffect(() => {\n    const getCurrentAccount = async () => {\n      if (!orgId) {\n        const accessToken = await auth?.ams.getToken();\n        const ams = new AppServicesApi({\n          accessToken,\n          basePath: config?.ams.apiBasePath || \"\",\n        } as Configuration);\n\n        await ams.apiAccountsMgmtV1CurrentAccountGet().then((account) => {\n          const orgID = account?.data?.organization?.id;\n          setOrgId(orgID);\n        });\n      }\n    };\n\n    getCurrentAccount();\n  }, [config, auth, orgId]);\n\n  const getQuotaTypesByProductId = useCallback(() => {\n    const kasQuotaProductId = constants.kafka.ams.quotaProductId;\n    const kasTrialQuotaProductId = constants.kafka.ams.trialQuotaProductId;\n    const kasResourceName = constants.kafka.ams.resourceName;\n\n    const srsQuotaProductId = constants.serviceRegistry.ams.quotaProductId;\n    const srsTrialQuotaProductId =\n      constants.serviceRegistry.ams.trialQuotaProductId;\n    const srsResourceName = constants.serviceRegistry.ams.resourceName;\n\n    if (productId === ProductType.kas) {\n      return {\n        quotaProductId: kasQuotaProductId,\n        trialQuotaProductId: kasTrialQuotaProductId,\n        resourceName: kasResourceName,\n        quotaKey: QuotaType.kas,\n        trialQuotaKey: QuotaType.kasTrial,\n      };\n    } else if (productId === ProductType.srs) {\n      return {\n        quotaProductId: srsQuotaProductId,\n        trialQuotaProductId: srsTrialQuotaProductId,\n        resourceName: srsResourceName,\n        quotaKey: QuotaType.srs,\n        trialQuotaKey: QuotaType.srsTrial,\n      };\n    }\n    throw new Error(\n      `getQuotaTypesByProductId error, unrecognized productId ${productId}`\n    );\n  }, [constants, productId]);\n\n  const getQuota = useCallback(async () => {\n    const quotaData = new Map<QuotaType, QuotaValue>();\n    const filteredQuota: Quota = {\n      loading: true,\n      isServiceDown: false,\n      data: undefined,\n    };\n\n    if (orgId) {\n      const {\n        quotaProductId,\n        trialQuotaProductId,\n        resourceName,\n        quotaKey,\n        trialQuotaKey,\n      } = getQuotaTypesByProductId() || {};\n\n      const accessToken = await auth?.ams.getToken();\n      const ams = new AppServicesApi({\n        accessToken,\n        basePath: config?.ams.apiBasePath || \"\",\n      } as Configuration);\n\n      try {\n        const response =\n          await ams.apiAccountsMgmtV1OrganizationsOrgIdQuotaCostGet(\n            orgId,\n            undefined,\n            true\n          );\n\n        const quota = response?.data?.items?.find((q) =>\n          q.related_resources?.find(\n            (r) =>\n              r.resource_name === resourceName && r.product === quotaProductId\n          )\n        );\n        const trialQuota = response?.data?.items?.find((q) =>\n          q.related_resources?.find(\n            (r) =>\n              r.resource_name === resourceName &&\n              r.product === trialQuotaProductId\n          )\n        );\n\n        if (quota && quota.allowed > 0) {\n          const remaining = quota?.allowed - quota?.consumed;\n          quotaData?.set(quotaKey, {\n            allowed: quota?.allowed,\n            consumed: quota?.consumed,\n            remaining: remaining < 0 ? 0 : remaining,\n          });\n        }\n\n        if (trialQuota) {\n          quotaData?.set(trialQuotaKey, {\n            allowed: trialQuota?.allowed,\n            consumed: trialQuota?.consumed,\n            remaining: trialQuota?.allowed - trialQuota?.consumed,\n          });\n        }\n\n        filteredQuota.loading = false;\n        filteredQuota.data = quotaData;\n      } catch (error) {\n        filteredQuota.loading = false;\n        filteredQuota.isServiceDown = true;\n        console.error(error);\n      }\n    }\n\n    return filteredQuota;\n  }, [auth, config, getQuotaTypesByProductId, orgId]);\n\n  return { orgId, getQuota };\n};\n","import { Reducer, useEffect, useReducer, useRef } from \"react\";\n\nexport type Response<T> = {\n  status: Status;\n  error?: Error;\n  data: T | undefined;\n};\n\nexport enum Status {\n  IDLE,\n  FETCHING,\n  FETCHED,\n  FETCH_ERROR,\n}\n\nexport type ServiceProps<T> = {\n  fetch: () => Promise<T>;\n  key: string;\n};\n\nexport const useFetch = <T>({ key, fetch }: ServiceProps<T>): Response<T> => {\n  const cache = useRef<{ [key: string]: T }>({});\n\n  type Action<T> = {\n    type: Status;\n    payload?: T;\n    error?: Error;\n  };\n\n  const initialState = {\n    status: Status.IDLE,\n    error: undefined,\n    data: undefined,\n  } as Response<T>;\n\n  const [state, dispatch] = useReducer<Reducer<Response<T>, Action<T>>>(\n    (state, action: Action<T>) => {\n      switch (action.type) {\n        case Status.FETCHING:\n          return { ...state, status: Status.FETCHING };\n        case Status.FETCHED:\n          return { ...state, status: Status.FETCHED, data: action.payload };\n        case Status.FETCH_ERROR:\n          return { ...state, status: Status.FETCH_ERROR, error: action.error };\n        default:\n          return state;\n      }\n    },\n    initialState\n  );\n\n  useEffect(() => {\n    let cancelRequest = false;\n\n    const doFetch = async () => {\n      dispatch({ type: Status.FETCHING });\n      if (cache.current[key]) {\n        const data = cache.current[key];\n        dispatch({ type: Status.FETCHED, payload: data });\n      } else {\n        try {\n          const response = await fetch();\n          cache.current[key] = response;\n          if (cancelRequest) return;\n          dispatch({ type: Status.FETCHED, payload: response });\n        } catch (error) {\n          if (cancelRequest) return;\n          if (error instanceof Error) {\n            dispatch({ type: Status.FETCH_ERROR, error });\n          } else if (typeof error === \"string\") {\n            dispatch({\n              type: Status.FETCH_ERROR,\n              error: new Error(error),\n            });\n          } else {\n            dispatch({\n              type: Status.FETCH_ERROR,\n              error: new Error(\"unknown error\"),\n            });\n          }\n        }\n      }\n    };\n\n    doFetch();\n\n    return function cleanup() {\n      cancelRequest = true;\n    };\n  }, [fetch, key]);\n\n  return state;\n};\n","import {\n  Auth,\n  Config,\n  useAuth,\n  useConfig,\n} from \"@rhoas/app-services-ui-shared\";\nimport {\n  Configuration,\n  AppServicesApi,\n  TermsReviewResponse,\n} from \"@rhoas/account-management-sdk\";\nimport { ServiceProps, useFetch } from \"@app/services/fetch\";\nimport { useCallback, useEffect, useMemo, useRef } from \"react\";\n\nexport type ITermsConfig = {\n  eventCode: string;\n  siteCode: string;\n};\n\nexport const useTermsReview = (termsConfig: ITermsConfig) => {\n  const config = useConfig();\n  const auth = useAuth();\n\n  const fetchProps = useMemo(\n    () => fetchTermsReviewFactory(config, auth, termsConfig),\n    [auth, config, termsConfig]\n  );\n\n  return useFetch(fetchProps);\n};\n\nexport const useAsyncTermsReview = (termsConfig: ITermsConfig) => {\n  const config = useConfig();\n  const auth = useAuth();\n  const ref = useRef<TermsReviewResponse | undefined>();\n\n  // Return a function that either returns the lazily loaded terms review, or waits for the terms review to load\n  const load = useCallback(async (): Promise<TermsReviewResponse> => {\n    if (ref.current !== undefined) {\n      // return the cached copy\n      return ref.current;\n    }\n    const answer = await fetchTermsReviewFactory(config, auth, termsConfig)\n      .fetch()\n      .then((r) => r);\n    ref.current = answer;\n    return answer;\n  }, [auth, config, termsConfig]);\n\n  useEffect(() => {\n    // Lazy-load the terms review\n    load();\n  }, [config, auth, load]);\n  return load;\n};\n\nconst fetchTermsReviewFactory = (\n  config: Config,\n  auth: Auth,\n  termsConfig: ITermsConfig\n): ServiceProps<TermsReviewResponse> => {\n  return {\n    key: \"selfTermsReview\",\n    fetch: async () => {\n      const accessToken = await auth?.ams.getToken();\n      const defaultApi = new AppServicesApi({\n        accessToken,\n        basePath: config?.ams.apiBasePath || \"\",\n      } as Configuration);\n      const response = await defaultApi.apiAuthorizationsV1SelfTermsReviewPost({\n        event_code: termsConfig.eventCode,\n        site_code: termsConfig.siteCode,\n      });\n      return response.data;\n    },\n  };\n};\n","/**\n * get the URL to TnC (Terms and Conditions) app.\n * @param baseURL is the base URL of TnC UX app;\n * @param redirectURL is the return URL if the user clicks \"Accept\", \"Deny\", or \"Defer\"\n * @param cancelURL is the return URL if the user clicks \"Cancel\".\n */\nexport const getTermsAppURL = (\n  baseURL: string,\n  redirectURL: string,\n  cancelURL: string\n) => {\n  const params = {\n    redirect: redirectURL,\n    cancelRedirect: cancelURL,\n  };\n  // baseURL contains params already.\n  return `${baseURL}&${buildUrlParams(params)}`;\n};\n\nexport const buildUrlParams = (params: { [key: string]: string }) =>\n  Object.keys(params)\n    .map((key) => `${key}=${encodeURIComponent(params[key])}`)\n    .join(\"&\");\n","import { useLocation } from \"react-router-dom\";\nimport { parse as parseQueryString, stringifyUrl } from \"query-string\";\nimport { useAsyncTermsReview, ITermsConfig } from \"@app/services/termsReview\";\nimport { getTermsAppURL } from \"@app/utils/termsApp\";\n\nexport const useModalControl = (termsConfig: ITermsConfig) => {\n  const loadTermsReview = useAsyncTermsReview(termsConfig);\n  const location = useLocation();\n\n  const shouldOpenCreateModal = async () => {\n    const parsed = parseQueryString(location.search);\n    const c = parsed[\"create\"] === \"true\";\n    if (c) {\n      const termsReview = await loadTermsReview();\n      if (!termsReview.terms_required) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  const preCreateInstance = async (shouldOpenCreateModal: boolean) => {\n    const termsReview = await loadTermsReview();\n    if (termsReview.terms_available || termsReview.terms_required) {\n      if (termsReview.redirect_url === undefined) {\n        throw new Error(\"terms must be signed but there is no terms url\");\n      }\n      const redirectURL = stringifyUrl({\n        url: window.location.href,\n        query: { create: \"true\" },\n      });\n      const url = getTermsAppURL(\n        termsReview.redirect_url,\n        redirectURL,\n        window.location.href\n      );\n\n      return { shouldOpenCreateModal: false, url };\n    }\n    return { shouldOpenCreateModal, url: undefined };\n  };\n\n  return { shouldOpenCreateModal, preCreateInstance };\n};\n","import { InsightsType } from \"@app/utils\";\n\nexport const useInsights = () => {\n  const insights = (window as any)[\"insights\"] as InsightsType;\n  if (insights === undefined) {\n    throw new Error(\"must be used inside an initialized insights context\");\n  }\n  return insights;\n};\n","import { Auth, useConfig } from \"@rhoas/app-services-ui-shared\";\nimport { useInsights } from \"@app/hooks/insights\";\n\nexport const useAuth = (): Auth => {\n  const config = useConfig();\n  const insights = useInsights();\n\n  if (config === undefined || insights.chrome.auth === undefined) {\n    throw new Error(\n      \"useAuth must be used inside a config provider, and insights auth\"\n    );\n  }\n\n  const insightsChromeAuth = insights.chrome.auth;\n\n  const getUsername = async () => {\n    const user = await insightsChromeAuth.getUser();\n    return user.identity.user.username;\n  };\n\n  const isOrgAdmin = async () => {\n    const user = await insightsChromeAuth.getUser();\n    return user.identity.user.is_org_admin;\n  };\n\n  const getToken = insightsChromeAuth.getToken;\n\n  return {\n    getUsername,\n    isOrgAdmin,\n    kafka: {\n      getToken,\n    },\n    kas: {\n      getToken,\n    },\n    ams: {\n      getToken,\n    },\n    srs: {\n      getToken,\n    },\n    apicurio_registry: {\n      getToken,\n    },\n    smart_events: {\n      getToken,\n    },\n  };\n};\n","import { useCallback } from \"react\";\nimport { useConfig } from \"@rhoas/app-services-ui-shared\";\nimport { SsoProviderAllOf } from \"@rhoas/kafka-management-sdk\";\n\nexport const useSSOProviders = () => {\n  const config = useConfig();\n  return useCallback(async (): Promise<SsoProviderAllOf> => {\n    const response = await fetch(\n      `${config.kas.apiBasePath}/api/kafkas_mgmt/v1/sso_providers`\n    );\n    return response.json();\n  }, [config.kas.apiBasePath]);\n};\n","import { APIManagementPage } from \"@rhoas/app-services-ui-components\";\nimport { FunctionComponent } from \"react\";\n\nexport const APIManagementOverviewPage: FunctionComponent = () => {\n  return <APIManagementPage />;\n};\n\nexport default APIManagementOverviewPage;\n","import { FederatedModule } from \"@app/components\";\nimport { ServiceDownPage } from \"@app/pages/ServiceDown/ServiceDownPage\";\nimport { useConfig } from \"@rhoas/app-services-ui-shared\";\nimport { AppServicesLoading } from \"@rhoas/app-services-ui-components\";\nimport { FunctionComponent } from \"react\";\n\nexport const CosPage: FunctionComponent = () => {\n  const config = useConfig();\n\n  if (config?.serviceDown) {\n    return <ServiceDownPage />;\n  }\n\n  return (\n    <FederatedModule\n      scope=\"cos\"\n      fallback={<AppServicesLoading />}\n      module=\"./OpenshiftManagedConnectors\"\n      render={(OpenshiftManagedConnectors) => <OpenshiftManagedConnectors />}\n    />\n  );\n};\n\nexport default CosPage;\n","import { DataSciencePage } from \"@rhoas/app-services-ui-components\";\nimport { FunctionComponent } from \"react\";\n\nexport const DataScienceOverViewPage: FunctionComponent = () => {\n  return <DataSciencePage />;\n};\n\nexport default DataScienceOverViewPage;\n","import { FederatedModule } from \"@app/components\";\nimport { KafkaRequestWithSize } from \"@app/pages/Kafka/kafka-instance\";\nimport { FunctionComponent } from \"react\";\n\nexport type KafkaFederatedComponentProps = UnderlyingProps & {\n  module: string;\n};\n\nexport type UnderlyingProps = {\n  activeTab?: number;\n  getToken?: () => Promise<string> | undefined;\n  apiBasePath?: string;\n  kafkaName?: string;\n  kafkaPageLink?: string;\n  kafkaInstanceLink?: string;\n  onError?: (errorCode: number, message?: string) => void;\n  showMetrics?: JSX.Element;\n  showSchemas?: JSX.Element;\n  kafka?: Required<KafkaRequestWithSize>;\n  redirectAfterDeleteInstance?: () => void;\n  handleInstanceDrawer?: (isOpen: boolean, activeTab?: string) => void;\n};\n\n// Provides properties for component path and it's underlying properties\nexport const KafkaFederatedComponent: FunctionComponent<\n  KafkaFederatedComponentProps\n> = ({ module, ...rest }) => {\n  return (\n    <FederatedModule\n      data-ouia-app-id=\"dataPlane-streams\"\n      scope=\"kafka\"\n      module={module}\n      render={(FederatedKafka) => <FederatedKafka {...rest} />}\n    />\n  );\n};\n","import { FunctionComponent } from \"react\";\nimport {\n  KafkaFederatedComponent,\n  UnderlyingProps,\n} from \"@app/pages/Kafka/KafkaFederatedComponent\";\n\nexport const Topics: FunctionComponent<UnderlyingProps> = (props) => (\n  <KafkaFederatedComponent module=\"./Topics\" {...props} />\n);\n","import {\n  KafkaFederatedComponent,\n  UnderlyingProps,\n} from \"@app/pages/Kafka/KafkaFederatedComponent\";\nimport { FunctionComponent } from \"react\";\n\nexport const TopicDetails: FunctionComponent<UnderlyingProps> = (props) => (\n  <KafkaFederatedComponent module=\"./TopicDetails\" {...props} />\n);\n","import {\n  KafkaFederatedComponent,\n  UnderlyingProps,\n} from \"@app/pages/Kafka/KafkaFederatedComponent\";\nimport { FunctionComponent } from \"react\";\n\nexport const CreateTopic: FunctionComponent<UnderlyingProps> = (props) => (\n  <KafkaFederatedComponent module=\"./CreateTopic\" {...props} />\n);\n","import { FunctionComponent } from \"react\";\nimport {\n  KafkaFederatedComponent,\n  UnderlyingProps,\n} from \"@app/pages/Kafka/KafkaFederatedComponent\";\n\nexport const UpdateTopic: FunctionComponent<UnderlyingProps> = (props) => (\n  <KafkaFederatedComponent module=\"./UpdateTopic\" {...props} />\n);\n","import {\n  KafkaFederatedComponent,\n  UnderlyingProps,\n} from \"@app/pages/Kafka/KafkaFederatedComponent\";\nimport { FunctionComponent } from \"react\";\n\nexport const Dashboard: FunctionComponent<UnderlyingProps> = (props) => (\n  <KafkaFederatedComponent module=\"./Dashboard\" {...props} />\n);\n","import {\n  KafkaFederatedComponent,\n  UnderlyingProps,\n} from \"@app/pages/Kafka/KafkaFederatedComponent\";\nimport { FunctionComponent } from \"react\";\n\nexport const ConsumerGroups: FunctionComponent<UnderlyingProps> = (props) => (\n  <KafkaFederatedComponent module=\"./ConsumerGroups\" {...props} />\n);\n","import {\n  KafkaFederatedComponent,\n  UnderlyingProps,\n} from \"@app/pages/Kafka/KafkaFederatedComponent\";\nimport { FunctionComponent } from \"react\";\n\nexport const AclPermissions: FunctionComponent<UnderlyingProps> = (props) => (\n  <KafkaFederatedComponent module=\"./AclPermissions\" {...props} />\n);\n","import {\n  ComponentType,\n  FunctionComponent,\n  ReactElement,\n  useCallback,\n  VoidFunctionComponent,\n} from \"react\";\nimport { Route, Switch, useRouteMatch } from \"react-router-dom\";\nimport {\n  AppRouteConfig,\n  flattenedRoutes,\n  IAppRoute,\n  PageNotFoundRoute,\n} from \"@app/utils/Routing\";\nimport { useDocumentTitle } from \"@app/utils\";\nimport {\n  CreateTopic,\n  TopicDetails,\n  Topics,\n  UpdateTopic,\n  Dashboard,\n  ConsumerGroups,\n  AclPermissions,\n} from \"@app/pages\";\nimport { UnderlyingProps } from \"@app/pages/Kafka/KafkaFederatedComponent\";\nimport { BasenameContext } from \"@rhoas/app-services-ui-shared\";\nimport { useKafkaInstanceDrawer } from \"@app/components\";\n\nconst kafkaRoutes: AppRouteConfig<UnderlyingProps>[] = [\n  {\n    component: Topics,\n    exact: true,\n    label: \"Red Hat OpenShift Streams for Apache Kafka\",\n    path: \"/topics\",\n    title: \"Red Hat OpenShift Streams for Apache Kafka\",\n    devPreview: true,\n  },\n  {\n    component: TopicDetails,\n    exact: true,\n    label: \"Red Hat OpenShift Streams for Apache Kafka\",\n    path: \"/topics/:topicName\",\n    title: \"Red Hat OpenShift Streams for Apache Kafka\",\n    devPreview: true,\n  },\n  {\n    component: CreateTopic,\n    exact: true,\n    label: \"Red Hat OpenShift Streams for Apache Kafka\",\n    path: \"/topic/create\",\n    title: \"Red Hat OpenShift Streams for Apache Kafka\",\n    devPreview: true,\n  },\n  {\n    component: UpdateTopic,\n    exact: true,\n    label: \"Red Hat OpenShift Streams for Apache Kafka\",\n    path: \"/topic/update/:topicName\",\n    title: \"Red Hat OpenShift Streams for Apache Kafka\",\n    devPreview: true,\n  },\n  {\n    component: Dashboard,\n    exact: true,\n    label: \"Red Hat OpenShift Streams for Apache Kafka\",\n    path: \"/\",\n    title: \"Red Hat OpenShift Streams for Apache Kafka\",\n    devPreview: true,\n  },\n  {\n    component: Dashboard,\n    exact: true,\n    label: \"Red Hat OpenShift Streams for Apache Kafka\",\n    path: \"/dashboard\",\n    title: \"Red Hat OpenShift Streams for Apache Kafka\",\n    devPreview: true,\n  },\n  {\n    component: ConsumerGroups,\n    exact: true,\n    label: \"Red Hat OpenShift Streams for Apache Kafka\",\n    path: \"/consumer-groups\",\n    title: \"Red Hat OpenShift Streams for Apache Kafka\",\n    devPreview: true,\n  },\n  {\n    component: AclPermissions,\n    exact: true,\n    label: \"Red Hat OpenShift Streams for Apache Kafka\",\n    path: \"/acls\",\n    title: \"Red Hat OpenShift Streams for Apache Kafka\",\n    devPreview: true,\n  },\n];\nconst flatRoutes = flattenedRoutes(kafkaRoutes);\n\ntype WrappedRouteProps = IAppRoute<UnderlyingProps> & {\n  underlyingProps: UnderlyingProps;\n  url: string;\n  InstanceDrawer: ComponentType;\n};\n\n/**\n * The wrapped route allows us to apply the basename, document title and accessible route change for all components\n * without having to add these to each component. They must happen inside the route.\n */\nconst WrappedRoute: FunctionComponent<WrappedRouteProps> = ({\n  component: Component,\n  InstanceDrawer,\n  isAsync = false,\n  title,\n  underlyingProps,\n  url,\n  ...rest\n}) => {\n  useDocumentTitle(title);\n\n  const getBasename = () => {\n    return url;\n  };\n\n  return (\n    <Route\n      render={(routeProps) => {\n        return (\n          <BasenameContext.Provider value={{ getBasename }}>\n            <Component {...underlyingProps} {...rest} {...routeProps} />\n          </BasenameContext.Provider>\n        );\n      }}\n      {...rest}\n    />\n  );\n};\n\nconst KafkaRoutes: VoidFunctionComponent<\n  UnderlyingProps & { InstanceDrawer: ComponentType<any> }\n> = ({ InstanceDrawer, ...props }): ReactElement => {\n  const routeMatch = useRouteMatch();\n  const { kafka } = props;\n\n  const drawerProps = useKafkaInstanceDrawer();\n  const handleInstanceDrawer: (isOpen: boolean, activeTab?: string) => void =\n    useCallback(\n      (isOpen, activeTab) => {\n        if (isOpen) {\n          drawerProps.openDrawer(activeTab);\n        } else {\n          drawerProps.closeDrawer();\n        }\n      },\n      [drawerProps]\n    );\n\n  return (\n    <InstanceDrawer\n      data-ouia-app-id=\"dataPlane-streams\"\n      drawerInstance={kafka}\n      setDrawerInstance={() => false} // can't change the instance from the data plane\n      {...drawerProps}\n    >\n      <Switch>\n        {flatRoutes.map(\n          ({ path, exact, component, title, isAsync, ...rest }, idx) => {\n            const routePath = `${routeMatch.path}${path}`;\n            console.log(`Creating route for ${routePath}`);\n            return (\n              <WrappedRoute\n                path={routePath}\n                exact={exact}\n                component={component}\n                key={idx}\n                title={title}\n                isAsync={isAsync}\n                underlyingProps={{\n                  ...props,\n                  handleInstanceDrawer,\n                }}\n                url={routeMatch.url}\n                InstanceDrawer={InstanceDrawer}\n                {...rest}\n              />\n            );\n          }\n        )}\n        <PageNotFoundRoute title=\"404 Page Not Found\" />\n      </Switch>\n    </InstanceDrawer>\n  );\n};\n\nexport { KafkaRoutes, kafkaRoutes };\n","import { useCallback, useMemo, useState, VoidFunctionComponent } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport {\n  AccessDeniedPage,\n  ConnectedMetrics,\n  ServiceDownPage,\n} from \"@app/pages\";\nimport {\n  KafkaInstance,\n  useKafkaInstance,\n} from \"@app/pages/Kafka/kafka-instance\";\nimport { UnderlyingProps } from \"@app/pages/Kafka/KafkaFederatedComponent\";\nimport { PrincipalsProvider } from \"@app/components/PrincipalsProvider/PrincipalsProvider\";\nimport { useAuth, useConfig } from \"@rhoas/app-services-ui-shared\";\nimport { AppServicesLoading } from \"@rhoas/app-services-ui-components\";\nimport { ServiceRegistrySchemaMapping } from \"@app/pages/ServiceRegistry\";\nimport { KafkaRoutes } from \"./KafkaRoutes\";\nimport { FederatedModule } from \"@app/components\";\n\nexport const KafkaMainView: VoidFunctionComponent = () => {\n  const config = useConfig();\n  const { id: kafkaInstanceId } = useParams<{ id: string }>();\n  const kafka = useKafkaInstance(kafkaInstanceId);\n\n  if (config?.serviceDown) {\n    return <ServiceDownPage />;\n  }\n\n  if (kafka === undefined) {\n    return <AppServicesLoading />;\n  }\n\n  if (kafka === false) {\n    throw new Error(\"404\");\n  }\n\n  return <KafkaMainViewConnected kafka={kafka} />;\n};\n\nexport const KafkaMainViewConnected: VoidFunctionComponent<{\n  kafka: KafkaInstance;\n}> = ({ kafka }) => {\n  return (\n    <PrincipalsProvider kafkaInstance={kafka.kafkaDetail}>\n      <ConnectedKafkaRoutes kafka={kafka} />\n    </PrincipalsProvider>\n  );\n};\n\nconst ConnectedKafkaRoutes: VoidFunctionComponent<{\n  kafka: KafkaInstance;\n}> = ({ kafka: { kafkaDetail, adminServerUrl } }) => {\n  const {\n    kafka: { getToken },\n  } = useAuth();\n  const history = useHistory();\n  const [error, setError] = useState<undefined | number>();\n\n  const onError = useCallback((code: number) => {\n    setError(code);\n  }, []);\n\n  const redirectAfterDeleteInstance = useCallback(() => {\n    history.push(\"/streams/kafkas\");\n  }, [history]);\n\n  const showMetrics = useMemo(\n    () => (\n      <ConnectedMetrics\n        kafkaId={kafkaDetail.id}\n        kafkaAdminUrl={adminServerUrl}\n        totalMaxConnections={kafkaDetail.size.total_max_connections || 0}\n        maxConnections={kafkaDetail.size.max_connection_attempts_per_sec || 0}\n        maxPartitions={kafkaDetail.size.max_partitions || 0}\n        kafkaStorageBytes={kafkaDetail.max_data_retention_size?.bytes || 0}\n      />\n    ),\n    [adminServerUrl, kafkaDetail]\n  );\n  const showSchemas = useMemo(() => <ServiceRegistrySchemaMapping />, []);\n\n  const props = useMemo<Partial<UnderlyingProps>>(\n    () => ({\n      kafkaPageLink: \"/streams/kafkas\",\n      kafkaInstanceLink: `/streams/kafkas/${kafkaDetail.id}/topics`,\n      showMetrics,\n      onError,\n      kafkaName: kafkaDetail.name,\n      apiBasePath: adminServerUrl,\n      getToken: getToken,\n      showSchemas,\n      kafka: kafkaDetail,\n      redirectAfterDeleteInstance,\n    }),\n    [\n      adminServerUrl,\n      getToken,\n      kafkaDetail,\n      onError,\n      redirectAfterDeleteInstance,\n      showMetrics,\n      showSchemas,\n    ]\n  );\n\n  if (error === 401) {\n    return <AccessDeniedPage />;\n  }\n\n  return (\n    <FederatedModule\n      scope=\"kas\"\n      module=\"./InstanceDrawer\"\n      fallback={null}\n      render={(InstanceDrawer) => (\n        <KafkaRoutes {...props} InstanceDrawer={InstanceDrawer} />\n      )}\n    />\n  );\n};\n","import { TopicsApi, Topic } from \"@rhoas/kafka-instance-sdk\";\nimport { Configuration } from \"@rhoas/kafka-management-sdk\";\nimport { BasicApiConfigurationParameters } from \"./types\";\n\nexport async function fetchKafkaTopisFromAdmin({\n  accessToken,\n  basePath,\n}: BasicApiConfigurationParameters): Promise<string[]> {\n  const api = new TopicsApi(\n    new Configuration({\n      accessToken,\n      basePath,\n    })\n  );\n  const response = await api.getTopics(\n    undefined,\n    100,\n    100,\n    undefined,\n    undefined,\n    undefined,\n    undefined\n  );\n  return (response.data.items || []).map((t: Topic) => t.name as string);\n}\n","import {\n  GetTopicsMetricsResponse,\n  PartitionBytesMetric,\n  TimeSeriesMetrics,\n} from \"@rhoas/app-services-ui-components\";\nimport { Configuration, DefaultApi } from \"@rhoas/kafka-management-sdk\";\nimport { BasicApiConfigurationParameters, SafeRangeQuery } from \"./types\";\n\nexport type FetchTopicsMetricsProps = {\n  kafkaId: string;\n  duration: number;\n  interval: number;\n  selectedTopic: string | undefined;\n} & BasicApiConfigurationParameters;\n\nexport async function fetchTopicMetrics({\n  accessToken,\n  basePath,\n  kafkaId,\n  duration,\n  interval,\n  selectedTopic,\n}: FetchTopicsMetricsProps): Promise<\n  Omit<GetTopicsMetricsResponse, \"kafkaTopics\">\n> {\n  const apisService = new DefaultApi(\n    new Configuration({\n      accessToken,\n      basePath,\n    })\n  );\n\n  const response = await apisService.getMetricsByRangeQuery(\n    kafkaId,\n    duration,\n    interval,\n    [\n      \"kafka_topic:kafka_server_brokertopicmetrics_bytes_in_total:rate5m\",\n      \"kafka_topic:kafka_server_brokertopicmetrics_bytes_out_total:rate5m\",\n      \"kafka_topic:kafka_log_log_size:sum\",\n      \"kafka_topic:kafka_server_brokertopicmetrics_messages_in_total:rate5m\",\n    ]\n  );\n\n  // Remove all results with no data. Not sure this can really  happen but since\n  // the types allow for undefined we need to do a bit of defensive programming.\n  const safeMetrics: SafeRangeQuery[] = (response.data.items || []).filter(\n    (m) =>\n      // defensive programming\n      !(m.values && m.metric && m.metric.topic && m.metric.name)\n  ) as SafeRangeQuery[];\n\n  // Also filter for metrics about the selectedTopic, if specified\n  const filteredMetrics = safeMetrics.filter((m) =>\n    // filter for metrics for the selectedTopic, if needed\n    selectedTopic !== undefined ? m.metric?.topic === selectedTopic : true\n  );\n\n  // get the unique topics we have metrics for in the selected time range\n  const topics = Array.from(new Set(safeMetrics.map((m) => m.metric.topic)));\n\n  const bytesIncoming: TimeSeriesMetrics = {};\n  const bytesOutgoing: TimeSeriesMetrics = {};\n  const bytesPerPartition: PartitionBytesMetric = {};\n  const incomingMessageRate: TimeSeriesMetrics = {};\n\n  filteredMetrics.forEach((m) => {\n    const { __name__: name, topic } = m.metric;\n\n    function addAggregatedTotalBytesTo(metric: TimeSeriesMetrics) {\n      m.values.forEach(\n        ({ value, timestamp }) =>\n          (metric[timestamp] = value + (metric[timestamp] || 0))\n      );\n    }\n\n    function addAggregatePartitionBytes() {\n      const partition = bytesPerPartition[topic] || {};\n      m.values.forEach(\n        ({ value, timestamp }) =>\n          (partition[timestamp] = value + (partition[timestamp] || 0))\n      );\n      bytesPerPartition[topic] = partition;\n    }\n\n    switch (name) {\n      case \"kafka_topic:kafka_server_brokertopicmetrics_bytes_in_total:rate5m\":\n        addAggregatedTotalBytesTo(bytesIncoming);\n        break;\n      case \"kafka_topic:kafka_server_brokertopicmetrics_bytes_out_total:rate5m\":\n        addAggregatedTotalBytesTo(bytesOutgoing);\n        break;\n      case \"kafka_topic:kafka_log_log_size:sum\":\n        addAggregatePartitionBytes();\n        break;\n      case \"kafka_topic:kafka_server_brokertopicmetrics_messages_in_total:rate5m\":\n        addAggregatedTotalBytesTo(incomingMessageRate);\n        break;\n    }\n  });\n\n  return {\n    metricsTopics: topics,\n    bytesOutgoing,\n    bytesIncoming,\n    bytesPerPartition,\n    incomingMessageRate,\n  };\n}\n","import { useCallback, useState, VoidFunctionComponent } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAuth, useBasename, useConfig } from \"@rhoas/app-services-ui-shared\";\nimport {\n  AppServicesLoading,\n  Metrics,\n  MetricsProps,\n} from \"@rhoas/app-services-ui-components\";\nimport {\n  fetchKafkaInstanceMetrics,\n  fetchKafkaTopisFromAdmin,\n  fetchMetricsKpi,\n  fetchTopicMetrics,\n} from \"./api\";\n\ntype ConnectedMetricsProps = {\n  kafkaId: string;\n  kafkaAdminUrl: string | undefined;\n  totalMaxConnections: number;\n  maxConnections: number;\n  maxPartitions: number;\n  kafkaStorageBytes: number;\n};\n\nexport const ConnectedMetrics: VoidFunctionComponent<ConnectedMetricsProps> = ({\n  kafkaId,\n  kafkaAdminUrl,\n  totalMaxConnections,\n  maxConnections,\n  maxPartitions,\n  kafkaStorageBytes,\n}) => {\n  const auth = useAuth();\n  const history = useHistory();\n  const config = useConfig();\n  const { getBasename } = useBasename() || {};\n  const basename = getBasename && getBasename();\n\n  const storageKey = `metrics-alert-${kafkaId}`;\n\n  const [isAlertClosed, setIsAlertClosed] = useState<boolean>(\n    localStorage.getItem(storageKey) !== null\n  );\n\n  const onAlertClose = () => {\n    setIsAlertClosed(true);\n    localStorage.setItem(storageKey, \"true\");\n  };\n\n  const onCreateTopic = () => {\n    history.push(`${basename}/topic/create`);\n  };\n\n  const getKafkaInstanceMetrics: MetricsProps[\"getKafkaInstanceMetrics\"] =\n    useCallback(\n      async (props) => {\n        const kafkaResponse = await fetchKafkaInstanceMetrics({\n          ...props,\n          kafkaId,\n          basePath: config.kas.apiBasePath,\n          accessToken: auth?.kas.getToken(),\n        });\n\n        return {\n          ...kafkaResponse,\n          diskSpaceLimit: kafkaStorageBytes / 1073741824,\n          connectionsLimit: totalMaxConnections,\n          connectionRateLimit: maxConnections,\n        };\n      },\n      [\n        auth,\n        config,\n        kafkaId,\n        kafkaStorageBytes,\n        totalMaxConnections,\n        maxConnections,\n      ]\n    );\n\n  const getTopicMetrics: MetricsProps[\"getTopicsMetrics\"] = useCallback(\n    async (props) => {\n      const [kafkaTopics, metrics] = await Promise.all([\n        fetchKafkaTopisFromAdmin({\n          accessToken: auth?.kafka.getToken(),\n          basePath: kafkaAdminUrl,\n        }),\n        fetchTopicMetrics({\n          ...props,\n          kafkaId,\n          basePath: config.kas.apiBasePath,\n          accessToken: auth?.kas.getToken(),\n        }),\n      ]);\n      const {\n        metricsTopics,\n        bytesIncoming,\n        bytesOutgoing,\n        bytesPerPartition,\n        incomingMessageRate,\n      } = metrics;\n      return {\n        kafkaTopics,\n        metricsTopics,\n        bytesIncoming,\n        bytesOutgoing,\n        bytesPerPartition,\n        incomingMessageRate,\n      };\n    },\n    [auth?.kafka, auth?.kas, config.kas.apiBasePath, kafkaAdminUrl, kafkaId]\n  );\n\n  const getMetricsKpi: MetricsProps[\"getMetricsKpi\"] = useCallback(async () => {\n    const kpiResponse = await fetchMetricsKpi({\n      kafkaId,\n      basePath: config.kas.apiBasePath,\n      accessToken: auth?.kas.getToken(),\n    });\n\n    return { ...kpiResponse, topicPartitionsLimit: maxPartitions };\n  }, [auth?.kas, config.kas.apiBasePath, kafkaId, maxPartitions]);\n\n  if (config === undefined) {\n    return <AppServicesLoading />;\n  }\n\n  return (\n    <Metrics\n      onCreateTopic={onCreateTopic}\n      getTopicsMetrics={getTopicMetrics}\n      getKafkaInstanceMetrics={getKafkaInstanceMetrics}\n      getMetricsKpi={getMetricsKpi}\n      isClosed={isAlertClosed}\n      onClickClose={onAlertClose}\n    />\n  );\n};\n","import {\n  GetKafkaInstanceMetricsResponse,\n  TimeSeriesMetrics,\n} from \"@rhoas/app-services-ui-components\";\nimport { Configuration, DefaultApi } from \"@rhoas/kafka-management-sdk\";\nimport { BasicApiConfigurationParameters, SafeRangeQuery } from \"./types\";\n\ntype FetchKafkaInstanceMetricsProps = {\n  kafkaId: string;\n  duration: number;\n  interval: number;\n} & BasicApiConfigurationParameters;\nexport async function fetchKafkaInstanceMetrics({\n  kafkaId,\n  duration,\n  interval,\n  accessToken,\n  basePath,\n}: FetchKafkaInstanceMetricsProps): Promise<GetKafkaInstanceMetricsResponse> {\n  const apisService = new DefaultApi(\n    new Configuration({\n      accessToken,\n      basePath,\n    })\n  );\n\n  const response = await apisService.getMetricsByRangeQuery(\n    kafkaId,\n    duration,\n    interval,\n    [\n      \"kubelet_volume_stats_used_bytes\",\n      \"kafka_namespace:kafka_server_socket_server_metrics_connection_creation_rate:sum\",\n      \"kafka_namespace:kafka_server_socket_server_metrics_connection_count:sum\",\n    ]\n  );\n\n  // Remove all results with no data. Not sure this can really  happen but since\n  // the types allow for undefined we need to do a bit of defensive programming.\n  const safeMetrics: SafeRangeQuery[] = (response.data.items || []).filter(\n    (m) =>\n      // defensive programming\n      !(\n        m.values &&\n        m.metric &&\n        m.metric.topic &&\n        m.metric.name &&\n        m.metric.persistentvolumeclaim &&\n        m.metric.persistentvolumeclaim.includes(\"zookeeper\")\n      )\n  ) as SafeRangeQuery[];\n\n  const usedDiskSpaceMetrics: TimeSeriesMetrics = {};\n  const connectionAttemptRateMetrics: TimeSeriesMetrics = {};\n  const clientConnectionsMetrics: TimeSeriesMetrics = {};\n\n  const connectionRateLimit = 0,\n    connectionsLimit = 0,\n    diskSpaceLimit = 0;\n\n  safeMetrics.forEach((m) => {\n    const { __name__: name } = m.metric;\n\n    function addAggregatedValuesTo(metric: TimeSeriesMetrics) {\n      m.values.forEach(\n        ({ value, timestamp }) =>\n          (metric[timestamp] = value + (metric[timestamp] || 0))\n      );\n    }\n\n    switch (name) {\n      case \"kubelet_volume_stats_used_bytes\":\n        addAggregatedValuesTo(usedDiskSpaceMetrics);\n        break;\n      case \"kafka_namespace:kafka_server_socket_server_metrics_connection_creation_rate:sum\":\n        addAggregatedValuesTo(connectionAttemptRateMetrics);\n        break;\n      case \"kafka_namespace:kafka_server_socket_server_metrics_connection_count:sum\":\n        addAggregatedValuesTo(clientConnectionsMetrics);\n        break;\n    }\n  });\n\n  return {\n    usedDiskSpaceMetrics,\n    clientConnectionsMetrics,\n    connectionAttemptRateMetrics,\n    diskSpaceLimit,\n    connectionRateLimit,\n    connectionsLimit,\n  };\n}\n","import { GetMetricsKpiResponse } from \"@rhoas/app-services-ui-components\";\nimport {\n  Configuration,\n  DefaultApi,\n  InstantQuery,\n} from \"@rhoas/kafka-management-sdk\";\nimport { BasicApiConfigurationParameters, NoUndefinedField } from \"./types\";\n\nexport type FetchMetricsKpiProps = {\n  kafkaId: string;\n} & BasicApiConfigurationParameters;\n\nexport async function fetchMetricsKpi({\n  accessToken,\n  basePath,\n  kafkaId,\n}: FetchMetricsKpiProps): Promise<\n  Omit<GetMetricsKpiResponse, \"kafkaTopics\" | \"topicPartitionsLimit\">\n> {\n  const apisService = new DefaultApi(\n    new Configuration({\n      accessToken,\n      basePath,\n    })\n  );\n\n  let topics = 0,\n    topicPartitions = 0,\n    consumerGroups = 0;\n\n  const response = await apisService.getMetricsByInstantQuery(kafkaId, [\n    \"kafka_topic:kafka_topic_partitions:sum\", // (Number of topic partitions)\n    \"kafka_topic:kafka_topic_partitions:count\", // (Number of topics)\n    \"consumergroup:kafka_consumergroup_members:count\", // (number of consumer groups - note that this metric will appear after a consumer group is created. There should be handled by the UI in a way that the metric isn't visible if no consumer groups are created)\n  ]);\n\n  const safeMetrics: NoUndefinedField<InstantQuery[]> = (response.data.items ||\n    []) as NoUndefinedField<InstantQuery[]>;\n\n  safeMetrics.forEach(({ metric, value }) => {\n    const { __name__: name } = metric;\n\n    switch (name) {\n      case \"kafka_topic:kafka_topic_partitions:sum\":\n        topicPartitions = value;\n        break;\n      case \"kafka_topic:kafka_topic_partitions:count\":\n        topics = value;\n        break;\n      case \"consumergroup:kafka_consumergroup_members:count\":\n        consumerGroups = value;\n        break;\n    }\n  });\n  return {\n    consumerGroups,\n    topicPartitions,\n    topics,\n  };\n}\n","import { useEffect, useState, useCallback } from \"react\";\nimport {\n  Configuration,\n  DefaultApi,\n  KafkaRequest,\n  SupportedKafkaSize,\n} from \"@rhoas/kafka-management-sdk\";\nimport { useAuth, useConfig } from \"@rhoas/app-services-ui-shared\";\n\n/**\n * Join admin server url template with the kafka bootstrap host and return the kafka admin url.\n *\n * @param kafkaRequest KafkaRequest\n * @returns The admin server full URL included the protocol and base path\n */\n\nexport const getAdminServerUrl = (\n  kafkaRequest?: KafkaRequest\n): string | undefined => {\n  if (!kafkaRequest) {\n    throw new Error(\"kafkaRequest cannot be undefined\");\n  }\n  /**\n   * admin_api_server_url will be available when kafka instance will be ready\n   */\n  return kafkaRequest.admin_api_server_url\n    ? kafkaRequest.admin_api_server_url\n    : undefined;\n};\n\nexport type KafkaInstance = {\n  kafkaDetail: Required<KafkaRequestWithSize>;\n  adminServerUrl: string | undefined;\n};\n\nexport type KafkaRequestWithSize = KafkaRequest & {\n  size: SupportedKafkaSize;\n};\n\nexport const useKafkaInstance = (\n  id: string | undefined\n): KafkaInstance | false | undefined => {\n  const {\n    kas: { apiBasePath },\n  } = useConfig();\n  const {\n    kas: { getToken },\n  } = useAuth();\n  const [kafkaRequest, setKafkaRequest] = useState<\n    KafkaRequestWithSize | false | undefined\n  >();\n  const getKafkaSize = useGetAvailableSizes();\n\n  const fetchKafka = useCallback(\n    async (id: string) => {\n      setKafkaRequest(undefined);\n      const kasService = new DefaultApi({\n        accessToken: getToken,\n        basePath: apiBasePath,\n      } as Configuration);\n      try {\n        const kafka = await kasService.getKafkaById(id);\n\n        const { cloud_provider, region, instance_type, size_id } = kafka.data;\n        if (!cloud_provider || !region || !size_id || !instance_type) {\n          throw new Error(\n            `Kafka instance ${kafka.data.id} missing some required info: ${cloud_provider}, ${region}, ${instance_type}, ${size_id}`\n          );\n        }\n        const size = await getKafkaSize(\n          cloud_provider,\n          region,\n          size_id,\n          instance_type\n        );\n\n        setKafkaRequest({\n          ...kafka.data,\n          size,\n        });\n      } catch (e) {\n        setKafkaRequest(false);\n      }\n    },\n    [apiBasePath, getKafkaSize, getToken]\n  );\n\n  useEffect(() => {\n    if (id) {\n      fetchKafka(id);\n    } else {\n      setKafkaRequest(undefined);\n    }\n  }, [fetchKafka, id]);\n\n  return kafkaRequest\n    ? {\n        kafkaDetail: kafkaRequest as Required<KafkaRequestWithSize>,\n        adminServerUrl: getAdminServerUrl(kafkaRequest),\n      }\n    : kafkaRequest;\n};\n\n/**\n * Return list of the instance types available for the current user\n *\n * @returns {Promise<InstanceType[]>}\n */\n\nexport const useGetAvailableSizes = () => {\n  const {\n    kas: { getToken },\n  } = useAuth();\n  const {\n    kas: { apiBasePath: basePath },\n  } = useConfig();\n\n  return useCallback(\n    async (\n      provider: string,\n      region: string,\n      sizeId: string,\n      instanceType: string\n    ): Promise<SupportedKafkaSize> => {\n      try {\n        const api = new DefaultApi(\n          new Configuration({\n            accessToken: getToken(),\n            basePath,\n          })\n        );\n\n        const sizes = await api.getInstanceTypesByCloudProviderAndRegion(\n          provider,\n          region\n        );\n\n        if (!sizes?.data?.instance_types) {\n          throw new Error(\n            `getInstanceTypesByCloudProviderAndRegion api failed for ${provider} ${region} ${sizeId}, no instance_types returned`\n          );\n        }\n        const instanceTypesSizes = sizes?.data?.instance_types.find(\n          (i) => i.id === instanceType\n        )?.sizes;\n        const size = instanceTypesSizes?.find((s) => s.id === sizeId);\n\n        if (!size) {\n          throw new Error(\n            `getInstanceTypesByCloudProviderAndRegion api failed for ${provider} ${region} ${sizeId}, can't find a size matching ${sizeId}`\n          );\n        }\n\n        return size;\n      } catch (e: unknown) {\n        throw new Error(\n          `getInstanceTypesByCloudProviderAndRegion api failed for ${provider} ${region} ${sizeId}: ${e}`\n        );\n      }\n    },\n    [getToken, basePath]\n  );\n};\n","import {\n  LazyExoticComponent,\n  useState,\n  VoidFunctionComponent,\n  useCallback,\n} from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  ProductType,\n  QuotaContext,\n  useConfig,\n} from \"@rhoas/app-services-ui-shared\";\nimport { ServiceDownPage } from \"@app/pages/ServiceDown/ServiceDownPage\";\nimport {\n  FederatedModule,\n  usePrincipal,\n  useKafkaInstanceDrawer,\n} from \"@app/components\";\nimport { useModalControl, useQuota } from \"@app/hooks\";\nimport {\n  AppServicesLoading,\n  TermsAndConditionModal,\n} from \"@rhoas/app-services-ui-components\";\nimport { ITermsConfig } from \"@app/services\";\nimport { useConstants } from \"@app/providers/config/ServiceConstants\";\nimport { useKafkaInstance } from \"@app/pages/Kafka/kafka-instance\";\n\nconst KasPage: VoidFunctionComponent = () => {\n  const { getQuota } = useQuota(ProductType?.kas);\n\n  return (\n    <QuotaContext.Provider value={{ getQuota }}>\n      <FederatedModule\n        scope=\"kas\"\n        module=\"./OpenshiftStreams\"\n        fallback={<AppServicesLoading />}\n        render={(component) => <KasPageConnected Component={component} />}\n      />\n    </QuotaContext.Provider>\n  );\n};\n\nconst KasPageConnected: VoidFunctionComponent<{\n  Component: LazyExoticComponent<any>;\n}> = ({ Component }) => {\n  const config = useConfig();\n  const constants = useConstants();\n  const { t } = useTranslation();\n\n  const { preCreateInstance, shouldOpenCreateModal } = useModalControl({\n    eventCode: constants.kafka.ams.termsAndConditionsEventCode,\n    siteCode: constants.kafka.ams.termsAndConditionsSiteCode,\n  } as ITermsConfig);\n  const { getAllUserAccounts } = usePrincipal();\n\n  const [drawerInstanceId, setDrawerInstanceId] = useState<string | undefined>(\n    undefined\n  );\n  const [isOpenModal, setIsOpenModal] = useState<boolean>(false);\n  const [url, setUrl] = useState<string>(\"\");\n\n  const drawerInstance = useKafkaInstance(drawerInstanceId);\n  const drawerInstanceDetails = drawerInstance\n    ? drawerInstance.kafkaDetail\n    : undefined;\n\n  const drawerProps = useKafkaInstanceDrawer();\n\n  const handlePreCreateInstance = useCallback(\n    async (open: boolean) => {\n      const { shouldOpenCreateModal, url } = await preCreateInstance(open);\n      if (shouldOpenCreateModal === false && url) {\n        setIsOpenModal(true);\n        setUrl(url);\n        return false;\n      }\n      return true;\n    },\n    [preCreateInstance, setIsOpenModal, setUrl]\n  );\n\n  const onClsoeModal = () => {\n    setIsOpenModal(false);\n  };\n\n  const onClickViewTermsConditions = useCallback(async () => {\n    window.location.href = url;\n  }, [url]);\n\n  if (config.serviceDown) {\n    return <ServiceDownPage />;\n  }\n\n  return (\n    <>\n      <TermsAndConditionModal\n        isModalOpen={isOpenModal}\n        serviceName={t(\"common:kafka\")}\n        ouiaIdModal=\"modal-KafkaTerms\"\n        ouiaIdButtonViewTerms=\"button-view-terms\"\n        ouiaIdButtonCancel=\"button-cancel\"\n        onClickViewTermsConditions={onClickViewTermsConditions}\n        onCancel={onClsoeModal}\n      />\n      <Component\n        preCreateInstance={handlePreCreateInstance}\n        shouldOpenCreateModal={shouldOpenCreateModal}\n        drawerInstance={drawerInstanceDetails}\n        setDrawerInstance={setDrawerInstanceId}\n        {...drawerProps}\n        getAllUserAccounts={getAllUserAccounts}\n      />\n    </>\n  );\n};\n\nexport default KasPage;\n","import { ExclamationTriangleIcon } from \"@patternfly/react-icons\";\nimport {\n  PageSection,\n  Title,\n  Button,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n} from \"@patternfly/react-core\";\nimport { useHistory } from \"react-router-dom\";\nimport { FunctionComponent } from \"react\";\n\nconst NotFoundPage: FunctionComponent = () => {\n  function GoHomeBtn() {\n    const history = useHistory();\n    function handleClick() {\n      history.push(\"/\");\n    }\n    return <Button onClick={handleClick}>Take me home</Button>;\n  }\n\n  return (\n    <PageSection>\n      <EmptyState variant=\"full\">\n        <EmptyStateIcon icon={ExclamationTriangleIcon} />\n        <Title headingLevel=\"h1\" size=\"lg\">\n          404 Page not found\n        </Title>\n        <EmptyStateBody>\n          We didn&apos;t find a page that matches the address you navigated to.\n        </EmptyStateBody>\n        <GoHomeBtn />\n      </EmptyState>\n    </PageSection>\n  );\n};\n\nexport { NotFoundPage };\n\nexport default NotFoundPage;\n","import { OverviewPageV2 } from \"@rhoas/app-services-ui-components\";\nimport { FunctionComponent } from \"react\";\n\nexport const ConnectedOverviewPage: FunctionComponent = () => {\n  const kafkaHref = \"/streams/kafkas\";\n  const serviceRegistryHref = \"/service-registry\";\n\n  const connectorHref = \"/connectors\";\n\n  return (\n    <OverviewPageV2\n      toKafkaHref={kafkaHref}\n      toServiceRegistryHref={serviceRegistryHref}\n      toConnectorsHref={connectorHref}\n    />\n  );\n};\n\nexport default ConnectedOverviewPage;\n","import { VoidFunctionComponent } from \"react\";\nimport { FederatedModule } from \"@app/components\";\nimport { AppServicesLoading } from \"@rhoas/app-services-ui-components\";\n\nexport const ResourcesPage: VoidFunctionComponent = () => (\n  <FederatedModule\n    scope=\"guides\"\n    module=\"./QuickStartCatalog\"\n    fallback={<AppServicesLoading />}\n    render={(QuickStartCatalogFederated) => <QuickStartCatalogFederated />}\n  />\n);\n\nexport default ResourcesPage;\n","import { LazyExoticComponent, VoidFunctionComponent } from \"react\";\nimport { FederatedModule } from \"@app/components\";\nimport { useConfig } from \"@rhoas/app-services-ui-shared\";\nimport { ServiceDownPage } from \"@app/pages/ServiceDown/ServiceDownPage\";\nimport { AppServicesLoading } from \"@rhoas/app-services-ui-components\";\n\nexport const ServiceAccountsPage: VoidFunctionComponent = () => {\n  return (\n    <FederatedModule\n      scope=\"kas\"\n      module=\"./ServiceAccounts\"\n      fallback={<AppServicesLoading />}\n      render={(component) => (\n        <ServiceAccountsPageConnected Component={component} />\n      )}\n    />\n  );\n};\n\nconst ServiceAccountsPageConnected: VoidFunctionComponent<{\n  Component: LazyExoticComponent<any>;\n}> = ({ Component }) => {\n  const config = useConfig();\n  if (config?.serviceDown) {\n    return <ServiceDownPage />;\n  }\n  return <Component />;\n};\nexport default ServiceAccountsPage;\n","import { WrenchIcon } from \"@patternfly/react-icons\";\nimport {\n  PageSection,\n  Title,\n  Button,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"react-i18next\";\nimport { FunctionComponent } from \"react\";\n\nexport const ServiceDownPage: FunctionComponent = () => {\n  const { t } = useTranslation([\"appTemporaryFixMe\"]);\n  return (\n    <PageSection>\n      <EmptyState variant=\"full\">\n        <EmptyStateIcon icon={WrenchIcon} />\n        <Title headingLevel=\"h1\" size=\"lg\">\n          {t(\"serviceDown.serviceDownTitle\")}\n        </Title>\n        <EmptyStateBody>{t(\"serviceDown.serviceDownMessage\")}</EmptyStateBody>\n        <Button\n          variant=\"primary\"\n          onClick={() => {\n            window.location.href = \"https://status.starter.openshift.com/\";\n          }}\n        >\n          {t(\"serviceDown.serviceDownButton\")}\n        </Button>\n      </EmptyState>\n    </PageSection>\n  );\n};\n","import { useState, useEffect, FunctionComponent } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { FederatedApicurioComponent } from \"@app/pages/ServiceRegistry/FederatedApicurioComponent\";\nimport { SrsLayout } from \"@app/pages/ServiceRegistry/SrsLayout\";\nimport { useConfig, useAuth } from \"@rhoas/app-services-ui-shared\";\nimport { ServiceDownPage } from \"@app/pages\";\nimport { usePrincipal } from \"@app/components\";\nimport { AppServicesLoading } from \"@rhoas/app-services-ui-components\";\n\nexport const ArtifactVersionDetails: FunctionComponent = () => {\n  const config = useConfig();\n\n  if (config?.serviceDown) {\n    return <ServiceDownPage />;\n  }\n\n  return <ArtifactVersionDetailsConnected />;\n};\n\nconst ArtifactVersionDetailsConnected: FunctionComponent = () => {\n  let { artifactId } = useParams<{ artifactId: string }>();\n  artifactId = decodeURIComponent(artifactId);\n\n  const [currentlyLoggedInuser, setCurrentlyLoggedInuser] = useState<string>();\n  const auth = useAuth();\n  const { getAllPrincipals } = usePrincipal();\n\n  useEffect(() => {\n    (async () => {\n      await auth?.getUsername()?.then((user) => setCurrentlyLoggedInuser(user));\n    })();\n  }, [auth]);\n\n  return (\n    <SrsLayout\n      breadcrumbId=\"srs.artifacts_details\"\n      artifactId={artifactId}\n      render={(registry) => {\n        if (registry === undefined || currentlyLoggedInuser === undefined) {\n          return <AppServicesLoading />;\n        }\n\n        const principals = getAllPrincipals()?.filter(\n          (p) => p.id !== currentlyLoggedInuser && p.id !== registry?.owner\n        );\n\n        return (\n          <FederatedApicurioComponent\n            registry={registry}\n            module=\"./FederatedArtifactVersionPage\"\n            principals={principals}\n          />\n        );\n      }}\n    />\n  );\n};\n\nexport default ArtifactVersionDetails;\n","import { FederatedApicurioComponent } from \"@app/pages/ServiceRegistry/FederatedApicurioComponent\";\nimport { SrsLayout } from \"@app/pages/ServiceRegistry/SrsLayout\";\nimport { useConfig } from \"@rhoas/app-services-ui-shared\";\nimport { ServiceDownPage } from \"@app/pages\";\nimport { FunctionComponent } from \"react\";\n\nexport const Artifacts: FunctionComponent = () => {\n  const config = useConfig();\n\n  if (config?.serviceDown) {\n    return <ServiceDownPage />;\n  }\n\n  return <ArtifactsConnected />;\n};\n\nconst ArtifactsConnected: FunctionComponent = () => {\n  return (\n    <SrsLayout\n      breadcrumbId=\"srs.artifacts\"\n      render={(registry) => (\n        <FederatedApicurioComponent\n          module=\"./FederatedArtifactsPage\"\n          registry={registry}\n        />\n      )}\n    />\n  );\n};\n\nexport default Artifacts;\n","import { FederatedApicurioComponent } from \"@app/pages/ServiceRegistry/FederatedApicurioComponent\";\nimport { SrsLayout } from \"@app/pages/ServiceRegistry/SrsLayout\";\nimport { useConfig } from \"@rhoas/app-services-ui-shared\";\nimport { ServiceDownPage } from \"@app/pages\";\nimport { FunctionComponent } from \"react\";\n\nexport const ArtifactRedirect: FunctionComponent = () => {\n  const config = useConfig();\n\n  if (config?.serviceDown) {\n    return <ServiceDownPage />;\n  }\n\n  return <ArtifactRedirectConnected />;\n};\n\nconst ArtifactRedirectConnected: FunctionComponent = () => {\n  return (\n    <SrsLayout\n      render={(registry) => (\n        <FederatedApicurioComponent\n          registry={registry}\n          module=\"./FederatedArtifactRedirectPage\"\n        />\n      )}\n    />\n  );\n};\n\nexport default ArtifactRedirect;\n","import { Registry } from \"@rhoas/registry-management-sdk\";\nimport { FederatedApicurioComponent } from \"./FederatedApicurioComponent\";\nimport { FC } from \"react\";\n\ntype DownloadArtifactsProps = {\n  registry: Registry;\n  downloadLabel?: string;\n};\n\nexport const DownloadArtifacts: FC<DownloadArtifactsProps> = ({\n  registry,\n  downloadLabel,\n}) => {\n  return (\n    <FederatedApicurioComponent\n      module=\"./FederatedDownloadArtifacts\"\n      registry={registry}\n      fileName={registry.name}\n      downloadLinkLabel={downloadLabel}\n    />\n  );\n};\n","import { FC, LazyExoticComponent, VoidFunctionComponent } from \"react\";\nimport {\n  ConfigType,\n  createApicurioConfig,\n} from \"@app/pages/ServiceRegistry/utils\";\nimport { FederatedModule } from \"@app/components\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { Registry } from \"@rhoas/registry-management-sdk\";\nimport {\n  useAlert,\n  useAuth,\n  useBasename,\n  useConfig,\n  Principal,\n} from \"@rhoas/app-services-ui-shared\";\nimport { AppServicesLoading } from \"@rhoas/app-services-ui-components\";\n\nexport type FederatedApicurioComponentProps = {\n  module: string;\n  registry: Registry | undefined;\n  topicName?: string;\n  groupId?: string | null | undefined;\n  version?: string;\n  registryId?: string;\n  basename?: string;\n  fileName?: string;\n  downloadLinkLabel?: string;\n  principals?: Principal[];\n};\n\ntype ServiceRegistryParams = {\n  groupId: string;\n  artifactId: string;\n  version: string;\n};\n\nexport const FederatedApicurioComponent: FC<\n  FederatedApicurioComponentProps\n> = ({ module, ...rest }) => {\n  return (\n    <FederatedModule\n      scope=\"apicurio_registry\"\n      module={module}\n      fallback={<AppServicesLoading />}\n      render={(component) => (\n        <ServiceAccountsPageConnected Component={component} {...rest} />\n      )}\n    />\n  );\n};\n\nconst ServiceAccountsPageConnected: VoidFunctionComponent<\n  { Component: LazyExoticComponent<any> } & Omit<\n    FederatedApicurioComponentProps,\n    \"module\"\n  >\n> = ({ Component, registry, principals, ...rest }) => {\n  let federateConfig: ConfigType;\n  const alert = useAlert();\n  const auth = useAuth();\n  const config = useConfig();\n  const history = useHistory();\n  const basename = useBasename();\n  const getToken = auth?.apicurio_registry.getToken;\n\n  let { groupId, artifactId, version } = useParams<ServiceRegistryParams>();\n  groupId = decodeURIComponent(groupId);\n  artifactId = decodeURIComponent(artifactId);\n  version = decodeURIComponent(version);\n\n  if (config === undefined || registry === undefined) {\n    return <AppServicesLoading />;\n  }\n\n  if (getToken && basename) {\n    federateConfig = createApicurioConfig(\n      config,\n      alert,\n      registry.registryUrl as string,\n      `${basename.getBasename()}/t/${registry?.id}`,\n      getToken,\n      principals\n    );\n    return (\n      <Component\n        config={federateConfig}\n        tenantId={registry.id}\n        groupId={groupId}\n        artifactId={artifactId}\n        version={version}\n        history={history}\n        {...rest}\n      />\n    );\n  }\n  return null;\n};\n","import { Alert, Principal } from \"@rhoas/app-services-ui-shared\";\nimport { Config } from \"@rhoas/app-services-ui-shared\";\n\nexport interface FeaturesConfig {\n  readOnly?: boolean;\n  breadcrumbs?: boolean;\n  multiTenant?: boolean;\n  roleManagement?: boolean;\n  settings?: boolean;\n  alerts?: Alert;\n}\n\nexport interface ArtifactsConfig {\n  url: string;\n}\n\nexport interface UiConfig {\n  contextPath?: string;\n  navPrefixPath?: string;\n}\n\nexport interface AuthConfig {\n  type: string;\n  getToken: () => Promise<string>;\n}\n\n// Used when `type=keycloakjs`\nexport interface KeycloakJsAuthConfig extends AuthConfig {\n  options?: any;\n}\n\n// Used when `type=none`\nexport type NoneAuthConfig = AuthConfig;\n\nexport interface ConfigType {\n  artifacts: ArtifactsConfig;\n  auth: KeycloakJsAuthConfig | NoneAuthConfig;\n  features?: FeaturesConfig;\n  ui: UiConfig;\n  principals?: Principal[] | undefined;\n}\n\nconst createApicurioConfig = (\n  _config: Config,\n  alert: Alert,\n  apiUrl: string,\n  navPathPrefix: string,\n  getToken: () => Promise<string> | undefined,\n  principals?: Principal[] | undefined\n) => {\n  const apicurioConfig: ConfigType = {\n    artifacts: {\n      url: `${apiUrl}/apis/registry`,\n    },\n    auth: {\n      type: \"gettoken\",\n      getToken,\n    },\n    features: {\n      readOnly: false,\n      breadcrumbs: false,\n      roleManagement: true,\n      multiTenant: true,\n      settings: true,\n      alerts: alert,\n    },\n    ui: {\n      navPrefixPath: navPathPrefix,\n    },\n    principals,\n  } as ConfigType;\n\n  return apicurioConfig;\n};\n\nexport { createApicurioConfig };\n","import { FederatedApicurioComponent } from \"@app/pages/ServiceRegistry/FederatedApicurioComponent\";\nimport { SrsLayout } from \"@app/pages/ServiceRegistry/SrsLayout\";\nimport { useConfig } from \"@rhoas/app-services-ui-shared\";\nimport { ServiceDownPage } from \"@app/pages\";\nimport { FunctionComponent } from \"react\";\n\nexport const RulesPage: FunctionComponent = () => {\n  const config = useConfig();\n\n  if (config?.serviceDown) {\n    return <ServiceDownPage />;\n  }\n\n  return <RulesPageConnected />;\n};\n\nconst RulesPageConnected: FunctionComponent = () => {\n  return (\n    <SrsLayout\n      breadcrumbId=\"srs.global_rules\"\n      render={(registry) => (\n        <FederatedApicurioComponent\n          registry={registry}\n          module=\"./FederatedRulesPage\"\n        />\n      )}\n    />\n  );\n};\n\nexport default RulesPage;\n","import {\n  LazyExoticComponent,\n  useCallback,\n  useState,\n  VoidFunctionComponent,\n} from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { FederatedModule, KasModalLoader } from \"@app/components\";\nimport { ServiceDownPage } from \"@app/pages\";\nimport { useModalControl, useQuota } from \"@app/hooks\";\nimport {\n  AppServicesLoading,\n  DevelopmentPreview,\n  TermsAndConditionModal,\n} from \"@rhoas/app-services-ui-components\";\nimport {\n  ProductType,\n  QuotaContext,\n  useConfig,\n} from \"@rhoas/app-services-ui-shared\";\nimport { Registry } from \"@rhoas/registry-management-sdk\";\nimport { ITermsConfig } from \"@app/services\";\nimport { DownloadArtifacts } from \"./DownloadArtifacts\";\nimport { useConstants } from \"@app/providers/config/ServiceConstants\";\nimport { useAuth } from \"@app/providers/auth\";\n\nexport const ServiceRegistryPage: VoidFunctionComponent = () => {\n  const { getQuota } = useQuota(ProductType.srs);\n\n  return (\n    <QuotaContext.Provider value={{ getQuota }}>\n      <KasModalLoader>\n        <FederatedModule\n          scope=\"srs\"\n          module=\"./ServiceRegistry\"\n          fallback={<AppServicesLoading />}\n          render={(component) => (\n            <ServiceRegistryPageConnected Component={component} />\n          )}\n        />\n      </KasModalLoader>\n    </QuotaContext.Provider>\n  );\n};\n\nexport const ServiceRegistryPageConnected: VoidFunctionComponent<{\n  Component: LazyExoticComponent<any>;\n}> = ({ Component }) => {\n  const config = useConfig();\n  const auth = useAuth();\n  const { t } = useTranslation([\"service-registry\"]);\n\n  const constants = useConstants();\n  const { preCreateInstance, shouldOpenCreateModal } = useModalControl({\n    eventCode: constants.serviceRegistry.ams.termsAndConditionsEventCode,\n    siteCode: constants.serviceRegistry.ams.termsAndConditionsSiteCode,\n  } as ITermsConfig);\n\n  //states\n  const [isOpenModal, setIsOpenModal] = useState<boolean>(false);\n  const [url, setUrl] = useState<string>(\"\");\n\n  const handlePreCreateInstance = useCallback(\n    async (open: boolean) => {\n      const { shouldOpenCreateModal, url } = await preCreateInstance(open);\n      if (shouldOpenCreateModal === false && url) {\n        setIsOpenModal(true);\n        setUrl(url);\n        return false;\n      }\n      return true;\n    },\n    [preCreateInstance, setIsOpenModal, setUrl]\n  );\n\n  const onClsoeModal = useCallback(() => {\n    setIsOpenModal(false);\n  }, [setIsOpenModal]);\n\n  const onClickViewTermsConditions = useCallback(async () => {\n    window.location.href = url;\n  }, [url]);\n\n  // Wait for the config and the registry to load\n  if (config === undefined) {\n    return <AppServicesLoading />;\n  }\n\n  if (config.serviceDown) {\n    return <ServiceDownPage />;\n  }\n\n  return (\n    <>\n      <TermsAndConditionModal\n        isModalOpen={isOpenModal}\n        serviceName={t(\"service_registry\")}\n        ouiaIdModal=\"modal-SrvRegTerms\"\n        ouiaIdButtonViewTerms=\"button-view-terms\"\n        ouiaIdButtonCancel=\"button-cancel\"\n        onClickViewTermsConditions={onClickViewTermsConditions}\n        onCancel={onClsoeModal}\n      />\n      <DevelopmentPreview>\n        <Component\n          preCreateInstance={handlePreCreateInstance}\n          shouldOpenCreateModal={shouldOpenCreateModal}\n          tokenEndPointUrl={auth?.tokenEndPointUrl}\n          renderDownloadArtifacts={(\n            registry: Registry,\n            downloadLabel?: string\n          ) => (\n            <DownloadArtifacts\n              registry={registry}\n              downloadLabel={downloadLabel}\n            />\n          )}\n        />\n      </DevelopmentPreview>\n    </>\n  );\n};\n\nexport default ServiceRegistryPage;\n","import { FC, LazyExoticComponent, VoidFunctionComponent } from \"react\";\nimport { FederatedModule, KasModalLoader } from \"@app/components\";\nimport { Registry } from \"@rhoas/registry-management-sdk\";\nimport { AppServicesLoading } from \"@rhoas/app-services-ui-components\";\nimport { DownloadArtifacts } from \"./DownloadArtifacts\";\nimport { useAuth } from \"@app/providers/auth\";\n\ntype SrsLayoutProps = {\n  render: (registry: Registry) => JSX.Element;\n  breadcrumbId?: string;\n  artifactId?: string;\n};\n\nexport const SrsLayout: FC<SrsLayoutProps> = (props) => {\n  return (\n    <FederatedModule\n      scope=\"srs\"\n      module=\"./ApicurioRegistry\"\n      fallback={<AppServicesLoading />}\n      render={(component) => (\n        <SrsLayoutConnected Component={component} {...props} />\n      )}\n    />\n  );\n};\n\nconst SrsLayoutConnected: VoidFunctionComponent<\n  { Component: LazyExoticComponent<any> } & SrsLayoutProps\n> = ({ Component, render, breadcrumbId, artifactId }) => {\n  const auth = useAuth();\n\n  return (\n    <KasModalLoader>\n      <Component\n        render={render}\n        breadcrumbId={breadcrumbId}\n        tokenEndPointUrl={auth?.tokenEndPointUrl}\n        artifactId={artifactId}\n        renderDownloadArtifacts={(\n          registry: Registry,\n          downloadLabel?: string\n        ) => (\n          <DownloadArtifacts\n            registry={registry}\n            downloadLabel={downloadLabel}\n          />\n        )}\n      />\n    </KasModalLoader>\n  );\n};\n","import { FC, LazyExoticComponent, VoidFunctionComponent } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Registry } from \"@rhoas/registry-management-sdk\";\nimport { FederatedApicurioComponent } from \"./FederatedApicurioComponent\";\nimport { FederatedModule } from \"@app/components\";\nimport { AppServicesLoading } from \"@rhoas/app-services-ui-components\";\n\nexport const ServiceRegistrySchemaMapping: FC = () => {\n  return (\n    <>\n      <FederatedModule\n        scope=\"srs\"\n        module=\"./ServiceRegistryMapping\"\n        fallback={<AppServicesLoading />}\n        render={(component) => (\n          <ServiceRegistrySchemaMappingConnected Component={component} />\n        )}\n      />\n    </>\n  );\n};\n\nconst ServiceRegistrySchemaMappingConnected: VoidFunctionComponent<{\n  Component: LazyExoticComponent<any>;\n}> = ({ Component }) => {\n  const { topicName } = useParams<{ topicName: string }>();\n  const basename = \"/service-registry\";\n\n  return (\n    <Component\n      basename={basename}\n      topicName={topicName}\n      renderSchema={(registry: Registry) => (\n        <FederatedApicurioComponent\n          module=\"./FederatedSchemaMapping\"\n          registry={registry}\n          topicName={topicName}\n          groupId={null}\n          version={\"latest\"}\n          registryId={registry?.id}\n          basename={basename}\n        />\n      )}\n    />\n  );\n};\n","import {\n  Main,\n  NotAuthorized,\n} from \"@redhat-cloud-services/frontend-components\";\n\nimport { useTranslation, Trans } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport { FunctionComponent } from \"react\";\n\ninterface GetLinkProps {\n  href?: string;\n}\n\nconst GetLink: FunctionComponent<GetLinkProps> = ({ href, children }) => (\n  <Link to={href || \"\"}>{children}</Link>\n);\n\nexport const AccessDeniedPage: FunctionComponent = () => {\n  const { t } = useTranslation([\"appTemporaryFixMe\"]);\n\n  const accessDeniedDetails = (\n    <Trans\n      i18nKey=\"accessdenied.accessDeniedDescription\"\n      t={t}\n      components={[<GetLink key=\"kafkas\" href=\"/streams/kafkas\" />]}\n    />\n  );\n\n  return (\n    <Main>\n      <NotAuthorized\n        title={t(\"accessdenied.accessDeniedTitle\")}\n        description={accessDeniedDetails}\n        prevPageButtonText={t(\"accessdenied.accessDeniedButtonText\")}\n        showReturnButton={true}\n      />\n    </Main>\n  );\n};\n","import { Context, createContext, useContext } from \"react\";\n\n/**\n * The Auth object provides information about the authenticated user\n */\nexport type Auth = {\n  /**\n   * Get the username of the authenticated user\n   */\n  getUsername: () => Promise<string> | undefined;\n  /**\n   * Get the is_org_admin of the authenticated user\n   */\n  isOrgAdmin: () => Promise<boolean> | undefined;\n  /**\n   * Get the token for accessing the control plane api\n   */\n  getToken: () => Promise<string> | undefined;\n  /**\n   * Get the token end point url\n   */\n  tokenEndPointUrl?: string;\n};\n\n/**\n * The AuthContext allows access to the Auth context\n */\nexport const AuthContext: Context<Auth | undefined> = createContext<\n  Auth | undefined\n>(undefined);\n\n/**\n * useAuth is a custom hook that is a shorthand for useContext(AuthContext)\n */\nexport const useAuth = (): Auth => {\n  const answer = useContext(AuthContext);\n  if (answer === undefined) {\n    throw new Error(\"must be used inside an AuthContext provider\");\n  }\n  return answer;\n};\n","import { Config } from \"@rhoas/app-services-ui-shared\";\n\nconst defaultHostname = \"console.redhat.com\";\n\ntype FederatedModulesConfig = Config[\"federatedModules\"];\n\ntype EnvironmentConfigWithoutFederatedModules = {\n  hostnames: string[];\n  fetchConfig?: boolean;\n  type?: string;\n  config: Omit<Config, \"federatedModules\">;\n};\n\nexport type EnvironmentConfigsWithoutFederatedModules =\n  Array<EnvironmentConfigWithoutFederatedModules>;\n\nexport const filterEnvironmentConfig = (\n  environmentConfig: EnvironmentConfigsWithoutFederatedModules\n): EnvironmentConfigWithoutFederatedModules => {\n  const hostname = window.location.hostname;\n  console.log(`Filter config for ${hostname}`);\n  const possibleConfigs = environmentConfig.filter((entry) =>\n    entry.hostnames.includes(hostname)\n  );\n  if (possibleConfigs.length > 1) {\n    throw new Error(\n      `Unable to find config for ${hostname}, more than one config matched ${possibleConfigs}`\n    );\n  } else if (possibleConfigs.length < 1) {\n    // Use the default config\n    const possibleDefaultConfigs = environmentConfig.filter((entry) =>\n      entry.hostnames.includes(defaultHostname)\n    );\n    if (possibleDefaultConfigs.length > 1) {\n      throw new Error(\n        `Unable to load default config, more than one config matched ${possibleConfigs}`\n      );\n    } else if (possibleDefaultConfigs.length < 1) {\n      throw new Error(`Unable to load default config, no configs matched`);\n    } else {\n      return possibleDefaultConfigs[0];\n    }\n  }\n  return possibleConfigs[0];\n};\n\nexport const addFederatedModulesToConfig = (\n  environmentConfig: EnvironmentConfigWithoutFederatedModules,\n  federatedModulesConfig: FederatedModulesConfig,\n  beta: boolean\n): Config => {\n  const federatedModules = {} as FederatedModulesConfig;\n  Object.entries(federatedModulesConfig).forEach(([k, v]) => {\n    let { basePath } = v;\n    let fallbackBasePath: string | undefined = undefined;\n    if (environmentConfig.type !== \"proxy\") {\n      basePath = v.fallbackBasePath;\n    } else {\n      fallbackBasePath = v.fallbackBasePath;\n    }\n    if (!beta) {\n      if (basePath.startsWith(\"/beta\")) {\n        basePath = basePath.substring(5);\n      }\n      if (fallbackBasePath?.startsWith(\"/beta\")) {\n        fallbackBasePath = fallbackBasePath.substring(5);\n      }\n    }\n    federatedModules[k as keyof FederatedModulesConfig] = {\n      basePath,\n      fallbackBasePath: fallbackBasePath!,\n    };\n  });\n  return {\n    ...environmentConfig.config,\n    federatedModules,\n  };\n};\n","import { FunctionComponent, useEffect, useState } from \"react\";\nimport { Config, ConfigContext } from \"@rhoas/app-services-ui-shared\";\nimport configs from \"../../../../config/config.json\";\nimport {\n  addFederatedModulesToConfig,\n  EnvironmentConfigsWithoutFederatedModules,\n  filterEnvironmentConfig,\n} from \"@app/providers/config/utils\";\nimport { useFeatureFlags } from \"@app/providers/featureflags/FeatureFlags\";\n\nexport const EmbeddedConfigProvider: FunctionComponent = ({ children }) => {\n  const { beta } = useFeatureFlags();\n\n  const [value, setValue] = useState<Config | undefined>(() => {\n    const configFromJson: EnvironmentConfigsWithoutFederatedModules =\n      configs.config;\n    const environmentConfig = filterEnvironmentConfig(configFromJson);\n    if (environmentConfig.fetchConfig) {\n      return undefined;\n    }\n    const config = addFederatedModulesToConfig(\n      environmentConfig,\n      configs.federatedModules,\n      beta\n    );\n    console.log(\"Done loading config\", config);\n    return config;\n  });\n\n  useEffect(() => {\n    (async () => {\n      if (value === undefined) {\n        const response = await fetch(`${__webpack_public_path__}config.json`);\n        const jsonConfig = await response.json();\n        const environmentConfig = filterEnvironmentConfig(jsonConfig.config);\n        const config = addFederatedModulesToConfig(\n          environmentConfig,\n          jsonConfig.federatedModules,\n          beta\n        );\n        console.debug(\"Done loading config\", config);\n        setValue(config);\n      }\n    })();\n  }, [beta, value]);\n  return (\n    <ConfigContext.Provider value={value}>{children}</ConfigContext.Provider>\n  );\n};\n","import { Context, createContext, useContext } from \"react\";\n\n/**\n * Configuration for AMS\n */\nexport type AmsConfig = {\n  termsAndConditionsEventCode: string;\n  termsAndConditionsSiteCode: string;\n  quotaProductId: string;\n  trialQuotaProductId: string;\n  resourceName: string;\n};\n\nexport type ServiceConstants = {\n  version: number;\n  kafka: {\n    ams: AmsConfig;\n  };\n  serviceRegistry: {\n    ams: AmsConfig;\n  };\n};\n\n/**\n * The ConstantContext allows access to the constants for the application.\n */\nexport const ConstantContext: Context<ServiceConstants | undefined> =\n  createContext<ServiceConstants | undefined>(undefined);\n\n/**\n * useConstants is a custom hook that is a shorthand for useContext(ConfigContext)\n */\nexport const useConstants = (): ServiceConstants => {\n  const answer = useContext(ConstantContext);\n  if (answer === undefined) {\n    throw new Error(\n      \"useConstants must be used inside an ServiceConstantsContextProvider\"\n    );\n  }\n  return answer;\n};\n","import { ConstantContext, ServiceConstants } from \"./ServiceConstants\";\nimport constantsFallback from \"../../../../static/configs/service-constants.json\";\nimport { FunctionComponent } from \"react\";\n\nexport const ServiceConstantsContextProvider: FunctionComponent = ({\n  children,\n}) => {\n  return (\n    <ConstantContext.Provider value={constantsFallback as ServiceConstants}>\n      {children}\n    </ConstantContext.Provider>\n  );\n};\n","import { createContext, FunctionComponent, useContext } from \"react\";\n\nexport type FeatureFlags = {\n  beta: boolean;\n};\n\nexport const FeatureFlagsContext = createContext<FeatureFlags | undefined>(\n  undefined\n);\n\nexport const useFeatureFlags = (): FeatureFlags => {\n  const answer = useContext(FeatureFlagsContext);\n  if (answer === undefined) {\n    throw new Error(\n      \"useFeatureFlags must be used inside a FeatureFlagContext provider\"\n    );\n  }\n  return answer;\n};\n\nexport const FeatureFlagProvider: FunctionComponent = ({ children }) => {\n  const value = {\n    beta: window.location.pathname.startsWith(\"/beta\"),\n  } as FeatureFlags;\n  return (\n    <FeatureFlagsContext.Provider value={value}>\n      {children}\n    </FeatureFlagsContext.Provider>\n  );\n};\n","import ReducerRegistry from \"@redhat-cloud-services/frontend-components-utilities/ReducerRegistry/ReducerRegistry\";\nimport promiseMiddleware from \"redux-promise-middleware\";\nimport { notificationsReducer } from \"@redhat-cloud-services/frontend-components-notifications/redux\";\n\nlet registry: ReducerRegistry;\n\nexport function init(...middleware: any) {\n  if (!registry) {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    registry = new ReducerRegistry({}, [promiseMiddleware, ...middleware]);\n\n    //If you want to register all of your reducers, this is good place.\n\n    registry.register({\n      notifications: notificationsReducer,\n    });\n  }\n\n  return registry;\n}\n","import { ComponentType, FunctionComponent, lazy } from \"react\";\nimport { Route, RouteComponentProps } from \"react-router-dom\";\nimport { useDocumentTitle } from \"@app/utils\";\n\nconst NotFoundPage = lazy(() => import(\"@app/pages/NotFound/NotFoundPage\"));\n\nexport interface IAppRoute<T> {\n  label?: string; // Excluding the label will exclude the route from the nav sidebar in AppLayout\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  component: ComponentType<RouteComponentProps> | ComponentType<T>;\n  /* eslint-enable @typescript-eslint/no-explicit-any */\n  exact?: boolean;\n  path: string;\n  title: string;\n  isAsync?: boolean;\n  routes?: undefined;\n  basename?: string;\n  devPreview?: boolean;\n}\n\nexport interface IAppRouteGroup<T> {\n  label: string;\n  routes: IAppRoute<T>[];\n}\n\nexport type AppRouteConfig<T> = IAppRoute<T> | IAppRouteGroup<T>;\n\nexport const PageNotFoundRoute: FunctionComponent<{ title: string }> = ({\n  title,\n}: {\n  title: string;\n}) => {\n  useDocumentTitle(title);\n  return <Route component={NotFoundPage} />;\n};\n\nexport const flattenedRoutes = <T,>(routes: AppRouteConfig<T>[]) =>\n  routes.reduce(\n    (flattened, route) => [\n      ...flattened,\n      ...(route.routes ? route.routes : [route]),\n    ],\n    [] as IAppRoute<T>[]\n  );\n","function getBaseName(pathname: string) {\n  let release = \"/\";\n  const pathName = pathname.split(\"/\");\n\n  pathName.shift();\n\n  if (pathName[0] === \"beta\") {\n    pathName.shift();\n    release = `/beta/`;\n  }\n\n  return `${release}${pathName[0]}`;\n}\n\nexport default getBaseName;\n","import { useEffect } from \"react\";\n\n// a custom hook for setting the page title\nexport function useDocumentTitle(title: string) {\n  useEffect(() => {\n    const originalTitle = document.title;\n    document.title = title;\n\n    return () => {\n      document.title = originalTitle;\n    };\n  }, [title]);\n}\n"],"names":["QuickStartLoaderFederated","lazy","APIManagementPage","ArtifactRedirect","Artifacts","ArtifactVersionDetails","ApiDesignerHomePage","ApiDesignerEditorPage","DataSciencePage","KafkaOverviewPage","KasPage","OverviewPage","ResourcesPage","RulesPage","RolesPage","SettingsPage","ServiceAccountsPage","CosPage","ServiceRegistryPage","SmartEventsPage","RedirectToStreamsKafkas","Redirect","to","appRoutes","component","exact","label","path","title","devPreview","basename","Kafka","getBaseName","window","location","pathname","WrappedRoute","Component","rest","t","useTranslation","history","useHistory","getBasename","useCallback","onClickButton","push","wrapRoute","routeProps","ErrorBoundary","fallbackRender","error","message","AppServicesPageNotFound","AppServicesEmptyState","emptyStateProps","variant","AppServicesEmptyStateVariant","emptyStateIconProps","className","titleProps","emptyStateBodyProps","body","Button","onClick","DevelopmentPreview","show","BasenameContext","value","Route","render","AppRoutes","Suspense","fallback","AppServicesLoading","Switch","map","idx","isAsync","connect","insights","getAppId","defaultAppId","parts","split","length","useEffect","chrome","init","appId","identifyApp","unregister","on","event","includes","navId","NotificationsPortal","Page","useIsMounted","isMounted","useRef","current","FederatedModule","scope","module","console","log","getModuleInfo","modules","moduleInfo","setModuleInfo","useState","basePath","fallbackBasePath","undefined","DynamicFederatedModule","ready","failed","url","setReady","setFailed","element","document","createElement","src","type","async","onload","onerror","head","appendChild","removeChild","useDynamicScript","entryPoint","container","default","Module","get","debug","loadComponent","getPath","AssetsContext","usePrincipal","config","useConfig","auth","useAuth","serviceAccountPrincipals","setServiceAccountPrincipals","userAcountPrincipals","setUserAccountPrincipals","rbac","accessToken","kas","getToken","principalApi","PrincipalApi","userAccounts","listPrincipals","then","response","data","p","id","username","principalType","PrincipalType","displayName","first_name","last_name","emailAddress","email","e","securityApi","SecurityApi","apiBasePath","serviceAccounts","getServiceAccounts","items","sa","client_id","name","getAllPrincipals","answer","concat","getAllUserAccounts","getAllServiceAccounts","PrincipalsProvider","children","PrincipalsContext","useKafkaInstanceDrawer","isDrawerOpen","setIsDrawerOpen","drawerActiveTab","setDrawerActiveTab","openDrawer","tab","closeDrawer","tokenEndPointUrl","onDeleteInstance","FederatedModuleContext","createContext","FederatedModuleProvider","moduleInfoCache","Provider","federatedModules","baseUrl","fetchModuleInfo","Date","now","fetch","json","fedMods","s","entry","startsWith","e1","useFederatedModule","useContext","Error","KasModalLoader","KasModalLoaderFederated","useQuota","productId","constants","orgId","setOrgId","ams","AppServicesApi","apiAccountsMgmtV1CurrentAccountGet","account","orgID","organization","getQuotaTypesByProductId","kasQuotaProductId","kafka","quotaProductId","kasTrialQuotaProductId","trialQuotaProductId","kasResourceName","resourceName","srsQuotaProductId","serviceRegistry","srsTrialQuotaProductId","srsResourceName","ProductType","quotaKey","QuotaType","trialQuotaKey","getQuota","quotaData","Map","filteredQuota","loading","isServiceDown","apiAccountsMgmtV1OrganizationsOrgIdQuotaCostGet","quota","find","q","related_resources","r","resource_name","product","trialQuota","allowed","remaining","consumed","set","Status","fetchTermsReviewFactory","termsConfig","key","defaultApi","apiAuthorizationsV1SelfTermsReviewPost","event_code","eventCode","site_code","siteCode","buildUrlParams","params","Object","keys","encodeURIComponent","join","useModalControl","loadTermsReview","ref","load","useAsyncTermsReview","useLocation","shouldOpenCreateModal","parse","search","terms_required","preCreateInstance","termsReview","terms_available","redirect_url","redirectURL","stringifyUrl","href","query","create","baseURL","cancelURL","redirect","cancelRedirect","getTermsAppURL","useInsights","insightsChromeAuth","getUsername","getUser","identity","user","isOrgAdmin","is_org_admin","srs","apicurio_registry","smart_events","useSSOProviders","APIManagementOverviewPage","serviceDown","OpenshiftManagedConnectors","DataScienceOverViewPage","KafkaFederatedComponent","FederatedKafka","Topics","props","TopicDetails","CreateTopic","UpdateTopic","Dashboard","ConsumerGroups","AclPermissions","kafkaRoutes","flatRoutes","InstanceDrawer","underlyingProps","KafkaRoutes","routeMatch","useRouteMatch","drawerProps","handleInstanceDrawer","isOpen","activeTab","drawerInstance","setDrawerInstance","routePath","KafkaMainView","kafkaInstanceId","useParams","KafkaMainViewConnected","kafkaInstance","kafkaDetail","ConnectedKafkaRoutes","adminServerUrl","setError","onError","code","redirectAfterDeleteInstance","showMetrics","useMemo","kafkaId","kafkaAdminUrl","totalMaxConnections","size","total_max_connections","maxConnections","max_connection_attempts_per_sec","maxPartitions","max_partitions","kafkaStorageBytes","max_data_retention_size","bytes","showSchemas","ServiceRegistry","kafkaPageLink","kafkaInstanceLink","kafkaName","fetchKafkaTopisFromAdmin","api","TopicsApi","Configuration","getTopics","fetchTopicMetrics","duration","interval","selectedTopic","apisService","DefaultApi","safeMetrics","getMetricsByRangeQuery","filter","m","values","metric","topic","filteredMetrics","topics","Array","from","Set","bytesIncoming","bytesOutgoing","bytesPerPartition","incomingMessageRate","forEach","__name__","addAggregatedTotalBytesTo","timestamp","partition","addAggregatePartitionBytes","metricsTopics","ConnectedMetrics","useBasename","storageKey","isAlertClosed","setIsAlertClosed","localStorage","getItem","getKafkaInstanceMetrics","kafkaResponse","persistentvolumeclaim","usedDiskSpaceMetrics","connectionAttemptRateMetrics","clientConnectionsMetrics","addAggregatedValuesTo","diskSpaceLimit","connectionRateLimit","connectionsLimit","fetchKafkaInstanceMetrics","getTopicMetrics","kafkaTopics","metrics","Promise","all","getMetricsKpi","kpiResponse","topicPartitions","consumerGroups","getMetricsByInstantQuery","fetchMetricsKpi","topicPartitionsLimit","Metrics","onCreateTopic","getTopicsMetrics","isClosed","onClickClose","setItem","getAdminServerUrl","kafkaRequest","admin_api_server_url","useKafkaInstance","setKafkaRequest","getKafkaSize","useGetAvailableSizes","fetchKafka","kasService","getKafkaById","cloud_provider","region","instance_type","size_id","provider","sizeId","instanceType","sizes","getInstanceTypesByCloudProviderAndRegion","instance_types","instanceTypesSizes","i","KasPageConnected","termsAndConditionsEventCode","termsAndConditionsSiteCode","drawerInstanceId","setDrawerInstanceId","isOpenModal","setIsOpenModal","setUrl","drawerInstanceDetails","handlePreCreateInstance","open","onClickViewTermsConditions","TermsAndConditionModal","isModalOpen","serviceName","ouiaIdModal","ouiaIdButtonViewTerms","ouiaIdButtonCancel","onCancel","QuotaContext","NotFoundPage","PageSection","EmptyState","EmptyStateIcon","icon","ExclamationTriangleIcon","Title","headingLevel","EmptyStateBody","ConnectedOverviewPage","OverviewPageV2","toKafkaHref","toServiceRegistryHref","toConnectorsHref","QuickStartCatalogFederated","ServiceAccountsPageConnected","ServiceDownPage","WrenchIcon","ArtifactVersionDetailsConnected","artifactId","decodeURIComponent","currentlyLoggedInuser","setCurrentlyLoggedInuser","breadcrumbId","registry","principals","owner","ArtifactsConnected","ArtifactRedirectConnected","DownloadArtifacts","downloadLabel","fileName","downloadLinkLabel","FederatedApicurioComponent","federateConfig","alert","useAlert","groupId","version","_config","apiUrl","navPathPrefix","artifacts","features","readOnly","breadcrumbs","roleManagement","multiTenant","settings","alerts","ui","navPrefixPath","createApicurioConfig","registryUrl","tenantId","RulesPageConnected","ServiceRegistryPageConnected","onClsoeModal","renderDownloadArtifacts","SrsLayout","SrsLayoutConnected","ServiceRegistrySchemaMapping","ServiceRegistrySchemaMappingConnected","topicName","renderSchema","registryId","GetLink","Link","AccessDeniedPage","accessDeniedDetails","Trans","i18nKey","components","Main","NotAuthorized","description","prevPageButtonText","showReturnButton","AuthContext","filterEnvironmentConfig","environmentConfig","hostname","possibleConfigs","hostnames","possibleDefaultConfigs","addFederatedModulesToConfig","federatedModulesConfig","beta","entries","k","v","substring","EmbeddedConfigProvider","setValue","configFromJson","fetchConfig","jsonConfig","ConfigContext","ConstantContext","useConstants","ServiceConstantsContextProvider","FeatureFlagsContext","useFeatureFlags","FeatureFlagProvider","middleware","register","notifications","PageNotFoundRoute","flattenedRoutes","routes","reduce","flattened","route","release","pathName","shift","useDocumentTitle","originalTitle"],"sourceRoot":""}
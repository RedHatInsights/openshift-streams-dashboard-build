{"version":3,"file":"9745.eb67de81f7d1292ba373.js","mappings":"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","sources":["webpack://application-services-ui/./node_modules/@patternfly/react-icons/dist/esm/icons/external-link-alt-icon.js","webpack://application-services-ui/./src/app/pages/APIManagement/APIManagementPage.tsx","webpack://application-services-ui/./src/app/pages/CosPage/CosPage.tsx","webpack://application-services-ui/./src/app/pages/DataScience/DataSciencePage.tsx","webpack://application-services-ui/./src/app/pages/Kafka/CreateTopic.tsx","webpack://application-services-ui/./src/app/pages/Kafka/KafkaFederated.tsx","webpack://application-services-ui/./src/app/pages/Kafka/TopicDetails.tsx","webpack://application-services-ui/./src/app/pages/Kafka/Topics.tsx","webpack://application-services-ui/./src/app/pages/Kafka/UpdateTopic.tsx","webpack://application-services-ui/./src/app/pages/NotFound/NotFoundPage.tsx","webpack://application-services-ui/./static/images/Logo-Red_Hat-OpenShift_Streams_for_Apache_Kafka-A-Standard-RGB.svg","webpack://application-services-ui/./static/images/Logo-Red_Hat-OpenShift-API_Management-A-Standard-RGB.svg","webpack://application-services-ui/./static/images/Logo-Red_Hat-OpenShift-Data_Science-A-Standard-RGB.svg","webpack://application-services-ui/./src/app/pages/Overview/OverviewPage.tsx","webpack://application-services-ui/./src/app/pages/Resources/ResourcesPage.tsx","webpack://application-services-ui/./src/app/pages/ServiceAccounts/ServiceAccountsPage.tsx","webpack://application-services-ui/./src/app/pages/ServiceRegistry/ArtifactVersion.tsx","webpack://application-services-ui/./src/app/pages/ServiceRegistry/Artifacts.tsx","webpack://application-services-ui/./src/app/pages/ServiceRegistry/ArtifactsRedirect.tsx","webpack://application-services-ui/./src/app/pages/ServiceRegistry/FederatedApicurioComponent.tsx","webpack://application-services-ui/./src/app/pages/ServiceRegistry/utils.ts","webpack://application-services-ui/./src/app/pages/ServiceRegistry/RulesPage.tsx","webpack://application-services-ui/./src/app/pages/ServiceRegistry/ServiceRegistryPage.tsx","webpack://application-services-ui/./src/app/pages/ServiceRegistry/SrsLayout.tsx","webpack://application-services-ui/./src/app/pages/AccessDenied/AccessDeniedPage.tsx"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const ExternalLinkAltIconConfig = {\n  name: 'ExternalLinkAltIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const ExternalLinkAltIcon = createIcon(ExternalLinkAltIconConfig);\n\nexport default ExternalLinkAltIcon;","import React from 'react';\nimport {\n  PageSection,\n  PageSectionVariants,\n  TextContent,\n  Text,\n  TextVariants,\n  Title,\n  Card,\n  CardBody,\n  CardHeader,\n  CardFooter,\n  CardHeaderMain,\n  CardTitle,\n  Button,\n  ButtonVariant,\n  Stack,\n  StackItem,\n  TitleSizes,\n  Grid,\n  GridItem,\n  List,\n  ListItem,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport '../../App.scss';\nimport { useTranslation } from 'react-i18next';\n\nexport const APIManagementPage: React.FunctionComponent = () => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <PageSection\n        className=\"app-services-ui--banner app-services-ui--banner--rhoam\"\n        variant={PageSectionVariants.light}\n      >\n        <Stack hasGutter>\n          <Title headingLevel=\"h1\" size=\"2xl\">\n            {t('apimgmtoverview.heroTitle')}\n          </Title>\n          <Title headingLevel=\"h2\" size=\"lg\" className=\"app-services-ui--banner__tagline pf-u-color-200\">\n            {t('apimgmtoverview.heroTagline')}\n          </Title>\n          <Text component={TextVariants.p}>{t('apimgmtoverview.heroDescription')}</Text>\n        </Stack>\n      </PageSection>\n\n      <PageSection className=\"app-services-ui--page-section--marketing\" isWidthLimited>\n        <Grid hasGutter lg={6}>\n          <Card>\n            <CardHeader>\n              <CardHeaderMain>\n                <CardTitle>\n                  <Title headingLevel=\"h3\">{t('apimgmtoverview.alreadyHaveCardTitle')}</Title>\n                </CardTitle>\n              </CardHeaderMain>\n            </CardHeader>\n            <CardBody>{t('apimgmtoverview.alreadyHaveCardMainText')}</CardBody>\n            <CardFooter>\n              <Stack hasGutter>\n                <StackItem>\n                  <Button\n                    data-testid=\"cardHaveRHOAM-buttonGoOCM\"\n                    variant={ButtonVariant.secondary}\n                    component=\"a\"\n                    href=\"https://cloud.redhat.com/openshift/\"\n                  >\n                    {t('apimgmtoverview.alreadyHaveCardCallToActionButton')}\n                  </Button>\n                </StackItem>\n                <StackItem>\n                  <Button\n                    data-testid=\"cardHaveRHOAM-linkViewDocs\"\n                    variant={ButtonVariant.link}\n                    component=\"a\"\n                    href=\"https://access.redhat.com/products/red-hat-openshift-api-management\"\n                    target=\"_blank\"\n                  >\n                    {t('apimgmtoverview.viewDocumentation')} <ExternalLinkAltIcon className=\"pf-u-ml-sm\" />\n                  </Button>\n                </StackItem>\n              </Stack>{' '}\n            </CardFooter>\n          </Card>\n          <Card>\n            <CardHeader>\n              <CardTitle>\n                <Title headingLevel=\"h3\">{t('apimgmtoverview.wantToTryCardTitle')}</Title>\n              </CardTitle>\n            </CardHeader>\n            <CardBody>{t('apimgmtoverview.wantToTryCardMainText')}</CardBody>\n            <CardFooter>\n              <Stack hasGutter>\n                <StackItem>\n                  <Button\n                    data-testid=\"cardTryRHOAM-buttonGetStarted\"\n                    variant={ButtonVariant.secondary}\n                    component=\"a\"\n                    href=\"https://developers.redhat.com/products/rhoam/getting-started\"\n                    target=\"_blank\"\n                  >\n                    {t('apimgmtoverview.wantToTryCardCallToActionButton')}\n                    <ExternalLinkAltIcon className=\"pf-u-ml-md\" />\n                  </Button>\n                </StackItem>\n                <StackItem>\n                  <Button\n                    data-testid=\"cardTryRHOAM-linkViewDocs\"\n                    variant={ButtonVariant.link}\n                    component=\"a\"\n                    href=\"https://access.redhat.com/products/red-hat-openshift-api-management\"\n                    target=\"_blank\"\n                  >\n                    {t('apimgmtoverview.viewDocumentation')} <ExternalLinkAltIcon className=\"pf-u-ml-sm\" />\n                  </Button>\n                </StackItem>\n              </Stack>\n            </CardFooter>\n          </Card>\n        </Grid>\n      </PageSection>\n\n      <PageSection variant={PageSectionVariants.light} className=\"app-services-ui--page-section--marketing\" isWidthLimited>\n        <Title size={TitleSizes.xl} headingLevel=\"h3\" className=\"pf-u-mb-lg\">\n          {t('apimgmtoverview.videoSectionTitle')}\n        </Title>\n        <Grid hasGutter>\n          <GridItem md={7}>\n            <Card className=\"app-services-ui--card--video\">\n              <div className=\"app-services-ui--video-wrapper\">\n                <iframe\n                  src=\"https://www.youtube.com/embed/NzNgc0f75pc\"\n                  title={t('apimgmtoverview.videoSectionTitle')}\n                  frameBorder=\"0\"\n                  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                  allowFullScreen\n                ></iframe>\n              </div>\n            </Card>\n          </GridItem>\n          <GridItem md={5}>\n            <TextContent>\n              <Text className=\"pf-u-color-200 pf-u-ml-md\">{t('apimgmtoverview.videoSectionInThisVideo')}</Text>\n              <List className=\"app-services-ui--icon-list\">\n                <ListItem>{t('apimgmtoverview.videoSectionBulletBuild')}</ListItem>\n                <ListItem>{t('apimgmtoverview.videoSectionBulletImport')}</ListItem>\n                <ListItem>{t('apimgmtoverview.videoSectionBulletAdd')}</ListItem>\n              </List>\n            </TextContent>\n          </GridItem>\n        </Grid>\n      </PageSection>\n    </>\n  );\n};\n\nexport default APIManagementPage;\n","import { DevelopmentPreview, FederatedModule, Loading } from '@app/components';\nimport { ServiceDownPage } from '@app/pages/ServiceDown/ServiceDownPage';\nimport { useConfig } from '@bf2/ui-shared';\nimport React from 'react';\n\n\nexport const CosPage: React.FunctionComponent = () => {\n  const config = useConfig();\n\n  if (config?.serviceDown) {\n    return <ServiceDownPage />;\n  }\n\n  return (\n    <FederatedModule\n      scope=\"cos\"\n      fallback={<Loading />}\n      module=\"./OpenshiftManagedConnectors\"\n      render={(OpenshiftManagedConnectors) => <OpenshiftManagedConnectors/>}\n    />\n  )\n};\n\nexport default CosPage;\n","import React from 'react';\nimport {\n  Button,\n  ButtonVariant,\n  Card,\n  Grid,\n  GridItem,\n  PageSection,\n  PageSectionVariants,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title,\n  TitleSizes,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nimport { useTranslation } from 'react-i18next';\n\nexport const DataSciencePage: React.FunctionComponent = () => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <PageSection\n        className=\"app-services-ui--banner app-services-ui--banner--rhods\"\n        variant={PageSectionVariants.light}\n      >\n        <Stack hasGutter>\n          <Title headingLevel=\"h1\" size=\"2xl\">\n            {t('datascienceoverview.heroTitle')}\n          </Title>\n          <Title headingLevel=\"h2\" size=\"lg\" className=\"app-services-ui--banner__tagline pf-u-color-200\">\n            {t('datascienceoverview.heroTagline')}\n          </Title>\n          <Text component={TextVariants.p}>{t('datascienceoverview.heroDescription')}</Text>\n          <StackItem>\n            <Button\n              data-testid=\"hero-buttonLearnMore\"\n              variant={ButtonVariant.secondary}\n              component=\"a\"\n              href=\"https://www.redhat.com/en/technologies/cloud-computing/openshift/openshift-data-science\"\n              target=\"_blank\"\n            >\n              {t('datascienceoverview.heroCallToActionButton')} <ExternalLinkAltIcon className=\"pf-u-ml-sm\" />\n            </Button>\n          </StackItem>\n        </Stack>\n      </PageSection>\n\n      <PageSection className=\"app-services-ui--page-section--marketing\" isWidthLimited>\n        <Grid hasGutter>\n          <GridItem md={5}>\n            <Stack hasGutter>\n              <StackItem>\n                <TextContent>\n                  <Title size={TitleSizes.xl} headingLevel=\"h3\" className=\"pf-u-mb-lg\">\n                    {t('datascienceoverview.videoSectionTitle')}\n                  </Title>\n                  <Text className=\"pf-u-mr-md\">{t('datascienceoverview.videoSectionInThisVideo')}</Text>\n                </TextContent>\n              </StackItem>\n              <StackItem>\n                <Button\n                  data-testid=\"CTA-videoRHODSDemo\"\n                  variant={ButtonVariant.secondary}\n                  component=\"a\"\n                  href=\"http://www.openshift.com/DataScienceVideoDemo\"\n                  target=\"_blank\"\n                >\n                  {t('datascienceoverview.heroViewDemo')} <ExternalLinkAltIcon className=\"pf-u-ml-sm\" />\n                </Button>\n              </StackItem>\n            </Stack>\n          </GridItem>\n          <GridItem md={7}>\n            <Card className=\"app-services-ui--card--video\">\n                <div className=\"app-services-ui--video-wrapper\">\n                  <iframe\n                    src=\"https://www.youtube.com/embed/joK89xYeuUY\"\n                    title={t('datascienceoverview.videoSectionTitle')}\n                    frameBorder=\"0\"\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                    allowFullScreen\n                  ></iframe>\n                </div>\n              </Card>\n          </GridItem>\n        </Grid>\n      </PageSection>\n    </>\n  );\n};\n\nexport default DataSciencePage;\n","import React from 'react';\nimport { KafkaFederated } from './KafkaFederated';\n\nconst CreateTopic: React.FC = () => {\n  return <KafkaFederated module=\"./CreateTopic\" />;\n};\n\nexport default CreateTopic;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Configuration, DefaultApi, KafkaRequest, SecurityApi } from '@rhoas/kafka-management-sdk';\nimport getBaseName from '@app/utils/getBaseName';\nimport { Principal, Principals, PrincipalsContext, PrincipalType, useAuth, useConfig } from '@bf2/ui-shared';\nimport { DevelopmentPreview, FederatedModule, InstanceDrawer, Loading } from '@app/components';\nimport { AccessDeniedPage, ServiceDownPage } from '@app/pages';\nimport { PrincipalApi } from '@redhat-cloud-services/rbac-client';\n\ntype KafkaFederatedProps = {\n  module: string;\n  showMetrics?: React.ReactNode;\n  activeTab?: number;\n};\n\nexport const KafkaFederated: React.FunctionComponent<KafkaFederatedProps> = ({ module, showMetrics, activeTab }) => {\n  const config = useConfig();\n\n  if (config?.serviceDown) {\n    return <ServiceDownPage/>;\n  }\n\n  return <KafkaPageConnected module={module} showMetrics={showMetrics} activeTab={activeTab}/>;\n};\n\nconst KafkaPageConnected: React.FunctionComponent<KafkaFederatedProps> = ({ module, showMetrics, activeTab }) => {\n  const config = useConfig();\n  const auth = useAuth();\n  const [adminServerUrl, setAdminServerUrl] = useState<undefined | string>();\n  const [kafkaDetail, setKafkaDetail] = useState<KafkaRequest | undefined>();\n\n  const { id, topicName } = useParams<{ id: string; topicName: string }>();\n  const [kafkaName, setKafkaName] = useState<undefined | string>();\n  const [principals, setPrincipals] = useState<Principal[] | undefined>();\n\n  useEffect(() => {\n    const getAdminApiUrl = async () => {\n      const accessToken = await auth?.kas.getToken();\n      const kasService = new DefaultApi({\n        accessToken,\n        basePath: config?.kas.apiBasePath || '',\n      } as Configuration);\n\n      const kafka = await kasService.getKafkaById(id);\n      setKafkaDetail(kafka.data);\n      setKafkaName(kafka.data.name);\n      setAdminServerUrl(`https://admin-server-${kafka.data.bootstrap_server_host}/rest`);\n    };\n\n    getAdminApiUrl();\n  }, [auth, config, id]);\n\n  useEffect(() => {\n    const getPrincipals = async () => {\n      const accessToken = await auth?.kas.getToken();\n      const securityApi = new SecurityApi({\n        accessToken,\n        basePath: config?.kas.apiBasePath || '',\n      } as Configuration);\n      const serviceAccounts = await securityApi.getServiceAccounts().then(response => response.data.items.map(sa => {\n        return {\n          id: sa.client_id,\n          displayName: sa.name,\n          principalType: PrincipalType.ServiceAccount\n        } as Principal;\n      }));\n\n      setPrincipals(serviceAccounts);\n\n      const principalApi = new PrincipalApi({\n        accessToken,\n        basePath: config?.rbac.basePath\n      });\n\n      const currentlyLoggedInuser = await auth?.getUsername();\n\n      try {\n        const userAccounts = await principalApi.listPrincipals(-1).then(response => response.data.data.map(p => {\n          return {\n            id: p.username,\n            principalType: PrincipalType.UserAccount,\n            displayName: `${p.first_name} ${p.last_name}`,\n            emailAddress: p.email\n          } as Principal;\n        }).filter(p => (p.id !== currentlyLoggedInuser && p.id !== kafkaDetail?.owner)));\n        setPrincipals(prevState => prevState?.concat(userAccounts));\n      } catch (e) {\n        // ignore the error\n      }\n\n\n    }\n    if (config?.rbac.basePath) {\n      // Only load the principals if rbac is configured\n      getPrincipals();\n    }\n\n  }, [auth, config]);\n\n  if (config === undefined || adminServerUrl === undefined) {\n    return <Loading/>;\n  }\n\n  return (\n    <KafkaPageContent\n      adminServerUrl={adminServerUrl}\n      id={id}\n      topicName={topicName}\n      kafkaName={kafkaName}\n      kafkaDetail={kafkaDetail}\n      module={module}\n      showMetrics={showMetrics}\n      activeTab={activeTab}\n      principals={principals}\n    />\n  );\n};\n\ntype KafkaPageContentProps = KafkaFederatedProps & {\n  adminServerUrl: string;\n  id: string;\n  topicName?: string;\n  kafkaName?: string;\n  kafkaDetail: KafkaRequest | undefined;\n  principals: Principal[] | undefined\n};\n\nconst KafkaPageContent: React.FunctionComponent<KafkaPageContentProps> = ({\n                                                                            adminServerUrl,\n                                                                            id,\n                                                                            kafkaName,\n                                                                            kafkaDetail,\n                                                                            module,\n                                                                            showMetrics,\n                                                                            activeTab,\n                                                                            principals\n                                                                          }) => {\n  const auth = useAuth();\n\n  const [error, setError] = useState<undefined | number>();\n  const [isInstanceDrawerOpen, setIsInstanceDrawerOpen] = useState<boolean | undefined>();\n  const [activeDrawerTab, setActiveDrawerTab] = useState<string>('');\n  const [isOpenDeleteInstanceModal, setIsOpenDeleteInstanceModal] = useState<boolean>(false);\n\n  const onError = (code: number) => {\n    setError(code);\n  };\n\n  const kafkaPageLink = `${getBaseName(window.location.pathname)}/streams/kafkas`;\n  const kafkaInstanceLink = `${getBaseName(window.location.pathname)}/streams/kafkas/${id}`;\n\n  const handleInstanceDrawer = (isOpen: boolean, activeTab?: string) => {\n    activeTab && setActiveDrawerTab(activeTab);\n    setIsInstanceDrawerOpen(isOpen);\n  };\n\n  const onCloseInstanceDrawer = () => {\n    setIsInstanceDrawerOpen(false);\n  };\n\n  let kafkaUIPage = (\n    <FederatedModule\n      data-ouia-app-id=\"dataPlane-streams\"\n      scope=\"kafka\"\n      module={module}\n      render={(FederatedKafka) => (\n        <PrincipalsContext.Provider value={principals ? {\n          getAllPrincipals: () => principals || [] as Principal[]\n        } as Principals : undefined}>\n          <FederatedKafka\n            getToken={auth?.kafka.getToken}\n            apiBasePath={adminServerUrl}\n            kafkaName={kafkaName}\n            kafkaPageLink={kafkaPageLink}\n            kafkaInstanceLink={kafkaInstanceLink}\n            onError={onError}\n            handleInstanceDrawer={handleInstanceDrawer}\n            setIsOpenDeleteInstanceModal={setIsOpenDeleteInstanceModal}\n            showMetrics={showMetrics}\n            activeTab={activeTab}\n          />\n        </PrincipalsContext.Provider>\n      )}\n    />\n  );\n\n  if (error === 401) {\n    kafkaUIPage = <AccessDeniedPage/>;\n  }\n\n  return (\n    <div className=\"app-services-ui--u-display-contents\" data-ouia-app-id=\"dataPlane-streams\">\n      <DevelopmentPreview>\n        <InstanceDrawer\n          isExpanded={isInstanceDrawerOpen}\n          onClose={onCloseInstanceDrawer}\n          kafkaDetail={kafkaDetail}\n          activeTab={activeDrawerTab}\n          isOpenDeleteInstanceModal={isOpenDeleteInstanceModal}\n          setIsOpenDeleteInstanceModal={setIsOpenDeleteInstanceModal}\n        >\n          {kafkaUIPage}\n        </InstanceDrawer>\n      </DevelopmentPreview>\n    </div>\n  );\n};\n","import React from 'react';\nimport { KafkaFederated } from './KafkaFederated';\n\nconst TopicDetails: React.FC = () => {\n  return <KafkaFederated module=\"./TopicDetails\" />;\n};\n\nexport default TopicDetails;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { KafkaFederated } from './KafkaFederated';\nimport { Metrics } from '@app/components';\n\nconst Topics: React.FC = () => {\n  const { id } = useParams<{ id: string }>();\n\n  const showMetrics = () => {\n    return <Metrics kafkaId={id} />;\n  };\n\n  return <KafkaFederated module=\"./KafkaMainView\" showMetrics={showMetrics()} />;\n};\n\nexport default Topics;\n","import React from 'react';\nimport { KafkaFederated } from './KafkaFederated';\n\nconst UpdateTopic: React.FC = () => {\n  return <KafkaFederated module=\"./UpdateTopic\" />;\n};\n\nexport default UpdateTopic;\n","import * as React from 'react';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport {\n  PageSection,\n  Title,\n  Button,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n} from '@patternfly/react-core';\nimport { useHistory } from 'react-router-dom';\n\nconst NotFoundPage: React.FunctionComponent = () => {\n  function GoHomeBtn() {\n    const history = useHistory();\n    function handleClick() {\n      history.push('/');\n    }\n    return (\n      <Button onClick={handleClick}>Take me home</Button>\n    );\n  }\n\n  return (\n    <PageSection>\n    <EmptyState variant=\"full\">\n      <EmptyStateIcon icon={ExclamationTriangleIcon} />\n      <Title headingLevel=\"h1\" size=\"lg\">\n        404 Page not found\n      </Title>\n      <EmptyStateBody>\n        We didn&apos;t find a page that matches the address you navigated to.\n      </EmptyStateBody>\n      <GoHomeBtn />\n    </EmptyState>\n  </PageSection>\n  )\n};\n\nexport { NotFoundPage };\n\nexport default NotFoundPage;\n\n","export default __webpack_public_path__ + \"d0f2bb14.svg\";","export default __webpack_public_path__ + \"61fdfbf5.svg\";","export default __webpack_public_path__ + \"485bae8d.svg\";","import React from 'react';\nimport {\n  Bullseye,\n  Button,\n  ButtonVariant,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CardHeaderMain,\n  CardTitle,\n  Grid,\n  Label,\n  PageSection,\n  PageSectionVariants,\n  Stack,\n  StackItem,\n  Text,\n  TextVariants,\n  Title,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport ApacheKafkaLogo from \"/static/images/Logo-Red_Hat-OpenShift_Streams_for_Apache_Kafka-A-Standard-RGB.svg\";\nimport APIMgmtLogo from \"/static/images/Logo-Red_Hat-OpenShift-API_Management-A-Standard-RGB.svg\";\nimport DataScienceLogo from \"static/images/Logo-Red_Hat-OpenShift-Data_Science-A-Standard-RGB.svg\";\n\nimport { useTranslation } from 'react-i18next';\n\nexport const OverviewPage: React.FunctionComponent = () => {\n\n  const { t } = useTranslation();\n\n  return (\n    <>\n      {/* Hero banner with graphic */}\n      <PageSection className=\"app-services-ui--page-section--marketing app-services-ui--banner pf-t-dark pf-u-background-color-dark-100\" variant={PageSectionVariants.dark}>\n        <Stack hasGutter>\n          <Title headingLevel=\"h1\" size=\"2xl\">\n            {t('overview.heroTitle')}\n          </Title>\n          <Text className=\"app-services-ui--banner__tagline\">{t('overview.heroTagline')}</Text>\n          <Text component={TextVariants.p}>\n            {t('overview.heroDescription')}\n          </Text>\n          <Text component={TextVariants.p} className=\"pf-u-mt-md\">\n            {t('overview.heroDescription2')}\n          </Text>\n          <StackItem>\n            <Button variant={ButtonVariant.primary} isLarge component=\"a\" data-testid=\"hero-buttonTryKafka\" href=\"http://cloud.redhat.com/beta/application-services/streams/kafkas/\">\n              {t('overview.heroCallToActionButton')}\n            </Button>\n          </StackItem>\n        </Stack>\n      </PageSection>\n\n      {/* Banner with just text */}\n      <PageSection variant={PageSectionVariants.light} className=\"app-services-ui--page-section--marketing\">\n        <Bullseye>\n          <Text component={TextVariants.p} className=\"app-services-ui--banner--text-only\">\n            {t('overview.banner')}\n          </Text>\n        </Bullseye>\n      </PageSection>\n\n      {/* Cards */}\n      <PageSection isWidthLimited className=\"app-services-ui--page-section--marketing\">\n        <Grid md={6} lg={4} hasGutter>\n\n          {/* Kafka card */}\n          <Card>\n            <CardHeader>\n              <CardHeaderMain>\n                <img\n                  src={ApacheKafkaLogo}\n                  alt=\"Red Hat OpenShift Streams for Apache Kafka logo\"\n                  style={{ height: '50px' }}\n                />\n              </CardHeaderMain>\n            </CardHeader>\n            <CardTitle>\n              <Title headingLevel=\"h2\" size=\"xl\">\n                {t('overview.rhosakTitle')}\n              </Title>\n            </CardTitle>\n            <CardBody>\n              <Stack hasGutter>\n                <StackItem className=\"pf-u-mb-lg\">\n                  <Label>{t('overview.developmentPreview')}</Label>\n                </StackItem>\n                <StackItem>\n                  {t('overview.rhosakMainText')}\n                </StackItem>\n                <StackItem className=\"pf-u-color-200\">\n                  {t('overview.rhosakSecondaryText')}\n                </StackItem>\n              </Stack>\n            </CardBody>\n            <CardFooter>\n              <Button data-testid=\"cardRHOSAK-buttonCreateKafka\" variant={ButtonVariant.secondary} component=\"a\" href=\"http://cloud.redhat.com/beta/application-services/streams/kafkas/\">{t('overview.rhosakCallToActionButton')}</Button>\n            </CardFooter>\n          </Card>\n\n          {/* API Management card */}\n          <Card>\n            <CardHeader>\n              <CardHeaderMain>\n                <img\n                  src={APIMgmtLogo}\n                  alt=\"Red Hat OpenShift API Management logo\"\n                  style={{ height: '50px' }}\n                />\n              </CardHeaderMain>\n            </CardHeader>\n            <CardTitle>\n              <Title headingLevel=\"h2\" size=\"xl\">\n                {t('overview.rhoamTitle')}\n              </Title>\n            </CardTitle>\n            <CardBody>\n              <Stack hasGutter>\n                <StackItem className=\"pf-u-mb-lg\">\n                  <Label color=\"blue\">{t('overview.generalAvailability')}</Label>\n                </StackItem>\n                <StackItem>\n                {t('overview.rhoamMainText')}\n                </StackItem>\n                <StackItem className=\"pf-u-color-200\">\n                  {t('overview.rhoamSecondaryText')} <Button data-testid=\"cardRHOAM-linkOpenShift\" isInline variant={ButtonVariant.link} component=\"a\" target=\"_blank\" href=\"http://openshift.com\">OpenShift\n                  <ExternalLinkAltIcon className=\"pf-u-ml-xs\" /></Button>.\n                </StackItem>\n              </Stack>\n            </CardBody>\n            <CardFooter>\n              <Button variant={ButtonVariant.secondary} data-testid=\"cardRHOAM-buttonCTA\" component=\"a\" target=\"_blank\" href=\"https://developers.redhat.com/products/rhoam/getting-started\">\n                {t('overview.getStarted')} <ExternalLinkAltIcon className=\"pf-u-ml-sm\" />\n              </Button>\n            </CardFooter>\n          </Card>\n\n          {/* Data science card */}\n          <Card>\n            <CardHeader>\n              <CardHeaderMain>\n                <img\n                  src={DataScienceLogo}\n                  alt=\"Red Hat OpenShift Data Science logo\"\n                  style={{ height: '50px' }}\n                />\n              </CardHeaderMain>\n            </CardHeader>\n            <CardTitle>\n              <Title headingLevel=\"h2\" size=\"xl\">\n              {t('overview.rhodsTitle')}\n              </Title>\n            </CardTitle>\n            <CardBody>\n              <Stack hasGutter>\n                <StackItem className=\"pf-u-mb-lg\">\n                  <Label>{t('overview.beta')}</Label>\n                </StackItem>\n                <StackItem>\n                {t('overview.rhodsMainText')}\n                </StackItem>\n                <StackItem className=\"pf-u-color-200\">\n                {t('overview.rhodsSecondaryText')} <Button data-testid=\"cardRHODS-linkOpenShift\" isInline variant={ButtonVariant.link} component=\"a\" target=\"_blank\" href=\"http://openshift.com\"> OpenShift\n                  <ExternalLinkAltIcon className=\"pf-u-ml-xs\" /></Button>.\n                </StackItem>\n              </Stack>\n            </CardBody>\n            <CardFooter>\n              <Button data-testid=\"cardRHODS-buttonCTA\" variant={ButtonVariant.secondary} component=\"a\" target=\"_blank\" href=\"https://www.redhat.com/en/technologies/cloud-computing/openshift/openshift-data-science\">\n                {t('overview.learnMore')} <ExternalLinkAltIcon className=\"pf-u-ml-sm\" />\n              </Button>\n            </CardFooter>\n          </Card>\n        </Grid>\n      </PageSection>\n    </>\n  );\n};\n\nexport default OverviewPage;\n","import React, { FunctionComponent } from 'react';\nimport { FederatedModule, Loading } from '@app/components';\n\nexport const ResourcesPage: FunctionComponent = () => (\n  <FederatedModule\n    scope=\"guides\"\n    module=\"./QuickStartCatalog\"\n    fallback={<Loading />}\n    render={(QuickStartCatalogFederated) => <QuickStartCatalogFederated />}\n  />\n);\n\nexport default ResourcesPage;\n","import React from 'react';\nimport { FederatedModule, Loading } from '@app/components';\nimport { useConfig } from '@bf2/ui-shared';\nimport { ServiceDownPage } from '@app/pages/ServiceDown/ServiceDownPage';\n\nexport const ServiceAccountsPage: React.FunctionComponent = () => {\n  const config = useConfig();\n  return (\n    <FederatedModule\n      scope=\"kas\"\n      module=\"./ServiceAccounts\"\n      fallback={<Loading/>}\n      render={(ServiceAccountsFederated) => {\n\n\n        if (config?.serviceDown) {\n          return <ServiceDownPage/>;\n        }\n        return <ServiceAccountsFederated/>;\n      }}\n    />\n  );\n};\n\nexport default ServiceAccountsPage;\n","import { FederatedApicurioComponent } from \"@app/pages/ServiceRegistry/FederatedApicurioComponent\";\nimport React from \"react\";\nimport { SrsLayout } from \"@app/pages/ServiceRegistry/SrsLayout\";\nimport { useConfig } from \"@bf2/ui-shared\";\nimport { ServiceDownPage } from \"@app/pages\";\n\nexport const ArtifactVersionDetails: React.FunctionComponent = () => {\n  const config = useConfig();\n\n  if (config?.serviceDown) {\n    return <ServiceDownPage />;\n  }\n\n  return <ArtifactVersionDetailsConnected />;\n};\n\nconst ArtifactVersionDetailsConnected: React.FunctionComponent = () => {\n  return (\n    <SrsLayout breadcrumbId=\"srs.artifacts_details\" render={registry => (\n      <FederatedApicurioComponent registry={registry} module=\"./FederatedArtifactVersionPage\" />\n    )}/>\n  );\n};\n\nexport default ArtifactVersionDetails;\n","import { FederatedApicurioComponent } from '@app/pages/ServiceRegistry/FederatedApicurioComponent';\nimport React from 'react';\nimport { SrsLayout } from '@app/pages/ServiceRegistry/SrsLayout';\nimport { useConfig } from '@bf2/ui-shared';\nimport { ServiceDownPage } from '@app/pages';\n\nexport const Artifacts: React.FunctionComponent = () => {\n  const config = useConfig();\n\n  if (config?.serviceDown) {\n    return <ServiceDownPage />;\n  }\n\n  return <ArtifactsConnected />;\n};\n\nconst ArtifactsConnected: React.FunctionComponent = () => {\n  return (\n    <SrsLayout\n      breadcrumbId=\"srs.artifacts\"\n      render={(registry) => <FederatedApicurioComponent module=\"./FederatedArtifactsPage\" registry={registry} />}\n    />\n  );\n};\n\nexport default Artifacts;\n","import { FederatedApicurioComponent } from \"@app/pages/ServiceRegistry/FederatedApicurioComponent\";\nimport React from \"react\";\nimport { SrsLayout } from \"@app/pages/ServiceRegistry/SrsLayout\";\nimport { useConfig } from \"@bf2/ui-shared\";\nimport { ServiceDownPage } from \"@app/pages\";\n\nexport const ArtifactRedirect: React.FunctionComponent = () => {\n  const config = useConfig();\n\n  if (config?.serviceDown) {\n    return <ServiceDownPage />;\n  }\n\n  return <ArtifactRedirectConnected />;\n};\n\nconst ArtifactRedirectConnected: React.FunctionComponent = () => {\n  return (\n    <SrsLayout render={registry => (\n      <FederatedApicurioComponent registry={registry} module=\"./FederatedArtifactRedirectPage\" />\n    )} />\n  );\n};\n\nexport default ArtifactRedirect;\n","import React from 'react';\nimport { useBasename, useConfig, useAuth } from '@bf2/ui-shared';\nimport { createApicurioConfig, ConfigType } from '@app/pages/ServiceRegistry/utils';\nimport { FederatedModule, Loading } from '@app/components';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Registry } from '@rhoas/registry-management-sdk';\n\nexport type FederatedApicurioComponentProps = {\n  module: string;\n  registry: Registry;\n};\n\ntype ServiceRegistryParams = {\n  groupId: string;\n  artifactId: string;\n  version: string;\n};\n\nexport const FederatedApicurioComponent: React.FC<FederatedApicurioComponentProps> = ({ module, registry }) => {\n  let federateConfig: ConfigType;\n  const auth = useAuth();\n  const config = useConfig();\n  const history = useHistory();\n  const basename = useBasename();\n  const getToken = auth?.apicurio_registry.getToken;\n  const { groupId, artifactId, version } = useParams<ServiceRegistryParams>();\n\n  if (config === undefined || registry === undefined) {\n    return <Loading />;\n  }\n\n  if (getToken && basename) {\n    federateConfig = createApicurioConfig(\n      registry.registryUrl,\n      `${basename.getBasename()}/t/${registry?.id}`,\n      getToken\n    );\n  }\n\n  return (\n    <FederatedModule\n      scope=\"apicurio_registry\"\n      module={module}\n      fallback={<Loading />}\n      render={(ServiceRegistryFederated) => {\n        return (\n          <ServiceRegistryFederated\n            config={federateConfig}\n            tenantId={registry.id}\n            groupId={groupId}\n            artifactId={artifactId}\n            version={version}\n            history={history}\n          />\n        );\n      }}\n    />\n  );\n};\n","export interface FeaturesConfig {\n  readOnly?: boolean;\n  breadcrumbs?: boolean;\n  multiTenant?: boolean;\n}\n\nexport interface ArtifactsConfig {\n  url: string;\n}\n\nexport interface UiConfig {\n  contextPath?: string;\n  navPrefixPath?: string;\n}\n\nexport interface AuthConfig {\n  type: string;\n  getToken: () => Promise<string>;\n}\n\n// Used when `type=keycloakjs`\nexport interface KeycloakJsAuthConfig extends AuthConfig {\n  options?: any;\n}\n\n// Used when `type=none`\nexport interface NoneAuthConfig extends AuthConfig {}\n\nexport interface ConfigType {\n  artifacts: ArtifactsConfig;\n  auth: KeycloakJsAuthConfig | NoneAuthConfig;\n  features?: FeaturesConfig;\n  ui: UiConfig;\n}\n\nconst createApicurioConfig = (apiUrl: string, navPathPrefix: string, getToken: () => Promise<string>) => {\n  const config: ConfigType = {\n    artifacts: {\n      url: `${apiUrl}/apis/registry`,\n    },\n    auth: {\n      type: 'gettoken',\n      getToken,\n    },\n    features: {\n      readOnly: false,\n      breadcrumbs: false,\n      multiTenant: true,\n    },\n    ui: {\n      navPrefixPath: navPathPrefix,\n    },\n  } as ConfigType;\n\n  return config;\n};\n\nexport { createApicurioConfig };\n","import { FederatedApicurioComponent } from \"@app/pages/ServiceRegistry/FederatedApicurioComponent\";\nimport React from \"react\";\nimport { SrsLayout } from \"@app/pages/ServiceRegistry/SrsLayout\";\nimport { useConfig } from \"@bf2/ui-shared\";\nimport { ServiceDownPage } from \"@app/pages\";\n\nexport const RulesPage: React.FunctionComponent = () => {\n  const config = useConfig();\n\n  if (config?.serviceDown) {\n    return <ServiceDownPage />;\n  }\n\n  return <RulesPageConnected />;\n};\n\nconst RulesPageConnected: React.FunctionComponent = () => {\n  return (\n    <SrsLayout breadcrumbId=\"srs.global_rules\" render={registry => (\n      <FederatedApicurioComponent registry={registry} module=\"./FederatedRulesPage\"/>\n    )}/>\n  );\n};\n\nexport default RulesPage;\n","import React from 'react';\nimport { useConfig } from '@bf2/ui-shared';\nimport { DevelopmentPreview, FederatedModule, Loading } from '@app/components';\nimport { ServiceDownPage } from '@app/pages';\nimport { useModalControl } from '@app/hooks';\n\nexport const ServiceRegistryPage: React.FunctionComponent = () => {\n  const config = useConfig();\n\n  if (config?.serviceDown) {\n    return <ServiceDownPage />;\n  }\n\n  return <ServiceRegistryPageConnected />;\n};\n\nexport const ServiceRegistryPageConnected: React.FC = () => {\n  const config = useConfig();\n  const { preCreateInstance, shouldOpenCreateModal } = useModalControl();\n\n  // Wait for the config and the registry to load\n  if (config === undefined) {\n    return <Loading />;\n  }\n\n  return (\n    <DevelopmentPreview>\n      <FederatedModule\n        scope=\"srs\"\n        module=\"./ServiceRegistry\"\n        fallback={<Loading />}\n        render={(ServiceRegistryFederated) => {\n          return (\n            <ServiceRegistryFederated\n              preCreateInstance={preCreateInstance}\n              shouldOpenCreateModal={shouldOpenCreateModal}\n            />\n          );\n        }}\n      />\n    </DevelopmentPreview>\n  );\n};\n\nexport default ServiceRegistryPage;\n","import React from 'react';\nimport { FederatedModule, Loading } from '@app/components';\nimport { Registry } from \"@rhoas/registry-management-sdk\";\n\ntype SrsLayoutProps = {\n  render: (registry: Registry) => JSX.Element\n  breadcrumbId?: string\n}\n\nexport const SrsLayout: React.FC<SrsLayoutProps> = ({ render, breadcrumbId }) => {\n  return (\n    <FederatedModule\n      scope=\"srs\"\n      module=\"./ApicurioRegistry\"\n      fallback={<Loading/>}\n      render={(ServiceRegistryFederated) => {\n        return (\n          <ServiceRegistryFederated render={render} breadcrumbId={breadcrumbId}/>\n        );\n      }}\n    />\n  );\n};\n","import React from 'react';\n\nimport { Main, NotAuthorized } from '@redhat-cloud-services/frontend-components';\n\nimport { useTranslation, Trans } from 'react-i18next';\nimport { Link } from 'react-router-dom';\n\ninterface GetLinkProps {\n  href?: string;\n}\n\nconst GetLink: React.FunctionComponent<GetLinkProps> = ({ href, children }) => <Link to={href || ''}>{children}</Link>;\n\nexport const AccessDeniedPage: React.FunctionComponent = () => {\n  const { t } = useTranslation();\n\n  const accessDeniedDetails = (\n    <Trans\n      i18nKey=\"accessdenied.accessDeniedDescription\"\n      t={t}\n      components={[<GetLink key=\"kafkas\" href=\"/streams/kafkas\" />]}\n    />\n  );\n\n  return (\n    <Main>\n      <NotAuthorized\n        title={t('accessdenied.accessDeniedTitle')}\n        description={accessDeniedDetails}\n        prevPageButtonText={t('accessdenied.accessDeniedButtonText')}\n        showReturnButton={true}\n      />\n    </Main>\n  );\n};\n"],"names":["ExternalLinkAltIcon","name","height","width","svgPath","yOffset","xOffset","APIManagementPage","t","useTranslation","PageSection","className","variant","PageSectionVariants","Stack","hasGutter","Title","headingLevel","size","Text","component","TextVariants","isWidthLimited","Grid","lg","Card","CardHeader","CardHeaderMain","CardTitle","CardBody","CardFooter","StackItem","Button","ButtonVariant","href","target","TitleSizes","GridItem","md","src","title","frameBorder","allow","allowFullScreen","TextContent","List","ListItem","CosPage","config","useConfig","serviceDown","scope","fallback","module","render","OpenshiftManagedConnectors","DataSciencePage","KafkaFederated","showMetrics","activeTab","KafkaPageConnected","auth","useAuth","useState","adminServerUrl","setAdminServerUrl","kafkaDetail","setKafkaDetail","useParams","id","topicName","kafkaName","setKafkaName","principals","setPrincipals","useEffect","kas","getToken","accessToken","DefaultApi","basePath","apiBasePath","getKafkaById","kafka","data","bootstrap_server_host","rbac","SecurityApi","getServiceAccounts","then","response","items","map","sa","client_id","displayName","principalType","PrincipalType","serviceAccounts","principalApi","PrincipalApi","getUsername","currentlyLoggedInuser","listPrincipals","p","username","first_name","last_name","emailAddress","email","filter","owner","prevState","concat","undefined","KafkaPageContent","error","setError","isInstanceDrawerOpen","setIsInstanceDrawerOpen","activeDrawerTab","setActiveDrawerTab","isOpenDeleteInstanceModal","setIsOpenDeleteInstanceModal","onError","code","kafkaPageLink","window","location","pathname","kafkaInstanceLink","handleInstanceDrawer","isOpen","kafkaUIPage","FederatedKafka","PrincipalsContext","value","getAllPrincipals","isExpanded","onClose","kafkaId","NotFoundPage","EmptyState","EmptyStateIcon","icon","EmptyStateBody","history","useHistory","onClick","push","OverviewPage","isLarge","Bullseye","alt","style","Label","color","isInline","ResourcesPage","QuickStartCatalogFederated","ServiceAccountsPage","ServiceAccountsFederated","ArtifactVersionDetails","ArtifactVersionDetailsConnected","breadcrumbId","registry","Artifacts","ArtifactsConnected","ArtifactRedirect","ArtifactRedirectConnected","FederatedApicurioComponent","federateConfig","basename","useBasename","apicurio_registry","groupId","artifactId","version","apiUrl","navPathPrefix","artifacts","url","type","features","readOnly","breadcrumbs","multiTenant","ui","navPrefixPath","createApicurioConfig","registryUrl","getBasename","ServiceRegistryFederated","tenantId","RulesPage","RulesPageConnected","ServiceRegistryPage","ServiceRegistryPageConnected","preCreateInstance","shouldOpenCreateModal","SrsLayout","GetLink","children","Link","to","AccessDeniedPage","accessDeniedDetails","Trans","i18nKey","components","key","Main","NotAuthorized","description","prevPageButtonText","showReturnButton"],"sourceRoot":""}
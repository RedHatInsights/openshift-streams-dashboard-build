{"version":3,"file":"2548.a600fea0ec4edd7384ed.js","mappings":"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","sources":["webpack://application-services-ui/./node_modules/@redhat-cloud-services/rbac-client/dist/api.js","webpack://application-services-ui/./node_modules/@redhat-cloud-services/rbac-client/dist/base.js","webpack://application-services-ui/./node_modules/@redhat-cloud-services/rbac-client/dist/configuration.js","webpack://application-services-ui/./node_modules/@redhat-cloud-services/rbac-client/dist/index.js","webpack://application-services-ui/./node_modules/querystring/decode.js","webpack://application-services-ui/./node_modules/querystring/encode.js","webpack://application-services-ui/./node_modules/querystring/index.js","webpack://application-services-ui/./node_modules/url/node_modules/punycode/punycode.js","webpack://application-services-ui/./node_modules/url/url.js","webpack://application-services-ui/./node_modules/url/util.js"],"sourcesContent":["\"use strict\";\n// tslint:disable\n/**\n * Role Based Access Control\n * The API for Role Based Access Control.\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StatusApi = exports.StatusApiFactory = exports.StatusApiFp = exports.StatusApiAxiosParamCreator = exports.RoleApi = exports.RoleApiFactory = exports.RoleApiFp = exports.RoleApiAxiosParamCreator = exports.PrincipalApi = exports.PrincipalApiFactory = exports.PrincipalApiFp = exports.PrincipalApiAxiosParamCreator = exports.PolicyApi = exports.PolicyApiFactory = exports.PolicyApiFp = exports.PolicyApiAxiosParamCreator = exports.PermissionApi = exports.PermissionApiFactory = exports.PermissionApiFp = exports.PermissionApiAxiosParamCreator = exports.GroupApi = exports.GroupApiFactory = exports.GroupApiFp = exports.GroupApiAxiosParamCreator = exports.CrossAccountRequestApi = exports.CrossAccountRequestApiFactory = exports.CrossAccountRequestApiFp = exports.CrossAccountRequestApiAxiosParamCreator = exports.AccessApi = exports.AccessApiFactory = exports.AccessApiFp = exports.AccessApiAxiosParamCreator = exports.ResourceDefinitionFilterOperationEnum = exports.CrossAccountRequestPatchStatusEnum = void 0;\nvar globalImportUrl = require(\"url\");\nvar axios_1 = require(\"axios\");\n// Some imports not used depending on template conditions\n// @ts-ignore\nvar base_1 = require(\"./base\");\n/**\n    * @export\n    * @enum {string}\n    */\nvar CrossAccountRequestPatchStatusEnum;\n(function (CrossAccountRequestPatchStatusEnum) {\n    CrossAccountRequestPatchStatusEnum[\"Pending\"] = \"pending\";\n    CrossAccountRequestPatchStatusEnum[\"Approved\"] = \"approved\";\n    CrossAccountRequestPatchStatusEnum[\"Expired\"] = \"expired\";\n    CrossAccountRequestPatchStatusEnum[\"Cancelled\"] = \"cancelled\";\n    CrossAccountRequestPatchStatusEnum[\"Denied\"] = \"denied\";\n})(CrossAccountRequestPatchStatusEnum = exports.CrossAccountRequestPatchStatusEnum || (exports.CrossAccountRequestPatchStatusEnum = {}));\n/**\n    * @export\n    * @enum {string}\n    */\nvar ResourceDefinitionFilterOperationEnum;\n(function (ResourceDefinitionFilterOperationEnum) {\n    ResourceDefinitionFilterOperationEnum[\"Equal\"] = \"equal\";\n    ResourceDefinitionFilterOperationEnum[\"In\"] = \"in\";\n})(ResourceDefinitionFilterOperationEnum = exports.ResourceDefinitionFilterOperationEnum || (exports.ResourceDefinitionFilterOperationEnum = {}));\n/**\n * AccessApi - axios parameter creator\n * @export\n */\nvar AccessApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * Access responses are sorted in ascending order by an ID internal to the database\n         * @summary Get the permitted access for a principal in the tenant (defaults to principal from the identity header)\n         * @param {string} application The application name(s) to obtain access for the principal. This is an exact match. When no application is supplied, all permissions for the principal are returned. You may also use a comma-separated list to match on multiple applications.\n         * @param {string} [username] Unique username of the principal to obtain access for (only available for admins, and if supplied, takes precedence over the identity header).\n         * @param {'application' | 'resource_type' | 'verb'} [orderBy] Parameter for ordering roles by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-application\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPrincipalAccess: function (application, username, orderBy, limit, offset, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'application' is not null or undefined\n                    if (application === null || application === undefined) {\n                        throw new base_1.RequiredError('application', 'Required parameter application was null or undefined when calling getPrincipalAccess.');\n                    }\n                    localVarPath = \"/access/\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (application !== undefined) {\n                        localVarQueryParameter['application'] = application;\n                    }\n                    if (username !== undefined) {\n                        localVarQueryParameter['username'] = username;\n                    }\n                    if (orderBy !== undefined) {\n                        localVarQueryParameter['order_by'] = orderBy;\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\nexports.AccessApiAxiosParamCreator = AccessApiAxiosParamCreator;\n/**\n * AccessApi - functional programming interface\n * @export\n */\nvar AccessApiFp = function (configuration) {\n    return {\n        /**\n         * Access responses are sorted in ascending order by an ID internal to the database\n         * @summary Get the permitted access for a principal in the tenant (defaults to principal from the identity header)\n         * @param {string} application The application name(s) to obtain access for the principal. This is an exact match. When no application is supplied, all permissions for the principal are returned. You may also use a comma-separated list to match on multiple applications.\n         * @param {string} [username] Unique username of the principal to obtain access for (only available for admins, and if supplied, takes precedence over the identity header).\n         * @param {'application' | 'resource_type' | 'verb'} [orderBy] Parameter for ordering roles by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-application\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPrincipalAccess: function (application, username, orderBy, limit, offset, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.AccessApiAxiosParamCreator)(configuration).getPrincipalAccess(application, username, orderBy, limit, offset, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\nexports.AccessApiFp = AccessApiFp;\n/**\n * AccessApi - factory interface\n * @export\n */\nvar AccessApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         * Access responses are sorted in ascending order by an ID internal to the database\n         * @summary Get the permitted access for a principal in the tenant (defaults to principal from the identity header)\n         * @param {string} application The application name(s) to obtain access for the principal. This is an exact match. When no application is supplied, all permissions for the principal are returned. You may also use a comma-separated list to match on multiple applications.\n         * @param {string} [username] Unique username of the principal to obtain access for (only available for admins, and if supplied, takes precedence over the identity header).\n         * @param {'application' | 'resource_type' | 'verb'} [orderBy] Parameter for ordering roles by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-application\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPrincipalAccess: function (application, username, orderBy, limit, offset, options) {\n            return (0, exports.AccessApiFp)(configuration).getPrincipalAccess(application, username, orderBy, limit, offset, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\nexports.AccessApiFactory = AccessApiFactory;\n/**\n * AccessApi - object-oriented interface\n * @export\n * @class AccessApi\n * @extends {BaseAPI}\n */\nvar AccessApi = /** @class */ (function (_super) {\n    __extends(AccessApi, _super);\n    function AccessApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Access responses are sorted in ascending order by an ID internal to the database\n     * @summary Get the permitted access for a principal in the tenant (defaults to principal from the identity header)\n     * @param {string} application The application name(s) to obtain access for the principal. This is an exact match. When no application is supplied, all permissions for the principal are returned. You may also use a comma-separated list to match on multiple applications.\n     * @param {string} [username] Unique username of the principal to obtain access for (only available for admins, and if supplied, takes precedence over the identity header).\n     * @param {'application' | 'resource_type' | 'verb'} [orderBy] Parameter for ordering roles by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-application\n     * @param {number} [limit] Parameter for selecting the amount of data returned.\n     * @param {number} [offset] Parameter for selecting the offset of data.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccessApi\n     */\n    AccessApi.prototype.getPrincipalAccess = function (application, username, orderBy, limit, offset, options) {\n        var _this = this;\n        return (0, exports.AccessApiFp)(this.configuration).getPrincipalAccess(application, username, orderBy, limit, offset, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return AccessApi;\n}(base_1.BaseAPI));\nexports.AccessApi = AccessApi;\n/**\n * CrossAccountRequestApi - axios parameter creator\n * @export\n */\nvar CrossAccountRequestApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         *\n         * @summary Create a cross account request\n         * @param {CrossAccountRequestIn} crossAccountRequestIn CrossAccountRequest to create\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createCrossAccountRequests: function (crossAccountRequestIn, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'crossAccountRequestIn' is not null or undefined\n                    if (crossAccountRequestIn === null || crossAccountRequestIn === undefined) {\n                        throw new base_1.RequiredError('crossAccountRequestIn', 'Required parameter crossAccountRequestIn was null or undefined when calling createCrossAccountRequests.');\n                    }\n                    localVarPath = \"/cross-account-requests/\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof crossAccountRequestIn !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(crossAccountRequestIn !== undefined ? crossAccountRequestIn : {}) : (crossAccountRequestIn || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Get a cross account request\n         * @param {string} uuid ID of cross account request to get\n         * @param {'user_id' | 'target_org'} [queryBy] Parameter for filtering resource by either a user\\&#39;s ID, or a client\\&#39;s org. The default value is target_org.\n         * @param {string} [account] Parameter for filtering resource by an account number. Value can be a comma-separated list of ids. To be used in tandem with ?query_by&#x3D;user_id to further filter a user\\&#39;s requests by account number.\n         * @param {'true'} [approvedOnly] Parameter for filtering resource which have been approved.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getCrossAccountRequest: function (uuid, queryBy, account, approvedOnly, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling getCrossAccountRequest.');\n                    }\n                    localVarPath = \"/cross-account-requests/{uuid}/\"\n                        .replace(\"{\".concat(\"uuid\", \"}\"), encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (queryBy !== undefined) {\n                        localVarQueryParameter['query_by'] = queryBy;\n                    }\n                    if (account !== undefined) {\n                        localVarQueryParameter['account'] = account;\n                    }\n                    if (approvedOnly !== undefined) {\n                        localVarQueryParameter['approved_only'] = approvedOnly;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * By default, responses are sorted in ascending order by created_at\n         * @summary List the cross account requests for a user or account\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {'user_id' | 'target_org'} [queryBy] Parameter for filtering resource by either a user\\&#39;s ID, or a client\\&#39;s org. The default value is target_org.\n         * @param {string} [account] Parameter for filtering resource by an account number. Value can be a comma-separated list of ids. To be used in tandem with ?query_by&#x3D;user_id to further filter a user\\&#39;s requests by account number.\n         * @param {string} [orgId] Parameter for filtering resource by an org id. Value can be a comma-separated list of ids. To be used in tandem with ?query_by&#x3D;user_id to further filter a user\\&#39;s requests by org id.\n         * @param {'true'} [approvedOnly] Parameter for filtering resource which have been approved.\n         * @param {'pending' | 'approved' | 'denied' | 'cancelled' | 'expired'} [status] Parameter for filtering resource based on status.\n         * @param {'request_id' | 'start_date' | 'end_date' | 'created' | 'modified' | 'status'} [orderBy] Parameter for ordering by field. For inverse ordering, use \\&#39;-\\&#39;, e.g. ?order_by&#x3D;-start_date.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listCrossAccountRequests: function (limit, offset, queryBy, account, orgId, approvedOnly, status, orderBy, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/cross-account-requests/\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (queryBy !== undefined) {\n                        localVarQueryParameter['query_by'] = queryBy;\n                    }\n                    if (account !== undefined) {\n                        localVarQueryParameter['account'] = account;\n                    }\n                    if (orgId !== undefined) {\n                        localVarQueryParameter['org_id'] = orgId;\n                    }\n                    if (approvedOnly !== undefined) {\n                        localVarQueryParameter['approved_only'] = approvedOnly;\n                    }\n                    if (status !== undefined) {\n                        localVarQueryParameter['status'] = status;\n                    }\n                    if (orderBy !== undefined) {\n                        localVarQueryParameter['order_by'] = orderBy;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Patch the start_date/end_date/roles of an existing request. Could be used by TAM requestor to cancel request or target account admin to approve/deny request.\n         * @summary Patch a cross account request\n         * @param {string} uuid ID of cross account request to get\n         * @param {CrossAccountRequestPatch} crossAccountRequestPatch Updates to CrossAccountRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        patchCrossAccountRequest: function (uuid, crossAccountRequestPatch, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling patchCrossAccountRequest.');\n                    }\n                    // verify required parameter 'crossAccountRequestPatch' is not null or undefined\n                    if (crossAccountRequestPatch === null || crossAccountRequestPatch === undefined) {\n                        throw new base_1.RequiredError('crossAccountRequestPatch', 'Required parameter crossAccountRequestPatch was null or undefined when calling patchCrossAccountRequest.');\n                    }\n                    localVarPath = \"/cross-account-requests/{uuid}/\"\n                        .replace(\"{\".concat(\"uuid\", \"}\"), encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PATCH' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof crossAccountRequestPatch !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(crossAccountRequestPatch !== undefined ? crossAccountRequestPatch : {}) : (crossAccountRequestPatch || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * For TAM requestor to update the start_date/end_date/roles of an existing cross account request.\n         * @summary Update a cross account request\n         * @param {string} uuid ID of cross account request to get\n         * @param {CrossAccountRequestUpdateIn} crossAccountRequestUpdateIn Updates to CrossAccountRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        putCrossAccountRequest: function (uuid, crossAccountRequestUpdateIn, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling putCrossAccountRequest.');\n                    }\n                    // verify required parameter 'crossAccountRequestUpdateIn' is not null or undefined\n                    if (crossAccountRequestUpdateIn === null || crossAccountRequestUpdateIn === undefined) {\n                        throw new base_1.RequiredError('crossAccountRequestUpdateIn', 'Required parameter crossAccountRequestUpdateIn was null or undefined when calling putCrossAccountRequest.');\n                    }\n                    localVarPath = \"/cross-account-requests/{uuid}/\"\n                        .replace(\"{\".concat(\"uuid\", \"}\"), encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PUT' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof crossAccountRequestUpdateIn !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(crossAccountRequestUpdateIn !== undefined ? crossAccountRequestUpdateIn : {}) : (crossAccountRequestUpdateIn || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\nexports.CrossAccountRequestApiAxiosParamCreator = CrossAccountRequestApiAxiosParamCreator;\n/**\n * CrossAccountRequestApi - functional programming interface\n * @export\n */\nvar CrossAccountRequestApiFp = function (configuration) {\n    return {\n        /**\n         *\n         * @summary Create a cross account request\n         * @param {CrossAccountRequestIn} crossAccountRequestIn CrossAccountRequest to create\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createCrossAccountRequests: function (crossAccountRequestIn, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.CrossAccountRequestApiAxiosParamCreator)(configuration).createCrossAccountRequests(crossAccountRequestIn, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Get a cross account request\n         * @param {string} uuid ID of cross account request to get\n         * @param {'user_id' | 'target_org'} [queryBy] Parameter for filtering resource by either a user\\&#39;s ID, or a client\\&#39;s org. The default value is target_org.\n         * @param {string} [account] Parameter for filtering resource by an account number. Value can be a comma-separated list of ids. To be used in tandem with ?query_by&#x3D;user_id to further filter a user\\&#39;s requests by account number.\n         * @param {'true'} [approvedOnly] Parameter for filtering resource which have been approved.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getCrossAccountRequest: function (uuid, queryBy, account, approvedOnly, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.CrossAccountRequestApiAxiosParamCreator)(configuration).getCrossAccountRequest(uuid, queryBy, account, approvedOnly, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * By default, responses are sorted in ascending order by created_at\n         * @summary List the cross account requests for a user or account\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {'user_id' | 'target_org'} [queryBy] Parameter for filtering resource by either a user\\&#39;s ID, or a client\\&#39;s org. The default value is target_org.\n         * @param {string} [account] Parameter for filtering resource by an account number. Value can be a comma-separated list of ids. To be used in tandem with ?query_by&#x3D;user_id to further filter a user\\&#39;s requests by account number.\n         * @param {string} [orgId] Parameter for filtering resource by an org id. Value can be a comma-separated list of ids. To be used in tandem with ?query_by&#x3D;user_id to further filter a user\\&#39;s requests by org id.\n         * @param {'true'} [approvedOnly] Parameter for filtering resource which have been approved.\n         * @param {'pending' | 'approved' | 'denied' | 'cancelled' | 'expired'} [status] Parameter for filtering resource based on status.\n         * @param {'request_id' | 'start_date' | 'end_date' | 'created' | 'modified' | 'status'} [orderBy] Parameter for ordering by field. For inverse ordering, use \\&#39;-\\&#39;, e.g. ?order_by&#x3D;-start_date.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listCrossAccountRequests: function (limit, offset, queryBy, account, orgId, approvedOnly, status, orderBy, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.CrossAccountRequestApiAxiosParamCreator)(configuration).listCrossAccountRequests(limit, offset, queryBy, account, orgId, approvedOnly, status, orderBy, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Patch the start_date/end_date/roles of an existing request. Could be used by TAM requestor to cancel request or target account admin to approve/deny request.\n         * @summary Patch a cross account request\n         * @param {string} uuid ID of cross account request to get\n         * @param {CrossAccountRequestPatch} crossAccountRequestPatch Updates to CrossAccountRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        patchCrossAccountRequest: function (uuid, crossAccountRequestPatch, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.CrossAccountRequestApiAxiosParamCreator)(configuration).patchCrossAccountRequest(uuid, crossAccountRequestPatch, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * For TAM requestor to update the start_date/end_date/roles of an existing cross account request.\n         * @summary Update a cross account request\n         * @param {string} uuid ID of cross account request to get\n         * @param {CrossAccountRequestUpdateIn} crossAccountRequestUpdateIn Updates to CrossAccountRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        putCrossAccountRequest: function (uuid, crossAccountRequestUpdateIn, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.CrossAccountRequestApiAxiosParamCreator)(configuration).putCrossAccountRequest(uuid, crossAccountRequestUpdateIn, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\nexports.CrossAccountRequestApiFp = CrossAccountRequestApiFp;\n/**\n * CrossAccountRequestApi - factory interface\n * @export\n */\nvar CrossAccountRequestApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         *\n         * @summary Create a cross account request\n         * @param {CrossAccountRequestIn} crossAccountRequestIn CrossAccountRequest to create\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createCrossAccountRequests: function (crossAccountRequestIn, options) {\n            return (0, exports.CrossAccountRequestApiFp)(configuration).createCrossAccountRequests(crossAccountRequestIn, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Get a cross account request\n         * @param {string} uuid ID of cross account request to get\n         * @param {'user_id' | 'target_org'} [queryBy] Parameter for filtering resource by either a user\\&#39;s ID, or a client\\&#39;s org. The default value is target_org.\n         * @param {string} [account] Parameter for filtering resource by an account number. Value can be a comma-separated list of ids. To be used in tandem with ?query_by&#x3D;user_id to further filter a user\\&#39;s requests by account number.\n         * @param {'true'} [approvedOnly] Parameter for filtering resource which have been approved.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getCrossAccountRequest: function (uuid, queryBy, account, approvedOnly, options) {\n            return (0, exports.CrossAccountRequestApiFp)(configuration).getCrossAccountRequest(uuid, queryBy, account, approvedOnly, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * By default, responses are sorted in ascending order by created_at\n         * @summary List the cross account requests for a user or account\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {'user_id' | 'target_org'} [queryBy] Parameter for filtering resource by either a user\\&#39;s ID, or a client\\&#39;s org. The default value is target_org.\n         * @param {string} [account] Parameter for filtering resource by an account number. Value can be a comma-separated list of ids. To be used in tandem with ?query_by&#x3D;user_id to further filter a user\\&#39;s requests by account number.\n         * @param {string} [orgId] Parameter for filtering resource by an org id. Value can be a comma-separated list of ids. To be used in tandem with ?query_by&#x3D;user_id to further filter a user\\&#39;s requests by org id.\n         * @param {'true'} [approvedOnly] Parameter for filtering resource which have been approved.\n         * @param {'pending' | 'approved' | 'denied' | 'cancelled' | 'expired'} [status] Parameter for filtering resource based on status.\n         * @param {'request_id' | 'start_date' | 'end_date' | 'created' | 'modified' | 'status'} [orderBy] Parameter for ordering by field. For inverse ordering, use \\&#39;-\\&#39;, e.g. ?order_by&#x3D;-start_date.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listCrossAccountRequests: function (limit, offset, queryBy, account, orgId, approvedOnly, status, orderBy, options) {\n            return (0, exports.CrossAccountRequestApiFp)(configuration).listCrossAccountRequests(limit, offset, queryBy, account, orgId, approvedOnly, status, orderBy, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Patch the start_date/end_date/roles of an existing request. Could be used by TAM requestor to cancel request or target account admin to approve/deny request.\n         * @summary Patch a cross account request\n         * @param {string} uuid ID of cross account request to get\n         * @param {CrossAccountRequestPatch} crossAccountRequestPatch Updates to CrossAccountRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        patchCrossAccountRequest: function (uuid, crossAccountRequestPatch, options) {\n            return (0, exports.CrossAccountRequestApiFp)(configuration).patchCrossAccountRequest(uuid, crossAccountRequestPatch, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * For TAM requestor to update the start_date/end_date/roles of an existing cross account request.\n         * @summary Update a cross account request\n         * @param {string} uuid ID of cross account request to get\n         * @param {CrossAccountRequestUpdateIn} crossAccountRequestUpdateIn Updates to CrossAccountRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        putCrossAccountRequest: function (uuid, crossAccountRequestUpdateIn, options) {\n            return (0, exports.CrossAccountRequestApiFp)(configuration).putCrossAccountRequest(uuid, crossAccountRequestUpdateIn, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\nexports.CrossAccountRequestApiFactory = CrossAccountRequestApiFactory;\n/**\n * CrossAccountRequestApi - object-oriented interface\n * @export\n * @class CrossAccountRequestApi\n * @extends {BaseAPI}\n */\nvar CrossAccountRequestApi = /** @class */ (function (_super) {\n    __extends(CrossAccountRequestApi, _super);\n    function CrossAccountRequestApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     *\n     * @summary Create a cross account request\n     * @param {CrossAccountRequestIn} crossAccountRequestIn CrossAccountRequest to create\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CrossAccountRequestApi\n     */\n    CrossAccountRequestApi.prototype.createCrossAccountRequests = function (crossAccountRequestIn, options) {\n        var _this = this;\n        return (0, exports.CrossAccountRequestApiFp)(this.configuration).createCrossAccountRequests(crossAccountRequestIn, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Get a cross account request\n     * @param {string} uuid ID of cross account request to get\n     * @param {'user_id' | 'target_org'} [queryBy] Parameter for filtering resource by either a user\\&#39;s ID, or a client\\&#39;s org. The default value is target_org.\n     * @param {string} [account] Parameter for filtering resource by an account number. Value can be a comma-separated list of ids. To be used in tandem with ?query_by&#x3D;user_id to further filter a user\\&#39;s requests by account number.\n     * @param {'true'} [approvedOnly] Parameter for filtering resource which have been approved.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CrossAccountRequestApi\n     */\n    CrossAccountRequestApi.prototype.getCrossAccountRequest = function (uuid, queryBy, account, approvedOnly, options) {\n        var _this = this;\n        return (0, exports.CrossAccountRequestApiFp)(this.configuration).getCrossAccountRequest(uuid, queryBy, account, approvedOnly, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * By default, responses are sorted in ascending order by created_at\n     * @summary List the cross account requests for a user or account\n     * @param {number} [limit] Parameter for selecting the amount of data returned.\n     * @param {number} [offset] Parameter for selecting the offset of data.\n     * @param {'user_id' | 'target_org'} [queryBy] Parameter for filtering resource by either a user\\&#39;s ID, or a client\\&#39;s org. The default value is target_org.\n     * @param {string} [account] Parameter for filtering resource by an account number. Value can be a comma-separated list of ids. To be used in tandem with ?query_by&#x3D;user_id to further filter a user\\&#39;s requests by account number.\n     * @param {string} [orgId] Parameter for filtering resource by an org id. Value can be a comma-separated list of ids. To be used in tandem with ?query_by&#x3D;user_id to further filter a user\\&#39;s requests by org id.\n     * @param {'true'} [approvedOnly] Parameter for filtering resource which have been approved.\n     * @param {'pending' | 'approved' | 'denied' | 'cancelled' | 'expired'} [status] Parameter for filtering resource based on status.\n     * @param {'request_id' | 'start_date' | 'end_date' | 'created' | 'modified' | 'status'} [orderBy] Parameter for ordering by field. For inverse ordering, use \\&#39;-\\&#39;, e.g. ?order_by&#x3D;-start_date.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CrossAccountRequestApi\n     */\n    CrossAccountRequestApi.prototype.listCrossAccountRequests = function (limit, offset, queryBy, account, orgId, approvedOnly, status, orderBy, options) {\n        var _this = this;\n        return (0, exports.CrossAccountRequestApiFp)(this.configuration).listCrossAccountRequests(limit, offset, queryBy, account, orgId, approvedOnly, status, orderBy, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Patch the start_date/end_date/roles of an existing request. Could be used by TAM requestor to cancel request or target account admin to approve/deny request.\n     * @summary Patch a cross account request\n     * @param {string} uuid ID of cross account request to get\n     * @param {CrossAccountRequestPatch} crossAccountRequestPatch Updates to CrossAccountRequest\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CrossAccountRequestApi\n     */\n    CrossAccountRequestApi.prototype.patchCrossAccountRequest = function (uuid, crossAccountRequestPatch, options) {\n        var _this = this;\n        return (0, exports.CrossAccountRequestApiFp)(this.configuration).patchCrossAccountRequest(uuid, crossAccountRequestPatch, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * For TAM requestor to update the start_date/end_date/roles of an existing cross account request.\n     * @summary Update a cross account request\n     * @param {string} uuid ID of cross account request to get\n     * @param {CrossAccountRequestUpdateIn} crossAccountRequestUpdateIn Updates to CrossAccountRequest\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CrossAccountRequestApi\n     */\n    CrossAccountRequestApi.prototype.putCrossAccountRequest = function (uuid, crossAccountRequestUpdateIn, options) {\n        var _this = this;\n        return (0, exports.CrossAccountRequestApiFp)(this.configuration).putCrossAccountRequest(uuid, crossAccountRequestUpdateIn, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return CrossAccountRequestApi;\n}(base_1.BaseAPI));\nexports.CrossAccountRequestApi = CrossAccountRequestApi;\n/**\n * GroupApi - axios parameter creator\n * @export\n */\nvar GroupApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         *\n         * @summary Add a principal to a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {GroupPrincipalIn} groupPrincipalIn Principal to add to a group\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addPrincipalToGroup: function (uuid, groupPrincipalIn, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling addPrincipalToGroup.');\n                    }\n                    // verify required parameter 'groupPrincipalIn' is not null or undefined\n                    if (groupPrincipalIn === null || groupPrincipalIn === undefined) {\n                        throw new base_1.RequiredError('groupPrincipalIn', 'Required parameter groupPrincipalIn was null or undefined when calling addPrincipalToGroup.');\n                    }\n                    localVarPath = \"/groups/{uuid}/principals/\"\n                        .replace(\"{\".concat(\"uuid\", \"}\"), encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof groupPrincipalIn !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(groupPrincipalIn !== undefined ? groupPrincipalIn : {}) : (groupPrincipalIn || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Add a role to a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {GroupRoleIn} groupRoleIn Role to add to a group\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addRoleToGroup: function (uuid, groupRoleIn, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling addRoleToGroup.');\n                    }\n                    // verify required parameter 'groupRoleIn' is not null or undefined\n                    if (groupRoleIn === null || groupRoleIn === undefined) {\n                        throw new base_1.RequiredError('groupRoleIn', 'Required parameter groupRoleIn was null or undefined when calling addRoleToGroup.');\n                    }\n                    localVarPath = \"/groups/{uuid}/roles/\"\n                        .replace(\"{\".concat(\"uuid\", \"}\"), encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof groupRoleIn !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(groupRoleIn !== undefined ? groupRoleIn : {}) : (groupRoleIn || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Create a group in a tenant\n         * @param {Group} group Group to create in tenant\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createGroup: function (group, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'group' is not null or undefined\n                    if (group === null || group === undefined) {\n                        throw new base_1.RequiredError('group', 'Required parameter group was null or undefined when calling createGroup.');\n                    }\n                    localVarPath = \"/groups/\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof group !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(group !== undefined ? group : {}) : (group || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Delete a group in the tenant\n         * @param {string} uuid ID of group to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteGroup: function (uuid, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling deleteGroup.');\n                    }\n                    localVarPath = \"/groups/{uuid}/\"\n                        .replace(\"{\".concat(\"uuid\", \"}\"), encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Remove a principal from a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {string} usernames A comma separated list of usernames for principals to remove from the group\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deletePrincipalFromGroup: function (uuid, usernames, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling deletePrincipalFromGroup.');\n                    }\n                    // verify required parameter 'usernames' is not null or undefined\n                    if (usernames === null || usernames === undefined) {\n                        throw new base_1.RequiredError('usernames', 'Required parameter usernames was null or undefined when calling deletePrincipalFromGroup.');\n                    }\n                    localVarPath = \"/groups/{uuid}/principals/\"\n                        .replace(\"{\".concat(\"uuid\", \"}\"), encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (usernames !== undefined) {\n                        localVarQueryParameter['usernames'] = usernames;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Remove a role from a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {string} roles A comma separated list of role UUIDs for roles to remove from the group\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteRoleFromGroup: function (uuid, roles, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling deleteRoleFromGroup.');\n                    }\n                    // verify required parameter 'roles' is not null or undefined\n                    if (roles === null || roles === undefined) {\n                        throw new base_1.RequiredError('roles', 'Required parameter roles was null or undefined when calling deleteRoleFromGroup.');\n                    }\n                    localVarPath = \"/groups/{uuid}/roles/\"\n                        .replace(\"{\".concat(\"uuid\", \"}\"), encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (roles !== undefined) {\n                        localVarQueryParameter['roles'] = roles;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Get a group in the tenant\n         * @param {string} uuid ID of group to get\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getGroup: function (uuid, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling getGroup.');\n                    }\n                    localVarPath = \"/groups/{uuid}/\"\n                        .replace(\"{\".concat(\"uuid\", \"}\"), encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * By default, responses are sorted in ascending order by username\n         * @summary Get a list of principals from a group in the tenant\n         * @param {string} uuid ID of group from which to get principals\n         * @param {string} [principalUsername] Parameter for filtering group principals by principal &#x60;username&#x60; using string contains search.\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {'username'} [orderBy] Parameter for ordering principals by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-username\n         * @param {boolean} [usernameOnly] Parameter for optionally returning only usernames for principals, bypassing a call to IT.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPrincipalsFromGroup: function (uuid, principalUsername, limit, offset, orderBy, usernameOnly, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling getPrincipalsFromGroup.');\n                    }\n                    localVarPath = \"/groups/{uuid}/principals/\"\n                        .replace(\"{\".concat(\"uuid\", \"}\"), encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (principalUsername !== undefined) {\n                        localVarQueryParameter['principal_username'] = principalUsername;\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (orderBy !== undefined) {\n                        localVarQueryParameter['order_by'] = orderBy;\n                    }\n                    if (usernameOnly !== undefined) {\n                        localVarQueryParameter['username_only'] = usernameOnly;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * By default, responses are sorted in ascending order by group name\n         * @summary List the groups for a tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [name] Parameter for filtering resource by name using string contains search.\n         * @param {'partial' | 'exact'} [nameMatch] Parameter for specifying the matching criteria for an object\\&#39;s name or display_name.\n         * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n         * @param {string} [username] A username for a principal to filter for groups\n         * @param {string} [excludeUsername] A username for a principal to filter for groups where principal is not a member and can be added manually\n         * @param {Array<string>} [uuid] A list of UUIDs to filter listed groups.\n         * @param {Array<string>} [roleNames] List of role name to filter for groups. It is exact match but case-insensitive\n         * @param {'all' | 'any'} [roleDiscriminator] Discriminator that works with role_names to indicate matching all/any of the role names\n         * @param {'name' | 'modified' | 'principalCount' | 'policyCount'} [orderBy] Parameter for ordering groups by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n         * @param {boolean} [platformDefault] An optional flag to return either platform default or non-platform default groups.\n         * @param {boolean} [adminDefault] An optional flag to return either admin default or non-admin default groups.\n         * @param {boolean} [system] An optional flag to return either system or non-system groups.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listGroups: function (limit, offset, name, nameMatch, scope, username, excludeUsername, uuid, roleNames, roleDiscriminator, orderBy, platformDefault, adminDefault, system, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/groups/\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (name !== undefined) {\n                        localVarQueryParameter['name'] = name;\n                    }\n                    if (nameMatch !== undefined) {\n                        localVarQueryParameter['name_match'] = nameMatch;\n                    }\n                    if (scope !== undefined) {\n                        localVarQueryParameter['scope'] = scope;\n                    }\n                    if (username !== undefined) {\n                        localVarQueryParameter['username'] = username;\n                    }\n                    if (excludeUsername !== undefined) {\n                        localVarQueryParameter['exclude_username'] = excludeUsername;\n                    }\n                    if (uuid) {\n                        localVarQueryParameter['uuid'] = uuid.join(base_1.COLLECTION_FORMATS.csv);\n                    }\n                    if (roleNames) {\n                        localVarQueryParameter['role_names'] = roleNames.join(base_1.COLLECTION_FORMATS.csv);\n                    }\n                    if (roleDiscriminator !== undefined) {\n                        localVarQueryParameter['role_discriminator'] = roleDiscriminator;\n                    }\n                    if (orderBy !== undefined) {\n                        localVarQueryParameter['order_by'] = orderBy;\n                    }\n                    if (platformDefault !== undefined) {\n                        localVarQueryParameter['platform_default'] = platformDefault;\n                    }\n                    if (adminDefault !== undefined) {\n                        localVarQueryParameter['admin_default'] = adminDefault;\n                    }\n                    if (system !== undefined) {\n                        localVarQueryParameter['system'] = system;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * By default, responses are sorted in ascending order by role name\n         * @summary List the roles for a group in the tenant\n         * @param {string} uuid ID of group\n         * @param {boolean} [exclude] If this is set to true, the result would be roles excluding the ones in the group\n         * @param {string} [roleName] Parameter for filtering group roles by role &#x60;name&#x60; using string contains search.\n         * @param {string} [roleDisplayName] Parameter for filtering group roles by role &#x60;display_name&#x60; using string contains search.\n         * @param {string} [roleDescription] Parameter for filtering group roles by role &#x60;description&#x60; using string contains search.\n         * @param {boolean} [roleSystem] Parameter for filtering group roles by system flag.\n         * @param {string} [roleExternalTenant] Parameter for filtering group roles by role &#x60;external_tenant&#x60; using string search.\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {'name' | 'display_name' | 'modified' | 'policyCount'} [orderBy] Parameter for ordering roles by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listRolesForGroup: function (uuid, exclude, roleName, roleDisplayName, roleDescription, roleSystem, roleExternalTenant, limit, offset, orderBy, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling listRolesForGroup.');\n                    }\n                    localVarPath = \"/groups/{uuid}/roles/\"\n                        .replace(\"{\".concat(\"uuid\", \"}\"), encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (exclude !== undefined) {\n                        localVarQueryParameter['exclude'] = exclude;\n                    }\n                    if (roleName !== undefined) {\n                        localVarQueryParameter['role_name'] = roleName;\n                    }\n                    if (roleDisplayName !== undefined) {\n                        localVarQueryParameter['role_display_name'] = roleDisplayName;\n                    }\n                    if (roleDescription !== undefined) {\n                        localVarQueryParameter['role_description'] = roleDescription;\n                    }\n                    if (roleSystem !== undefined) {\n                        localVarQueryParameter['role_system'] = roleSystem;\n                    }\n                    if (roleExternalTenant !== undefined) {\n                        localVarQueryParameter['role_external_tenant'] = roleExternalTenant;\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (orderBy !== undefined) {\n                        localVarQueryParameter['order_by'] = orderBy;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Update a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {Group} group Group to update in tenant\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateGroup: function (uuid, group, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling updateGroup.');\n                    }\n                    // verify required parameter 'group' is not null or undefined\n                    if (group === null || group === undefined) {\n                        throw new base_1.RequiredError('group', 'Required parameter group was null or undefined when calling updateGroup.');\n                    }\n                    localVarPath = \"/groups/{uuid}/\"\n                        .replace(\"{\".concat(\"uuid\", \"}\"), encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PUT' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof group !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(group !== undefined ? group : {}) : (group || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\nexports.GroupApiAxiosParamCreator = GroupApiAxiosParamCreator;\n/**\n * GroupApi - functional programming interface\n * @export\n */\nvar GroupApiFp = function (configuration) {\n    return {\n        /**\n         *\n         * @summary Add a principal to a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {GroupPrincipalIn} groupPrincipalIn Principal to add to a group\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addPrincipalToGroup: function (uuid, groupPrincipalIn, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.GroupApiAxiosParamCreator)(configuration).addPrincipalToGroup(uuid, groupPrincipalIn, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Add a role to a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {GroupRoleIn} groupRoleIn Role to add to a group\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addRoleToGroup: function (uuid, groupRoleIn, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.GroupApiAxiosParamCreator)(configuration).addRoleToGroup(uuid, groupRoleIn, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Create a group in a tenant\n         * @param {Group} group Group to create in tenant\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createGroup: function (group, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.GroupApiAxiosParamCreator)(configuration).createGroup(group, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Delete a group in the tenant\n         * @param {string} uuid ID of group to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteGroup: function (uuid, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.GroupApiAxiosParamCreator)(configuration).deleteGroup(uuid, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Remove a principal from a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {string} usernames A comma separated list of usernames for principals to remove from the group\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deletePrincipalFromGroup: function (uuid, usernames, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.GroupApiAxiosParamCreator)(configuration).deletePrincipalFromGroup(uuid, usernames, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Remove a role from a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {string} roles A comma separated list of role UUIDs for roles to remove from the group\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteRoleFromGroup: function (uuid, roles, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.GroupApiAxiosParamCreator)(configuration).deleteRoleFromGroup(uuid, roles, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Get a group in the tenant\n         * @param {string} uuid ID of group to get\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getGroup: function (uuid, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.GroupApiAxiosParamCreator)(configuration).getGroup(uuid, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * By default, responses are sorted in ascending order by username\n         * @summary Get a list of principals from a group in the tenant\n         * @param {string} uuid ID of group from which to get principals\n         * @param {string} [principalUsername] Parameter for filtering group principals by principal &#x60;username&#x60; using string contains search.\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {'username'} [orderBy] Parameter for ordering principals by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-username\n         * @param {boolean} [usernameOnly] Parameter for optionally returning only usernames for principals, bypassing a call to IT.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPrincipalsFromGroup: function (uuid, principalUsername, limit, offset, orderBy, usernameOnly, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.GroupApiAxiosParamCreator)(configuration).getPrincipalsFromGroup(uuid, principalUsername, limit, offset, orderBy, usernameOnly, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * By default, responses are sorted in ascending order by group name\n         * @summary List the groups for a tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [name] Parameter for filtering resource by name using string contains search.\n         * @param {'partial' | 'exact'} [nameMatch] Parameter for specifying the matching criteria for an object\\&#39;s name or display_name.\n         * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n         * @param {string} [username] A username for a principal to filter for groups\n         * @param {string} [excludeUsername] A username for a principal to filter for groups where principal is not a member and can be added manually\n         * @param {Array<string>} [uuid] A list of UUIDs to filter listed groups.\n         * @param {Array<string>} [roleNames] List of role name to filter for groups. It is exact match but case-insensitive\n         * @param {'all' | 'any'} [roleDiscriminator] Discriminator that works with role_names to indicate matching all/any of the role names\n         * @param {'name' | 'modified' | 'principalCount' | 'policyCount'} [orderBy] Parameter for ordering groups by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n         * @param {boolean} [platformDefault] An optional flag to return either platform default or non-platform default groups.\n         * @param {boolean} [adminDefault] An optional flag to return either admin default or non-admin default groups.\n         * @param {boolean} [system] An optional flag to return either system or non-system groups.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listGroups: function (limit, offset, name, nameMatch, scope, username, excludeUsername, uuid, roleNames, roleDiscriminator, orderBy, platformDefault, adminDefault, system, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.GroupApiAxiosParamCreator)(configuration).listGroups(limit, offset, name, nameMatch, scope, username, excludeUsername, uuid, roleNames, roleDiscriminator, orderBy, platformDefault, adminDefault, system, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * By default, responses are sorted in ascending order by role name\n         * @summary List the roles for a group in the tenant\n         * @param {string} uuid ID of group\n         * @param {boolean} [exclude] If this is set to true, the result would be roles excluding the ones in the group\n         * @param {string} [roleName] Parameter for filtering group roles by role &#x60;name&#x60; using string contains search.\n         * @param {string} [roleDisplayName] Parameter for filtering group roles by role &#x60;display_name&#x60; using string contains search.\n         * @param {string} [roleDescription] Parameter for filtering group roles by role &#x60;description&#x60; using string contains search.\n         * @param {boolean} [roleSystem] Parameter for filtering group roles by system flag.\n         * @param {string} [roleExternalTenant] Parameter for filtering group roles by role &#x60;external_tenant&#x60; using string search.\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {'name' | 'display_name' | 'modified' | 'policyCount'} [orderBy] Parameter for ordering roles by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listRolesForGroup: function (uuid, exclude, roleName, roleDisplayName, roleDescription, roleSystem, roleExternalTenant, limit, offset, orderBy, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.GroupApiAxiosParamCreator)(configuration).listRolesForGroup(uuid, exclude, roleName, roleDisplayName, roleDescription, roleSystem, roleExternalTenant, limit, offset, orderBy, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Update a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {Group} group Group to update in tenant\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateGroup: function (uuid, group, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.GroupApiAxiosParamCreator)(configuration).updateGroup(uuid, group, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\nexports.GroupApiFp = GroupApiFp;\n/**\n * GroupApi - factory interface\n * @export\n */\nvar GroupApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         *\n         * @summary Add a principal to a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {GroupPrincipalIn} groupPrincipalIn Principal to add to a group\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addPrincipalToGroup: function (uuid, groupPrincipalIn, options) {\n            return (0, exports.GroupApiFp)(configuration).addPrincipalToGroup(uuid, groupPrincipalIn, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Add a role to a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {GroupRoleIn} groupRoleIn Role to add to a group\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addRoleToGroup: function (uuid, groupRoleIn, options) {\n            return (0, exports.GroupApiFp)(configuration).addRoleToGroup(uuid, groupRoleIn, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Create a group in a tenant\n         * @param {Group} group Group to create in tenant\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createGroup: function (group, options) {\n            return (0, exports.GroupApiFp)(configuration).createGroup(group, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Delete a group in the tenant\n         * @param {string} uuid ID of group to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteGroup: function (uuid, options) {\n            return (0, exports.GroupApiFp)(configuration).deleteGroup(uuid, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Remove a principal from a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {string} usernames A comma separated list of usernames for principals to remove from the group\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deletePrincipalFromGroup: function (uuid, usernames, options) {\n            return (0, exports.GroupApiFp)(configuration).deletePrincipalFromGroup(uuid, usernames, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Remove a role from a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {string} roles A comma separated list of role UUIDs for roles to remove from the group\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteRoleFromGroup: function (uuid, roles, options) {\n            return (0, exports.GroupApiFp)(configuration).deleteRoleFromGroup(uuid, roles, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Get a group in the tenant\n         * @param {string} uuid ID of group to get\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getGroup: function (uuid, options) {\n            return (0, exports.GroupApiFp)(configuration).getGroup(uuid, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * By default, responses are sorted in ascending order by username\n         * @summary Get a list of principals from a group in the tenant\n         * @param {string} uuid ID of group from which to get principals\n         * @param {string} [principalUsername] Parameter for filtering group principals by principal &#x60;username&#x60; using string contains search.\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {'username'} [orderBy] Parameter for ordering principals by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-username\n         * @param {boolean} [usernameOnly] Parameter for optionally returning only usernames for principals, bypassing a call to IT.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPrincipalsFromGroup: function (uuid, principalUsername, limit, offset, orderBy, usernameOnly, options) {\n            return (0, exports.GroupApiFp)(configuration).getPrincipalsFromGroup(uuid, principalUsername, limit, offset, orderBy, usernameOnly, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * By default, responses are sorted in ascending order by group name\n         * @summary List the groups for a tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [name] Parameter for filtering resource by name using string contains search.\n         * @param {'partial' | 'exact'} [nameMatch] Parameter for specifying the matching criteria for an object\\&#39;s name or display_name.\n         * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n         * @param {string} [username] A username for a principal to filter for groups\n         * @param {string} [excludeUsername] A username for a principal to filter for groups where principal is not a member and can be added manually\n         * @param {Array<string>} [uuid] A list of UUIDs to filter listed groups.\n         * @param {Array<string>} [roleNames] List of role name to filter for groups. It is exact match but case-insensitive\n         * @param {'all' | 'any'} [roleDiscriminator] Discriminator that works with role_names to indicate matching all/any of the role names\n         * @param {'name' | 'modified' | 'principalCount' | 'policyCount'} [orderBy] Parameter for ordering groups by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n         * @param {boolean} [platformDefault] An optional flag to return either platform default or non-platform default groups.\n         * @param {boolean} [adminDefault] An optional flag to return either admin default or non-admin default groups.\n         * @param {boolean} [system] An optional flag to return either system or non-system groups.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listGroups: function (limit, offset, name, nameMatch, scope, username, excludeUsername, uuid, roleNames, roleDiscriminator, orderBy, platformDefault, adminDefault, system, options) {\n            return (0, exports.GroupApiFp)(configuration).listGroups(limit, offset, name, nameMatch, scope, username, excludeUsername, uuid, roleNames, roleDiscriminator, orderBy, platformDefault, adminDefault, system, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * By default, responses are sorted in ascending order by role name\n         * @summary List the roles for a group in the tenant\n         * @param {string} uuid ID of group\n         * @param {boolean} [exclude] If this is set to true, the result would be roles excluding the ones in the group\n         * @param {string} [roleName] Parameter for filtering group roles by role &#x60;name&#x60; using string contains search.\n         * @param {string} [roleDisplayName] Parameter for filtering group roles by role &#x60;display_name&#x60; using string contains search.\n         * @param {string} [roleDescription] Parameter for filtering group roles by role &#x60;description&#x60; using string contains search.\n         * @param {boolean} [roleSystem] Parameter for filtering group roles by system flag.\n         * @param {string} [roleExternalTenant] Parameter for filtering group roles by role &#x60;external_tenant&#x60; using string search.\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {'name' | 'display_name' | 'modified' | 'policyCount'} [orderBy] Parameter for ordering roles by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listRolesForGroup: function (uuid, exclude, roleName, roleDisplayName, roleDescription, roleSystem, roleExternalTenant, limit, offset, orderBy, options) {\n            return (0, exports.GroupApiFp)(configuration).listRolesForGroup(uuid, exclude, roleName, roleDisplayName, roleDescription, roleSystem, roleExternalTenant, limit, offset, orderBy, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Update a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {Group} group Group to update in tenant\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateGroup: function (uuid, group, options) {\n            return (0, exports.GroupApiFp)(configuration).updateGroup(uuid, group, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\nexports.GroupApiFactory = GroupApiFactory;\n/**\n * GroupApi - object-oriented interface\n * @export\n * @class GroupApi\n * @extends {BaseAPI}\n */\nvar GroupApi = /** @class */ (function (_super) {\n    __extends(GroupApi, _super);\n    function GroupApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     *\n     * @summary Add a principal to a group in the tenant\n     * @param {string} uuid ID of group to update\n     * @param {GroupPrincipalIn} groupPrincipalIn Principal to add to a group\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    GroupApi.prototype.addPrincipalToGroup = function (uuid, groupPrincipalIn, options) {\n        var _this = this;\n        return (0, exports.GroupApiFp)(this.configuration).addPrincipalToGroup(uuid, groupPrincipalIn, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Add a role to a group in the tenant\n     * @param {string} uuid ID of group to update\n     * @param {GroupRoleIn} groupRoleIn Role to add to a group\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    GroupApi.prototype.addRoleToGroup = function (uuid, groupRoleIn, options) {\n        var _this = this;\n        return (0, exports.GroupApiFp)(this.configuration).addRoleToGroup(uuid, groupRoleIn, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Create a group in a tenant\n     * @param {Group} group Group to create in tenant\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    GroupApi.prototype.createGroup = function (group, options) {\n        var _this = this;\n        return (0, exports.GroupApiFp)(this.configuration).createGroup(group, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Delete a group in the tenant\n     * @param {string} uuid ID of group to delete\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    GroupApi.prototype.deleteGroup = function (uuid, options) {\n        var _this = this;\n        return (0, exports.GroupApiFp)(this.configuration).deleteGroup(uuid, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Remove a principal from a group in the tenant\n     * @param {string} uuid ID of group to update\n     * @param {string} usernames A comma separated list of usernames for principals to remove from the group\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    GroupApi.prototype.deletePrincipalFromGroup = function (uuid, usernames, options) {\n        var _this = this;\n        return (0, exports.GroupApiFp)(this.configuration).deletePrincipalFromGroup(uuid, usernames, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Remove a role from a group in the tenant\n     * @param {string} uuid ID of group to update\n     * @param {string} roles A comma separated list of role UUIDs for roles to remove from the group\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    GroupApi.prototype.deleteRoleFromGroup = function (uuid, roles, options) {\n        var _this = this;\n        return (0, exports.GroupApiFp)(this.configuration).deleteRoleFromGroup(uuid, roles, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Get a group in the tenant\n     * @param {string} uuid ID of group to get\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    GroupApi.prototype.getGroup = function (uuid, options) {\n        var _this = this;\n        return (0, exports.GroupApiFp)(this.configuration).getGroup(uuid, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * By default, responses are sorted in ascending order by username\n     * @summary Get a list of principals from a group in the tenant\n     * @param {string} uuid ID of group from which to get principals\n     * @param {string} [principalUsername] Parameter for filtering group principals by principal &#x60;username&#x60; using string contains search.\n     * @param {number} [limit] Parameter for selecting the amount of data returned.\n     * @param {number} [offset] Parameter for selecting the offset of data.\n     * @param {'username'} [orderBy] Parameter for ordering principals by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-username\n     * @param {boolean} [usernameOnly] Parameter for optionally returning only usernames for principals, bypassing a call to IT.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    GroupApi.prototype.getPrincipalsFromGroup = function (uuid, principalUsername, limit, offset, orderBy, usernameOnly, options) {\n        var _this = this;\n        return (0, exports.GroupApiFp)(this.configuration).getPrincipalsFromGroup(uuid, principalUsername, limit, offset, orderBy, usernameOnly, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * By default, responses are sorted in ascending order by group name\n     * @summary List the groups for a tenant\n     * @param {number} [limit] Parameter for selecting the amount of data returned.\n     * @param {number} [offset] Parameter for selecting the offset of data.\n     * @param {string} [name] Parameter for filtering resource by name using string contains search.\n     * @param {'partial' | 'exact'} [nameMatch] Parameter for specifying the matching criteria for an object\\&#39;s name or display_name.\n     * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n     * @param {string} [username] A username for a principal to filter for groups\n     * @param {string} [excludeUsername] A username for a principal to filter for groups where principal is not a member and can be added manually\n     * @param {Array<string>} [uuid] A list of UUIDs to filter listed groups.\n     * @param {Array<string>} [roleNames] List of role name to filter for groups. It is exact match but case-insensitive\n     * @param {'all' | 'any'} [roleDiscriminator] Discriminator that works with role_names to indicate matching all/any of the role names\n     * @param {'name' | 'modified' | 'principalCount' | 'policyCount'} [orderBy] Parameter for ordering groups by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n     * @param {boolean} [platformDefault] An optional flag to return either platform default or non-platform default groups.\n     * @param {boolean} [adminDefault] An optional flag to return either admin default or non-admin default groups.\n     * @param {boolean} [system] An optional flag to return either system or non-system groups.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    GroupApi.prototype.listGroups = function (limit, offset, name, nameMatch, scope, username, excludeUsername, uuid, roleNames, roleDiscriminator, orderBy, platformDefault, adminDefault, system, options) {\n        var _this = this;\n        return (0, exports.GroupApiFp)(this.configuration).listGroups(limit, offset, name, nameMatch, scope, username, excludeUsername, uuid, roleNames, roleDiscriminator, orderBy, platformDefault, adminDefault, system, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * By default, responses are sorted in ascending order by role name\n     * @summary List the roles for a group in the tenant\n     * @param {string} uuid ID of group\n     * @param {boolean} [exclude] If this is set to true, the result would be roles excluding the ones in the group\n     * @param {string} [roleName] Parameter for filtering group roles by role &#x60;name&#x60; using string contains search.\n     * @param {string} [roleDisplayName] Parameter for filtering group roles by role &#x60;display_name&#x60; using string contains search.\n     * @param {string} [roleDescription] Parameter for filtering group roles by role &#x60;description&#x60; using string contains search.\n     * @param {boolean} [roleSystem] Parameter for filtering group roles by system flag.\n     * @param {string} [roleExternalTenant] Parameter for filtering group roles by role &#x60;external_tenant&#x60; using string search.\n     * @param {number} [limit] Parameter for selecting the amount of data returned.\n     * @param {number} [offset] Parameter for selecting the offset of data.\n     * @param {'name' | 'display_name' | 'modified' | 'policyCount'} [orderBy] Parameter for ordering roles by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    GroupApi.prototype.listRolesForGroup = function (uuid, exclude, roleName, roleDisplayName, roleDescription, roleSystem, roleExternalTenant, limit, offset, orderBy, options) {\n        var _this = this;\n        return (0, exports.GroupApiFp)(this.configuration).listRolesForGroup(uuid, exclude, roleName, roleDisplayName, roleDescription, roleSystem, roleExternalTenant, limit, offset, orderBy, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Update a group in the tenant\n     * @param {string} uuid ID of group to update\n     * @param {Group} group Group to update in tenant\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    GroupApi.prototype.updateGroup = function (uuid, group, options) {\n        var _this = this;\n        return (0, exports.GroupApiFp)(this.configuration).updateGroup(uuid, group, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return GroupApi;\n}(base_1.BaseAPI));\nexports.GroupApi = GroupApi;\n/**\n * PermissionApi - axios parameter creator\n * @export\n */\nvar PermissionApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * By default, options of application is returned. And could be resource_type or verb on demand.\n         * @summary List the available options for fields of permissions for a tenant\n         * @param {'application' | 'resource_type' | 'verb'} field specify which fields of permission to display\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [application] Filter returned options based on application. You may also use a comma-separated list to filter on multiple applications.\n         * @param {string} [resourceType] Filter returned options based on resource_type. You may also use a comma-separated list to filter on multiple resource_types.\n         * @param {string} [verb] Filter returned options based on verb. You may also use a comma-separated list to filter on multiple verbs.\n         * @param {'true' | 'false'} [excludeGlobals] If set to \\&#39;true\\&#39;, this will exclude any permission option with a global allowance on the supplied \\&#39;?field&#x3D;\\&#39; value of \\&#39;application\\&#39;, \\&#39;resource_type\\&#39; or \\&#39;verb\\&#39;. The default is \\&#39;false\\&#39;.\n         * @param {'true' | 'false'} [allowedOnly] If set to \\&#39;true\\&#39;, this will exclude any permission with a role where the \\&#39;application\\&#39; is not in the role create allow list.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPermissionOptions: function (field, limit, offset, application, resourceType, verb, excludeGlobals, allowedOnly, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'field' is not null or undefined\n                    if (field === null || field === undefined) {\n                        throw new base_1.RequiredError('field', 'Required parameter field was null or undefined when calling listPermissionOptions.');\n                    }\n                    localVarPath = \"/permissions/options/\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (field !== undefined) {\n                        localVarQueryParameter['field'] = field;\n                    }\n                    if (application !== undefined) {\n                        localVarQueryParameter['application'] = application;\n                    }\n                    if (resourceType !== undefined) {\n                        localVarQueryParameter['resource_type'] = resourceType;\n                    }\n                    if (verb !== undefined) {\n                        localVarQueryParameter['verb'] = verb;\n                    }\n                    if (excludeGlobals !== undefined) {\n                        localVarQueryParameter['exclude_globals'] = excludeGlobals;\n                    }\n                    if (allowedOnly !== undefined) {\n                        localVarQueryParameter['allowed_only'] = allowedOnly;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * By default, responses are sorted in ascending order by permission application.\n         * @summary List the permissions for a tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {'application' | 'resource_type' | 'verb' | 'permission'} [orderBy] Parameter for ordering permissions by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-application\n         * @param {string} [application] Exact match for the application name of a permission. You may also use a comma-separated list to match on multiple applications.\n         * @param {string} [resourceType] Exact match for the resource type name of a permission. You may also use a comma-separated list to match on multiple resource_types.\n         * @param {string} [verb] Exact match for the operation verb name of a permission You may also use a comma-separated list to match on multiple verbs.\n         * @param {string} [permission] Partial match for the aggregate permission value name of a permission object.\n         * @param {'true' | 'false'} [excludeGlobals] If set to \\&#39;true\\&#39;, this will exclude any permission with a global allowance on either \\&#39;application\\&#39;, \\&#39;resource_type\\&#39; or \\&#39;verb\\&#39;. The default is \\&#39;false\\&#39;.\n         * @param {string} [excludeRoles] An optional string filter which accepts one or more role UUIDs, comma-separated, to return permissions not associated with the supplied role(s).\n         * @param {'true' | 'false'} [allowedOnly] If set to \\&#39;true\\&#39;, this will exclude any permission with a role where the \\&#39;application\\&#39; is not in the role create allow list.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPermissions: function (limit, offset, orderBy, application, resourceType, verb, permission, excludeGlobals, excludeRoles, allowedOnly, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/permissions/\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (orderBy !== undefined) {\n                        localVarQueryParameter['order_by'] = orderBy;\n                    }\n                    if (application !== undefined) {\n                        localVarQueryParameter['application'] = application;\n                    }\n                    if (resourceType !== undefined) {\n                        localVarQueryParameter['resource_type'] = resourceType;\n                    }\n                    if (verb !== undefined) {\n                        localVarQueryParameter['verb'] = verb;\n                    }\n                    if (permission !== undefined) {\n                        localVarQueryParameter['permission'] = permission;\n                    }\n                    if (excludeGlobals !== undefined) {\n                        localVarQueryParameter['exclude_globals'] = excludeGlobals;\n                    }\n                    if (excludeRoles !== undefined) {\n                        localVarQueryParameter['exclude_roles'] = excludeRoles;\n                    }\n                    if (allowedOnly !== undefined) {\n                        localVarQueryParameter['allowed_only'] = allowedOnly;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\nexports.PermissionApiAxiosParamCreator = PermissionApiAxiosParamCreator;\n/**\n * PermissionApi - functional programming interface\n * @export\n */\nvar PermissionApiFp = function (configuration) {\n    return {\n        /**\n         * By default, options of application is returned. And could be resource_type or verb on demand.\n         * @summary List the available options for fields of permissions for a tenant\n         * @param {'application' | 'resource_type' | 'verb'} field specify which fields of permission to display\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [application] Filter returned options based on application. You may also use a comma-separated list to filter on multiple applications.\n         * @param {string} [resourceType] Filter returned options based on resource_type. You may also use a comma-separated list to filter on multiple resource_types.\n         * @param {string} [verb] Filter returned options based on verb. You may also use a comma-separated list to filter on multiple verbs.\n         * @param {'true' | 'false'} [excludeGlobals] If set to \\&#39;true\\&#39;, this will exclude any permission option with a global allowance on the supplied \\&#39;?field&#x3D;\\&#39; value of \\&#39;application\\&#39;, \\&#39;resource_type\\&#39; or \\&#39;verb\\&#39;. The default is \\&#39;false\\&#39;.\n         * @param {'true' | 'false'} [allowedOnly] If set to \\&#39;true\\&#39;, this will exclude any permission with a role where the \\&#39;application\\&#39; is not in the role create allow list.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPermissionOptions: function (field, limit, offset, application, resourceType, verb, excludeGlobals, allowedOnly, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.PermissionApiAxiosParamCreator)(configuration).listPermissionOptions(field, limit, offset, application, resourceType, verb, excludeGlobals, allowedOnly, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * By default, responses are sorted in ascending order by permission application.\n         * @summary List the permissions for a tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {'application' | 'resource_type' | 'verb' | 'permission'} [orderBy] Parameter for ordering permissions by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-application\n         * @param {string} [application] Exact match for the application name of a permission. You may also use a comma-separated list to match on multiple applications.\n         * @param {string} [resourceType] Exact match for the resource type name of a permission. You may also use a comma-separated list to match on multiple resource_types.\n         * @param {string} [verb] Exact match for the operation verb name of a permission You may also use a comma-separated list to match on multiple verbs.\n         * @param {string} [permission] Partial match for the aggregate permission value name of a permission object.\n         * @param {'true' | 'false'} [excludeGlobals] If set to \\&#39;true\\&#39;, this will exclude any permission with a global allowance on either \\&#39;application\\&#39;, \\&#39;resource_type\\&#39; or \\&#39;verb\\&#39;. The default is \\&#39;false\\&#39;.\n         * @param {string} [excludeRoles] An optional string filter which accepts one or more role UUIDs, comma-separated, to return permissions not associated with the supplied role(s).\n         * @param {'true' | 'false'} [allowedOnly] If set to \\&#39;true\\&#39;, this will exclude any permission with a role where the \\&#39;application\\&#39; is not in the role create allow list.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPermissions: function (limit, offset, orderBy, application, resourceType, verb, permission, excludeGlobals, excludeRoles, allowedOnly, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.PermissionApiAxiosParamCreator)(configuration).listPermissions(limit, offset, orderBy, application, resourceType, verb, permission, excludeGlobals, excludeRoles, allowedOnly, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\nexports.PermissionApiFp = PermissionApiFp;\n/**\n * PermissionApi - factory interface\n * @export\n */\nvar PermissionApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         * By default, options of application is returned. And could be resource_type or verb on demand.\n         * @summary List the available options for fields of permissions for a tenant\n         * @param {'application' | 'resource_type' | 'verb'} field specify which fields of permission to display\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [application] Filter returned options based on application. You may also use a comma-separated list to filter on multiple applications.\n         * @param {string} [resourceType] Filter returned options based on resource_type. You may also use a comma-separated list to filter on multiple resource_types.\n         * @param {string} [verb] Filter returned options based on verb. You may also use a comma-separated list to filter on multiple verbs.\n         * @param {'true' | 'false'} [excludeGlobals] If set to \\&#39;true\\&#39;, this will exclude any permission option with a global allowance on the supplied \\&#39;?field&#x3D;\\&#39; value of \\&#39;application\\&#39;, \\&#39;resource_type\\&#39; or \\&#39;verb\\&#39;. The default is \\&#39;false\\&#39;.\n         * @param {'true' | 'false'} [allowedOnly] If set to \\&#39;true\\&#39;, this will exclude any permission with a role where the \\&#39;application\\&#39; is not in the role create allow list.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPermissionOptions: function (field, limit, offset, application, resourceType, verb, excludeGlobals, allowedOnly, options) {\n            return (0, exports.PermissionApiFp)(configuration).listPermissionOptions(field, limit, offset, application, resourceType, verb, excludeGlobals, allowedOnly, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * By default, responses are sorted in ascending order by permission application.\n         * @summary List the permissions for a tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {'application' | 'resource_type' | 'verb' | 'permission'} [orderBy] Parameter for ordering permissions by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-application\n         * @param {string} [application] Exact match for the application name of a permission. You may also use a comma-separated list to match on multiple applications.\n         * @param {string} [resourceType] Exact match for the resource type name of a permission. You may also use a comma-separated list to match on multiple resource_types.\n         * @param {string} [verb] Exact match for the operation verb name of a permission You may also use a comma-separated list to match on multiple verbs.\n         * @param {string} [permission] Partial match for the aggregate permission value name of a permission object.\n         * @param {'true' | 'false'} [excludeGlobals] If set to \\&#39;true\\&#39;, this will exclude any permission with a global allowance on either \\&#39;application\\&#39;, \\&#39;resource_type\\&#39; or \\&#39;verb\\&#39;. The default is \\&#39;false\\&#39;.\n         * @param {string} [excludeRoles] An optional string filter which accepts one or more role UUIDs, comma-separated, to return permissions not associated with the supplied role(s).\n         * @param {'true' | 'false'} [allowedOnly] If set to \\&#39;true\\&#39;, this will exclude any permission with a role where the \\&#39;application\\&#39; is not in the role create allow list.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPermissions: function (limit, offset, orderBy, application, resourceType, verb, permission, excludeGlobals, excludeRoles, allowedOnly, options) {\n            return (0, exports.PermissionApiFp)(configuration).listPermissions(limit, offset, orderBy, application, resourceType, verb, permission, excludeGlobals, excludeRoles, allowedOnly, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\nexports.PermissionApiFactory = PermissionApiFactory;\n/**\n * PermissionApi - object-oriented interface\n * @export\n * @class PermissionApi\n * @extends {BaseAPI}\n */\nvar PermissionApi = /** @class */ (function (_super) {\n    __extends(PermissionApi, _super);\n    function PermissionApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * By default, options of application is returned. And could be resource_type or verb on demand.\n     * @summary List the available options for fields of permissions for a tenant\n     * @param {'application' | 'resource_type' | 'verb'} field specify which fields of permission to display\n     * @param {number} [limit] Parameter for selecting the amount of data returned.\n     * @param {number} [offset] Parameter for selecting the offset of data.\n     * @param {string} [application] Filter returned options based on application. You may also use a comma-separated list to filter on multiple applications.\n     * @param {string} [resourceType] Filter returned options based on resource_type. You may also use a comma-separated list to filter on multiple resource_types.\n     * @param {string} [verb] Filter returned options based on verb. You may also use a comma-separated list to filter on multiple verbs.\n     * @param {'true' | 'false'} [excludeGlobals] If set to \\&#39;true\\&#39;, this will exclude any permission option with a global allowance on the supplied \\&#39;?field&#x3D;\\&#39; value of \\&#39;application\\&#39;, \\&#39;resource_type\\&#39; or \\&#39;verb\\&#39;. The default is \\&#39;false\\&#39;.\n     * @param {'true' | 'false'} [allowedOnly] If set to \\&#39;true\\&#39;, this will exclude any permission with a role where the \\&#39;application\\&#39; is not in the role create allow list.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PermissionApi\n     */\n    PermissionApi.prototype.listPermissionOptions = function (field, limit, offset, application, resourceType, verb, excludeGlobals, allowedOnly, options) {\n        var _this = this;\n        return (0, exports.PermissionApiFp)(this.configuration).listPermissionOptions(field, limit, offset, application, resourceType, verb, excludeGlobals, allowedOnly, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * By default, responses are sorted in ascending order by permission application.\n     * @summary List the permissions for a tenant\n     * @param {number} [limit] Parameter for selecting the amount of data returned.\n     * @param {number} [offset] Parameter for selecting the offset of data.\n     * @param {'application' | 'resource_type' | 'verb' | 'permission'} [orderBy] Parameter for ordering permissions by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-application\n     * @param {string} [application] Exact match for the application name of a permission. You may also use a comma-separated list to match on multiple applications.\n     * @param {string} [resourceType] Exact match for the resource type name of a permission. You may also use a comma-separated list to match on multiple resource_types.\n     * @param {string} [verb] Exact match for the operation verb name of a permission You may also use a comma-separated list to match on multiple verbs.\n     * @param {string} [permission] Partial match for the aggregate permission value name of a permission object.\n     * @param {'true' | 'false'} [excludeGlobals] If set to \\&#39;true\\&#39;, this will exclude any permission with a global allowance on either \\&#39;application\\&#39;, \\&#39;resource_type\\&#39; or \\&#39;verb\\&#39;. The default is \\&#39;false\\&#39;.\n     * @param {string} [excludeRoles] An optional string filter which accepts one or more role UUIDs, comma-separated, to return permissions not associated with the supplied role(s).\n     * @param {'true' | 'false'} [allowedOnly] If set to \\&#39;true\\&#39;, this will exclude any permission with a role where the \\&#39;application\\&#39; is not in the role create allow list.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PermissionApi\n     */\n    PermissionApi.prototype.listPermissions = function (limit, offset, orderBy, application, resourceType, verb, permission, excludeGlobals, excludeRoles, allowedOnly, options) {\n        var _this = this;\n        return (0, exports.PermissionApiFp)(this.configuration).listPermissions(limit, offset, orderBy, application, resourceType, verb, permission, excludeGlobals, excludeRoles, allowedOnly, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return PermissionApi;\n}(base_1.BaseAPI));\nexports.PermissionApi = PermissionApi;\n/**\n * PolicyApi - axios parameter creator\n * @export\n */\nvar PolicyApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         *\n         * @summary Create a policy in a tenant\n         * @param {PolicyIn} policyIn Policy to create\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createPolicies: function (policyIn, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'policyIn' is not null or undefined\n                    if (policyIn === null || policyIn === undefined) {\n                        throw new base_1.RequiredError('policyIn', 'Required parameter policyIn was null or undefined when calling createPolicies.');\n                    }\n                    localVarPath = \"/policies/\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof policyIn !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(policyIn !== undefined ? policyIn : {}) : (policyIn || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Delete a policy in the tenant\n         * @param {string} uuid ID of policy to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deletePolicy: function (uuid, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling deletePolicy.');\n                    }\n                    localVarPath = \"/policies/{uuid}/\"\n                        .replace(\"{\".concat(\"uuid\", \"}\"), encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Get a policy in the tenant\n         * @param {string} uuid ID of policy to get\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPolicy: function (uuid, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling getPolicy.');\n                    }\n                    localVarPath = \"/policies/{uuid}/\"\n                        .replace(\"{\".concat(\"uuid\", \"}\"), encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * By default, responses are sorted in ascending order by policy name\n         * @summary List the policies in the tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [name] Parameter for filtering resource by name using string contains search.\n         * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n         * @param {string} [groupName] Parameter for filtering resource by group name using string contains search.\n         * @param {string} [groupUuid] Parameter for filtering resource by group uuid using UUID exact match.\n         * @param {'name' | 'modified'} [orderBy] Parameter for ordering policies by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPolicies: function (limit, offset, name, scope, groupName, groupUuid, orderBy, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/policies/\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (name !== undefined) {\n                        localVarQueryParameter['name'] = name;\n                    }\n                    if (scope !== undefined) {\n                        localVarQueryParameter['scope'] = scope;\n                    }\n                    if (groupName !== undefined) {\n                        localVarQueryParameter['group_name'] = groupName;\n                    }\n                    if (groupUuid !== undefined) {\n                        localVarQueryParameter['group_uuid'] = groupUuid;\n                    }\n                    if (orderBy !== undefined) {\n                        localVarQueryParameter['order_by'] = orderBy;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Update a policy in the tenant\n         * @param {string} uuid ID of policy to update\n         * @param {PolicyIn} policyIn Policy to update\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updatePolicy: function (uuid, policyIn, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling updatePolicy.');\n                    }\n                    // verify required parameter 'policyIn' is not null or undefined\n                    if (policyIn === null || policyIn === undefined) {\n                        throw new base_1.RequiredError('policyIn', 'Required parameter policyIn was null or undefined when calling updatePolicy.');\n                    }\n                    localVarPath = \"/policies/{uuid}/\"\n                        .replace(\"{\".concat(\"uuid\", \"}\"), encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PUT' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof policyIn !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(policyIn !== undefined ? policyIn : {}) : (policyIn || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\nexports.PolicyApiAxiosParamCreator = PolicyApiAxiosParamCreator;\n/**\n * PolicyApi - functional programming interface\n * @export\n */\nvar PolicyApiFp = function (configuration) {\n    return {\n        /**\n         *\n         * @summary Create a policy in a tenant\n         * @param {PolicyIn} policyIn Policy to create\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createPolicies: function (policyIn, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.PolicyApiAxiosParamCreator)(configuration).createPolicies(policyIn, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Delete a policy in the tenant\n         * @param {string} uuid ID of policy to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deletePolicy: function (uuid, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.PolicyApiAxiosParamCreator)(configuration).deletePolicy(uuid, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Get a policy in the tenant\n         * @param {string} uuid ID of policy to get\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPolicy: function (uuid, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.PolicyApiAxiosParamCreator)(configuration).getPolicy(uuid, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * By default, responses are sorted in ascending order by policy name\n         * @summary List the policies in the tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [name] Parameter for filtering resource by name using string contains search.\n         * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n         * @param {string} [groupName] Parameter for filtering resource by group name using string contains search.\n         * @param {string} [groupUuid] Parameter for filtering resource by group uuid using UUID exact match.\n         * @param {'name' | 'modified'} [orderBy] Parameter for ordering policies by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPolicies: function (limit, offset, name, scope, groupName, groupUuid, orderBy, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.PolicyApiAxiosParamCreator)(configuration).listPolicies(limit, offset, name, scope, groupName, groupUuid, orderBy, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Update a policy in the tenant\n         * @param {string} uuid ID of policy to update\n         * @param {PolicyIn} policyIn Policy to update\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updatePolicy: function (uuid, policyIn, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.PolicyApiAxiosParamCreator)(configuration).updatePolicy(uuid, policyIn, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\nexports.PolicyApiFp = PolicyApiFp;\n/**\n * PolicyApi - factory interface\n * @export\n */\nvar PolicyApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         *\n         * @summary Create a policy in a tenant\n         * @param {PolicyIn} policyIn Policy to create\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createPolicies: function (policyIn, options) {\n            return (0, exports.PolicyApiFp)(configuration).createPolicies(policyIn, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Delete a policy in the tenant\n         * @param {string} uuid ID of policy to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deletePolicy: function (uuid, options) {\n            return (0, exports.PolicyApiFp)(configuration).deletePolicy(uuid, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Get a policy in the tenant\n         * @param {string} uuid ID of policy to get\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPolicy: function (uuid, options) {\n            return (0, exports.PolicyApiFp)(configuration).getPolicy(uuid, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * By default, responses are sorted in ascending order by policy name\n         * @summary List the policies in the tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [name] Parameter for filtering resource by name using string contains search.\n         * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n         * @param {string} [groupName] Parameter for filtering resource by group name using string contains search.\n         * @param {string} [groupUuid] Parameter for filtering resource by group uuid using UUID exact match.\n         * @param {'name' | 'modified'} [orderBy] Parameter for ordering policies by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPolicies: function (limit, offset, name, scope, groupName, groupUuid, orderBy, options) {\n            return (0, exports.PolicyApiFp)(configuration).listPolicies(limit, offset, name, scope, groupName, groupUuid, orderBy, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Update a policy in the tenant\n         * @param {string} uuid ID of policy to update\n         * @param {PolicyIn} policyIn Policy to update\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updatePolicy: function (uuid, policyIn, options) {\n            return (0, exports.PolicyApiFp)(configuration).updatePolicy(uuid, policyIn, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\nexports.PolicyApiFactory = PolicyApiFactory;\n/**\n * PolicyApi - object-oriented interface\n * @export\n * @class PolicyApi\n * @extends {BaseAPI}\n */\nvar PolicyApi = /** @class */ (function (_super) {\n    __extends(PolicyApi, _super);\n    function PolicyApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     *\n     * @summary Create a policy in a tenant\n     * @param {PolicyIn} policyIn Policy to create\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PolicyApi\n     */\n    PolicyApi.prototype.createPolicies = function (policyIn, options) {\n        var _this = this;\n        return (0, exports.PolicyApiFp)(this.configuration).createPolicies(policyIn, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Delete a policy in the tenant\n     * @param {string} uuid ID of policy to delete\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PolicyApi\n     */\n    PolicyApi.prototype.deletePolicy = function (uuid, options) {\n        var _this = this;\n        return (0, exports.PolicyApiFp)(this.configuration).deletePolicy(uuid, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Get a policy in the tenant\n     * @param {string} uuid ID of policy to get\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PolicyApi\n     */\n    PolicyApi.prototype.getPolicy = function (uuid, options) {\n        var _this = this;\n        return (0, exports.PolicyApiFp)(this.configuration).getPolicy(uuid, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * By default, responses are sorted in ascending order by policy name\n     * @summary List the policies in the tenant\n     * @param {number} [limit] Parameter for selecting the amount of data returned.\n     * @param {number} [offset] Parameter for selecting the offset of data.\n     * @param {string} [name] Parameter for filtering resource by name using string contains search.\n     * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n     * @param {string} [groupName] Parameter for filtering resource by group name using string contains search.\n     * @param {string} [groupUuid] Parameter for filtering resource by group uuid using UUID exact match.\n     * @param {'name' | 'modified'} [orderBy] Parameter for ordering policies by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PolicyApi\n     */\n    PolicyApi.prototype.listPolicies = function (limit, offset, name, scope, groupName, groupUuid, orderBy, options) {\n        var _this = this;\n        return (0, exports.PolicyApiFp)(this.configuration).listPolicies(limit, offset, name, scope, groupName, groupUuid, orderBy, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Update a policy in the tenant\n     * @param {string} uuid ID of policy to update\n     * @param {PolicyIn} policyIn Policy to update\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PolicyApi\n     */\n    PolicyApi.prototype.updatePolicy = function (uuid, policyIn, options) {\n        var _this = this;\n        return (0, exports.PolicyApiFp)(this.configuration).updatePolicy(uuid, policyIn, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return PolicyApi;\n}(base_1.BaseAPI));\nexports.PolicyApi = PolicyApi;\n/**\n * PrincipalApi - axios parameter creator\n * @export\n */\nvar PrincipalApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * By default, responses are sorted in ascending order by username\n         * @summary List the principals for a tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {'partial' | 'exact'} [matchCriteria] Parameter for specifying the matching criteria for an object\\&#39;s name and/or email. Currently, match_criteria of partial searches for a username/email using \\&quot;starts with\\&quot; pattern.\n         * @param {string} [usernames] Comma separated usernames of principals to get. If match_criteria is specified, only the first username will be picked up for search.\n         * @param {'asc' | 'desc'} [sortOrder] The sort order of the query, either ascending or descending. Defaults to ascending.\n         * @param {string} [email] E-mail address of principal to search for. Could be combined with match_criteria for searching.\n         * @param {'enabled' | 'disabled' | 'all'} [status] Set the status of users to get back.\n         * @param {'true' | 'false'} [adminOnly] Get only admin users within an account. Setting this would ignore the parameters: usernames, email\n         * @param {'username'} [orderBy] Parameter for ordering principals by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-username\n         * @param {boolean} [usernameOnly] Parameter for optionally returning only usernames for principals, bypassing a call to IT.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPrincipals: function (limit, offset, matchCriteria, usernames, sortOrder, email, status, adminOnly, orderBy, usernameOnly, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/principals/\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (matchCriteria !== undefined) {\n                        localVarQueryParameter['match_criteria'] = matchCriteria;\n                    }\n                    if (usernames !== undefined) {\n                        localVarQueryParameter['usernames'] = usernames;\n                    }\n                    if (sortOrder !== undefined) {\n                        localVarQueryParameter['sort_order'] = sortOrder;\n                    }\n                    if (email !== undefined) {\n                        localVarQueryParameter['email'] = email;\n                    }\n                    if (status !== undefined) {\n                        localVarQueryParameter['status'] = status;\n                    }\n                    if (adminOnly !== undefined) {\n                        localVarQueryParameter['admin_only'] = adminOnly;\n                    }\n                    if (orderBy !== undefined) {\n                        localVarQueryParameter['order_by'] = orderBy;\n                    }\n                    if (usernameOnly !== undefined) {\n                        localVarQueryParameter['username_only'] = usernameOnly;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\nexports.PrincipalApiAxiosParamCreator = PrincipalApiAxiosParamCreator;\n/**\n * PrincipalApi - functional programming interface\n * @export\n */\nvar PrincipalApiFp = function (configuration) {\n    return {\n        /**\n         * By default, responses are sorted in ascending order by username\n         * @summary List the principals for a tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {'partial' | 'exact'} [matchCriteria] Parameter for specifying the matching criteria for an object\\&#39;s name and/or email. Currently, match_criteria of partial searches for a username/email using \\&quot;starts with\\&quot; pattern.\n         * @param {string} [usernames] Comma separated usernames of principals to get. If match_criteria is specified, only the first username will be picked up for search.\n         * @param {'asc' | 'desc'} [sortOrder] The sort order of the query, either ascending or descending. Defaults to ascending.\n         * @param {string} [email] E-mail address of principal to search for. Could be combined with match_criteria for searching.\n         * @param {'enabled' | 'disabled' | 'all'} [status] Set the status of users to get back.\n         * @param {'true' | 'false'} [adminOnly] Get only admin users within an account. Setting this would ignore the parameters: usernames, email\n         * @param {'username'} [orderBy] Parameter for ordering principals by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-username\n         * @param {boolean} [usernameOnly] Parameter for optionally returning only usernames for principals, bypassing a call to IT.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPrincipals: function (limit, offset, matchCriteria, usernames, sortOrder, email, status, adminOnly, orderBy, usernameOnly, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.PrincipalApiAxiosParamCreator)(configuration).listPrincipals(limit, offset, matchCriteria, usernames, sortOrder, email, status, adminOnly, orderBy, usernameOnly, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\nexports.PrincipalApiFp = PrincipalApiFp;\n/**\n * PrincipalApi - factory interface\n * @export\n */\nvar PrincipalApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         * By default, responses are sorted in ascending order by username\n         * @summary List the principals for a tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {'partial' | 'exact'} [matchCriteria] Parameter for specifying the matching criteria for an object\\&#39;s name and/or email. Currently, match_criteria of partial searches for a username/email using \\&quot;starts with\\&quot; pattern.\n         * @param {string} [usernames] Comma separated usernames of principals to get. If match_criteria is specified, only the first username will be picked up for search.\n         * @param {'asc' | 'desc'} [sortOrder] The sort order of the query, either ascending or descending. Defaults to ascending.\n         * @param {string} [email] E-mail address of principal to search for. Could be combined with match_criteria for searching.\n         * @param {'enabled' | 'disabled' | 'all'} [status] Set the status of users to get back.\n         * @param {'true' | 'false'} [adminOnly] Get only admin users within an account. Setting this would ignore the parameters: usernames, email\n         * @param {'username'} [orderBy] Parameter for ordering principals by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-username\n         * @param {boolean} [usernameOnly] Parameter for optionally returning only usernames for principals, bypassing a call to IT.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPrincipals: function (limit, offset, matchCriteria, usernames, sortOrder, email, status, adminOnly, orderBy, usernameOnly, options) {\n            return (0, exports.PrincipalApiFp)(configuration).listPrincipals(limit, offset, matchCriteria, usernames, sortOrder, email, status, adminOnly, orderBy, usernameOnly, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\nexports.PrincipalApiFactory = PrincipalApiFactory;\n/**\n * PrincipalApi - object-oriented interface\n * @export\n * @class PrincipalApi\n * @extends {BaseAPI}\n */\nvar PrincipalApi = /** @class */ (function (_super) {\n    __extends(PrincipalApi, _super);\n    function PrincipalApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * By default, responses are sorted in ascending order by username\n     * @summary List the principals for a tenant\n     * @param {number} [limit] Parameter for selecting the amount of data returned.\n     * @param {number} [offset] Parameter for selecting the offset of data.\n     * @param {'partial' | 'exact'} [matchCriteria] Parameter for specifying the matching criteria for an object\\&#39;s name and/or email. Currently, match_criteria of partial searches for a username/email using \\&quot;starts with\\&quot; pattern.\n     * @param {string} [usernames] Comma separated usernames of principals to get. If match_criteria is specified, only the first username will be picked up for search.\n     * @param {'asc' | 'desc'} [sortOrder] The sort order of the query, either ascending or descending. Defaults to ascending.\n     * @param {string} [email] E-mail address of principal to search for. Could be combined with match_criteria for searching.\n     * @param {'enabled' | 'disabled' | 'all'} [status] Set the status of users to get back.\n     * @param {'true' | 'false'} [adminOnly] Get only admin users within an account. Setting this would ignore the parameters: usernames, email\n     * @param {'username'} [orderBy] Parameter for ordering principals by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-username\n     * @param {boolean} [usernameOnly] Parameter for optionally returning only usernames for principals, bypassing a call to IT.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PrincipalApi\n     */\n    PrincipalApi.prototype.listPrincipals = function (limit, offset, matchCriteria, usernames, sortOrder, email, status, adminOnly, orderBy, usernameOnly, options) {\n        var _this = this;\n        return (0, exports.PrincipalApiFp)(this.configuration).listPrincipals(limit, offset, matchCriteria, usernames, sortOrder, email, status, adminOnly, orderBy, usernameOnly, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return PrincipalApi;\n}(base_1.BaseAPI));\nexports.PrincipalApi = PrincipalApi;\n/**\n * RoleApi - axios parameter creator\n * @export\n */\nvar RoleApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         *\n         * @summary Create a roles for a tenant\n         * @param {RoleIn} roleIn Role to create\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createRoles: function (roleIn, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'roleIn' is not null or undefined\n                    if (roleIn === null || roleIn === undefined) {\n                        throw new base_1.RequiredError('roleIn', 'Required parameter roleIn was null or undefined when calling createRoles.');\n                    }\n                    localVarPath = \"/roles/\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof roleIn !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(roleIn !== undefined ? roleIn : {}) : (roleIn || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Delete a role in the tenant\n         * @param {string} uuid ID of role to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteRole: function (uuid, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling deleteRole.');\n                    }\n                    localVarPath = \"/roles/{uuid}/\"\n                        .replace(\"{\".concat(\"uuid\", \"}\"), encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Get a role in the tenant\n         * @param {string} uuid ID of role to get\n         * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getRole: function (uuid, scope, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling getRole.');\n                    }\n                    localVarPath = \"/roles/{uuid}/\"\n                        .replace(\"{\".concat(\"uuid\", \"}\"), encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (scope !== undefined) {\n                        localVarQueryParameter['scope'] = scope;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Get access for a role in the tenant\n         * @param {string} uuid ID of the role\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getRoleAccess: function (uuid, limit, offset, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling getRoleAccess.');\n                    }\n                    localVarPath = \"/roles/{uuid}/access/\"\n                        .replace(\"{\".concat(\"uuid\", \"}\"), encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * By default, responses are sorted in ascending order by role name\n         * @summary List the roles for a tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [name] Parameter for filtering resource by name using string contains search.\n         * @param {boolean} [system] Parameter for filtering resource by system flag.\n         * @param {string} [displayName] Parameter for filtering resource by display_name using string contains search.\n         * @param {'partial' | 'exact'} [nameMatch] Parameter for specifying the matching criteria for an object\\&#39;s name or display_name.\n         * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n         * @param {'name' | 'display_name' | 'modified' | 'policyCount'} [orderBy] Parameter for ordering roles by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n         * @param {Array<'groups_in' | 'groups_in_count' | 'access'>} [addFields] Parameter for add list of fields to display for roles.\n         * @param {string} [username] Unique username of the principal to obtain roles for (only available for admins, and if supplied, takes precedence over the identity header).\n         * @param {string} [application] The application name(s) to filter roles by, from permissions. This is an exact match. You may also use a comma-separated list to match on multiple applications.\n         * @param {string} [permission] The permission(s) to filter roles by. This is an exact match. You may also use a comma-separated list to match on multiple permissions.\n         * @param {string} [externalTenant] Parameter for filtering roles by external tenant name using string search.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listRoles: function (limit, offset, name, system, displayName, nameMatch, scope, orderBy, addFields, username, application, permission, externalTenant, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/roles/\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (name !== undefined) {\n                        localVarQueryParameter['name'] = name;\n                    }\n                    if (system !== undefined) {\n                        localVarQueryParameter['system'] = system;\n                    }\n                    if (displayName !== undefined) {\n                        localVarQueryParameter['display_name'] = displayName;\n                    }\n                    if (nameMatch !== undefined) {\n                        localVarQueryParameter['name_match'] = nameMatch;\n                    }\n                    if (scope !== undefined) {\n                        localVarQueryParameter['scope'] = scope;\n                    }\n                    if (orderBy !== undefined) {\n                        localVarQueryParameter['order_by'] = orderBy;\n                    }\n                    if (addFields) {\n                        localVarQueryParameter['add_fields'] = addFields.join(base_1.COLLECTION_FORMATS.csv);\n                    }\n                    if (username !== undefined) {\n                        localVarQueryParameter['username'] = username;\n                    }\n                    if (application !== undefined) {\n                        localVarQueryParameter['application'] = application;\n                    }\n                    if (permission !== undefined) {\n                        localVarQueryParameter['permission'] = permission;\n                    }\n                    if (externalTenant !== undefined) {\n                        localVarQueryParameter['external_tenant'] = externalTenant;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Patch a Role in the tenant\n         * @param {string} uuid ID of role to update\n         * @param {RolePatch} [rolePatch] Patch to a Role\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        patchRole: function (uuid, rolePatch, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling patchRole.');\n                    }\n                    localVarPath = \"/roles/{uuid}/\"\n                        .replace(\"{\".concat(\"uuid\", \"}\"), encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PATCH' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof rolePatch !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(rolePatch !== undefined ? rolePatch : {}) : (rolePatch || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Update a Role in the tenant\n         * @param {string} uuid ID of role to update\n         * @param {RoleWithAccess} roleWithAccess Update to a Role\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateRole: function (uuid, roleWithAccess, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling updateRole.');\n                    }\n                    // verify required parameter 'roleWithAccess' is not null or undefined\n                    if (roleWithAccess === null || roleWithAccess === undefined) {\n                        throw new base_1.RequiredError('roleWithAccess', 'Required parameter roleWithAccess was null or undefined when calling updateRole.');\n                    }\n                    localVarPath = \"/roles/{uuid}/\"\n                        .replace(\"{\".concat(\"uuid\", \"}\"), encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PUT' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof roleWithAccess !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(roleWithAccess !== undefined ? roleWithAccess : {}) : (roleWithAccess || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\nexports.RoleApiAxiosParamCreator = RoleApiAxiosParamCreator;\n/**\n * RoleApi - functional programming interface\n * @export\n */\nvar RoleApiFp = function (configuration) {\n    return {\n        /**\n         *\n         * @summary Create a roles for a tenant\n         * @param {RoleIn} roleIn Role to create\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createRoles: function (roleIn, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.RoleApiAxiosParamCreator)(configuration).createRoles(roleIn, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Delete a role in the tenant\n         * @param {string} uuid ID of role to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteRole: function (uuid, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.RoleApiAxiosParamCreator)(configuration).deleteRole(uuid, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Get a role in the tenant\n         * @param {string} uuid ID of role to get\n         * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getRole: function (uuid, scope, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.RoleApiAxiosParamCreator)(configuration).getRole(uuid, scope, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Get access for a role in the tenant\n         * @param {string} uuid ID of the role\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getRoleAccess: function (uuid, limit, offset, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.RoleApiAxiosParamCreator)(configuration).getRoleAccess(uuid, limit, offset, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * By default, responses are sorted in ascending order by role name\n         * @summary List the roles for a tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [name] Parameter for filtering resource by name using string contains search.\n         * @param {boolean} [system] Parameter for filtering resource by system flag.\n         * @param {string} [displayName] Parameter for filtering resource by display_name using string contains search.\n         * @param {'partial' | 'exact'} [nameMatch] Parameter for specifying the matching criteria for an object\\&#39;s name or display_name.\n         * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n         * @param {'name' | 'display_name' | 'modified' | 'policyCount'} [orderBy] Parameter for ordering roles by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n         * @param {Array<'groups_in' | 'groups_in_count' | 'access'>} [addFields] Parameter for add list of fields to display for roles.\n         * @param {string} [username] Unique username of the principal to obtain roles for (only available for admins, and if supplied, takes precedence over the identity header).\n         * @param {string} [application] The application name(s) to filter roles by, from permissions. This is an exact match. You may also use a comma-separated list to match on multiple applications.\n         * @param {string} [permission] The permission(s) to filter roles by. This is an exact match. You may also use a comma-separated list to match on multiple permissions.\n         * @param {string} [externalTenant] Parameter for filtering roles by external tenant name using string search.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listRoles: function (limit, offset, name, system, displayName, nameMatch, scope, orderBy, addFields, username, application, permission, externalTenant, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.RoleApiAxiosParamCreator)(configuration).listRoles(limit, offset, name, system, displayName, nameMatch, scope, orderBy, addFields, username, application, permission, externalTenant, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Patch a Role in the tenant\n         * @param {string} uuid ID of role to update\n         * @param {RolePatch} [rolePatch] Patch to a Role\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        patchRole: function (uuid, rolePatch, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.RoleApiAxiosParamCreator)(configuration).patchRole(uuid, rolePatch, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Update a Role in the tenant\n         * @param {string} uuid ID of role to update\n         * @param {RoleWithAccess} roleWithAccess Update to a Role\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateRole: function (uuid, roleWithAccess, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.RoleApiAxiosParamCreator)(configuration).updateRole(uuid, roleWithAccess, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\nexports.RoleApiFp = RoleApiFp;\n/**\n * RoleApi - factory interface\n * @export\n */\nvar RoleApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         *\n         * @summary Create a roles for a tenant\n         * @param {RoleIn} roleIn Role to create\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createRoles: function (roleIn, options) {\n            return (0, exports.RoleApiFp)(configuration).createRoles(roleIn, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Delete a role in the tenant\n         * @param {string} uuid ID of role to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteRole: function (uuid, options) {\n            return (0, exports.RoleApiFp)(configuration).deleteRole(uuid, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Get a role in the tenant\n         * @param {string} uuid ID of role to get\n         * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getRole: function (uuid, scope, options) {\n            return (0, exports.RoleApiFp)(configuration).getRole(uuid, scope, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Get access for a role in the tenant\n         * @param {string} uuid ID of the role\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getRoleAccess: function (uuid, limit, offset, options) {\n            return (0, exports.RoleApiFp)(configuration).getRoleAccess(uuid, limit, offset, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * By default, responses are sorted in ascending order by role name\n         * @summary List the roles for a tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [name] Parameter for filtering resource by name using string contains search.\n         * @param {boolean} [system] Parameter for filtering resource by system flag.\n         * @param {string} [displayName] Parameter for filtering resource by display_name using string contains search.\n         * @param {'partial' | 'exact'} [nameMatch] Parameter for specifying the matching criteria for an object\\&#39;s name or display_name.\n         * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n         * @param {'name' | 'display_name' | 'modified' | 'policyCount'} [orderBy] Parameter for ordering roles by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n         * @param {Array<'groups_in' | 'groups_in_count' | 'access'>} [addFields] Parameter for add list of fields to display for roles.\n         * @param {string} [username] Unique username of the principal to obtain roles for (only available for admins, and if supplied, takes precedence over the identity header).\n         * @param {string} [application] The application name(s) to filter roles by, from permissions. This is an exact match. You may also use a comma-separated list to match on multiple applications.\n         * @param {string} [permission] The permission(s) to filter roles by. This is an exact match. You may also use a comma-separated list to match on multiple permissions.\n         * @param {string} [externalTenant] Parameter for filtering roles by external tenant name using string search.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listRoles: function (limit, offset, name, system, displayName, nameMatch, scope, orderBy, addFields, username, application, permission, externalTenant, options) {\n            return (0, exports.RoleApiFp)(configuration).listRoles(limit, offset, name, system, displayName, nameMatch, scope, orderBy, addFields, username, application, permission, externalTenant, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Patch a Role in the tenant\n         * @param {string} uuid ID of role to update\n         * @param {RolePatch} [rolePatch] Patch to a Role\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        patchRole: function (uuid, rolePatch, options) {\n            return (0, exports.RoleApiFp)(configuration).patchRole(uuid, rolePatch, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Update a Role in the tenant\n         * @param {string} uuid ID of role to update\n         * @param {RoleWithAccess} roleWithAccess Update to a Role\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateRole: function (uuid, roleWithAccess, options) {\n            return (0, exports.RoleApiFp)(configuration).updateRole(uuid, roleWithAccess, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\nexports.RoleApiFactory = RoleApiFactory;\n/**\n * RoleApi - object-oriented interface\n * @export\n * @class RoleApi\n * @extends {BaseAPI}\n */\nvar RoleApi = /** @class */ (function (_super) {\n    __extends(RoleApi, _super);\n    function RoleApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     *\n     * @summary Create a roles for a tenant\n     * @param {RoleIn} roleIn Role to create\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RoleApi\n     */\n    RoleApi.prototype.createRoles = function (roleIn, options) {\n        var _this = this;\n        return (0, exports.RoleApiFp)(this.configuration).createRoles(roleIn, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Delete a role in the tenant\n     * @param {string} uuid ID of role to delete\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RoleApi\n     */\n    RoleApi.prototype.deleteRole = function (uuid, options) {\n        var _this = this;\n        return (0, exports.RoleApiFp)(this.configuration).deleteRole(uuid, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Get a role in the tenant\n     * @param {string} uuid ID of role to get\n     * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RoleApi\n     */\n    RoleApi.prototype.getRole = function (uuid, scope, options) {\n        var _this = this;\n        return (0, exports.RoleApiFp)(this.configuration).getRole(uuid, scope, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Get access for a role in the tenant\n     * @param {string} uuid ID of the role\n     * @param {number} [limit] Parameter for selecting the amount of data returned.\n     * @param {number} [offset] Parameter for selecting the offset of data.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RoleApi\n     */\n    RoleApi.prototype.getRoleAccess = function (uuid, limit, offset, options) {\n        var _this = this;\n        return (0, exports.RoleApiFp)(this.configuration).getRoleAccess(uuid, limit, offset, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * By default, responses are sorted in ascending order by role name\n     * @summary List the roles for a tenant\n     * @param {number} [limit] Parameter for selecting the amount of data returned.\n     * @param {number} [offset] Parameter for selecting the offset of data.\n     * @param {string} [name] Parameter for filtering resource by name using string contains search.\n     * @param {boolean} [system] Parameter for filtering resource by system flag.\n     * @param {string} [displayName] Parameter for filtering resource by display_name using string contains search.\n     * @param {'partial' | 'exact'} [nameMatch] Parameter for specifying the matching criteria for an object\\&#39;s name or display_name.\n     * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n     * @param {'name' | 'display_name' | 'modified' | 'policyCount'} [orderBy] Parameter for ordering roles by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n     * @param {Array<'groups_in' | 'groups_in_count' | 'access'>} [addFields] Parameter for add list of fields to display for roles.\n     * @param {string} [username] Unique username of the principal to obtain roles for (only available for admins, and if supplied, takes precedence over the identity header).\n     * @param {string} [application] The application name(s) to filter roles by, from permissions. This is an exact match. You may also use a comma-separated list to match on multiple applications.\n     * @param {string} [permission] The permission(s) to filter roles by. This is an exact match. You may also use a comma-separated list to match on multiple permissions.\n     * @param {string} [externalTenant] Parameter for filtering roles by external tenant name using string search.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RoleApi\n     */\n    RoleApi.prototype.listRoles = function (limit, offset, name, system, displayName, nameMatch, scope, orderBy, addFields, username, application, permission, externalTenant, options) {\n        var _this = this;\n        return (0, exports.RoleApiFp)(this.configuration).listRoles(limit, offset, name, system, displayName, nameMatch, scope, orderBy, addFields, username, application, permission, externalTenant, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Patch a Role in the tenant\n     * @param {string} uuid ID of role to update\n     * @param {RolePatch} [rolePatch] Patch to a Role\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RoleApi\n     */\n    RoleApi.prototype.patchRole = function (uuid, rolePatch, options) {\n        var _this = this;\n        return (0, exports.RoleApiFp)(this.configuration).patchRole(uuid, rolePatch, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Update a Role in the tenant\n     * @param {string} uuid ID of role to update\n     * @param {RoleWithAccess} roleWithAccess Update to a Role\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RoleApi\n     */\n    RoleApi.prototype.updateRole = function (uuid, roleWithAccess, options) {\n        var _this = this;\n        return (0, exports.RoleApiFp)(this.configuration).updateRole(uuid, roleWithAccess, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return RoleApi;\n}(base_1.BaseAPI));\nexports.RoleApi = RoleApi;\n/**\n * StatusApi - axios parameter creator\n * @export\n */\nvar StatusApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         *\n         * @summary Obtain server status\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getStatus: function (options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/status/\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\nexports.StatusApiAxiosParamCreator = StatusApiAxiosParamCreator;\n/**\n * StatusApi - functional programming interface\n * @export\n */\nvar StatusApiFp = function (configuration) {\n    return {\n        /**\n         *\n         * @summary Obtain server status\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getStatus: function (options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, exports.StatusApiAxiosParamCreator)(configuration).getStatus(options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\nexports.StatusApiFp = StatusApiFp;\n/**\n * StatusApi - factory interface\n * @export\n */\nvar StatusApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         *\n         * @summary Obtain server status\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getStatus: function (options) {\n            return (0, exports.StatusApiFp)(configuration).getStatus(options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\nexports.StatusApiFactory = StatusApiFactory;\n/**\n * StatusApi - object-oriented interface\n * @export\n * @class StatusApi\n * @extends {BaseAPI}\n */\nvar StatusApi = /** @class */ (function (_super) {\n    __extends(StatusApi, _super);\n    function StatusApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     *\n     * @summary Obtain server status\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof StatusApi\n     */\n    StatusApi.prototype.getStatus = function (options) {\n        var _this = this;\n        return (0, exports.StatusApiFp)(this.configuration).getStatus(options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return StatusApi;\n}(base_1.BaseAPI));\nexports.StatusApi = StatusApi;\n","\"use strict\";\n// tslint:disable\n/**\n * Role Based Access Control\n * The API for Role Based Access Control.\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RequiredError = exports.BaseAPI = exports.COLLECTION_FORMATS = exports.BASE_PATH = void 0;\n// Some imports not used depending on template conditions\n// @ts-ignore\nvar axios_1 = require(\"axios\");\nexports.BASE_PATH = \"https://raw.githubusercontent.com/api/rbac/v1\".replace(/\\/+$/, \"\");\n/**\n *\n * @export\n */\nexports.COLLECTION_FORMATS = {\n    csv: \",\",\n    ssv: \" \",\n    tsv: \"\\t\",\n    pipes: \"|\",\n};\n/**\n *\n * @export\n * @class BaseAPI\n */\nvar BaseAPI = /** @class */ (function () {\n    function BaseAPI(configuration, basePath, axios) {\n        if (basePath === void 0) { basePath = exports.BASE_PATH; }\n        if (axios === void 0) { axios = axios_1.default; }\n        this.basePath = basePath;\n        this.axios = axios;\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = configuration.basePath || this.basePath;\n        }\n    }\n    return BaseAPI;\n}());\nexports.BaseAPI = BaseAPI;\n;\n/**\n *\n * @export\n * @class RequiredError\n * @extends {Error}\n */\nvar RequiredError = /** @class */ (function (_super) {\n    __extends(RequiredError, _super);\n    function RequiredError(field, msg) {\n        var _this = _super.call(this, msg) || this;\n        _this.field = field;\n        _this.name = \"RequiredError\";\n        return _this;\n    }\n    return RequiredError;\n}(Error));\nexports.RequiredError = RequiredError;\n","\"use strict\";\n// tslint:disable\n/**\n * Role Based Access Control\n * The API for Role Based Access Control.\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Configuration = void 0;\nvar Configuration = /** @class */ (function () {\n    function Configuration(param) {\n        if (param === void 0) { param = {}; }\n        this.apiKey = param.apiKey;\n        this.username = param.username;\n        this.password = param.password;\n        this.accessToken = param.accessToken;\n        this.basePath = param.basePath;\n        this.baseOptions = param.baseOptions;\n    }\n    return Configuration;\n}());\nexports.Configuration = Configuration;\n","\"use strict\";\n// tslint:disable\n/**\n * Role Based Access Control\n * The API for Role Based Access Control.\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./api\"), exports);\n__exportStar(require(\"./configuration\"), exports);\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return Object.keys(obj).map(function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (Array.isArray(obj[k])) {\n        return obj[k].map(function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","/*! https://mths.be/punycode v1.3.2 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.3.2',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n","'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n"],"names":["extendStatics","__extends","this","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","Symbol","iterator","v","op","pop","push","defineProperty","exports","StatusApi","StatusApiFactory","StatusApiFp","StatusApiAxiosParamCreator","RoleApi","RoleApiFactory","RoleApiFp","RoleApiAxiosParamCreator","PrincipalApi","PrincipalApiFactory","PrincipalApiFp","PrincipalApiAxiosParamCreator","PolicyApi","PolicyApiFactory","PolicyApiFp","PolicyApiAxiosParamCreator","PermissionApi","PermissionApiFactory","PermissionApiFp","PermissionApiAxiosParamCreator","GroupApi","GroupApiFactory","GroupApiFp","GroupApiAxiosParamCreator","CrossAccountRequestApi","CrossAccountRequestApiFactory","CrossAccountRequestApiFp","CrossAccountRequestApiAxiosParamCreator","AccessApi","AccessApiFactory","AccessApiFp","AccessApiAxiosParamCreator","ResourceDefinitionFilterOperationEnum","CrossAccountRequestPatchStatusEnum","globalImportUrl","axios_1","base_1","configuration","_this","getPrincipalAccess","application","username","orderBy","limit","offset","options","localVarUrlObj","baseOptions","localVarRequestOptions","localVarHeaderParameter","localVarQueryParameter","headersFromBaseOptions","_a","RequiredError","parse","method","password","undefined","query","search","headers","url","format","localVarAxiosArgs","axios","basePath","default","BASE_PATH","axiosRequestArgs","request","_super","BaseAPI","createCrossAccountRequests","crossAccountRequestIn","needsSerialization","data","JSON","stringify","getCrossAccountRequest","uuid","queryBy","account","approvedOnly","localVarPath","replace","concat","encodeURIComponent","listCrossAccountRequests","orgId","status","patchCrossAccountRequest","crossAccountRequestPatch","putCrossAccountRequest","crossAccountRequestUpdateIn","addPrincipalToGroup","groupPrincipalIn","addRoleToGroup","groupRoleIn","createGroup","group","deleteGroup","deletePrincipalFromGroup","usernames","deleteRoleFromGroup","roles","getGroup","getPrincipalsFromGroup","principalUsername","usernameOnly","listGroups","name","nameMatch","scope","excludeUsername","roleNames","roleDiscriminator","platformDefault","adminDefault","system","join","COLLECTION_FORMATS","csv","listRolesForGroup","exclude","roleName","roleDisplayName","roleDescription","roleSystem","roleExternalTenant","updateGroup","listPermissionOptions","field","resourceType","excludeGlobals","allowedOnly","listPermissions","permission","excludeRoles","createPolicies","policyIn","deletePolicy","getPolicy","listPolicies","groupName","groupUuid","updatePolicy","listPrincipals","matchCriteria","sortOrder","email","adminOnly","createRoles","roleIn","deleteRole","getRole","getRoleAccess","listRoles","displayName","addFields","externalTenant","patchRole","rolePatch","updateRole","roleWithAccess","getStatus","ssv","tsv","pipes","msg","Error","Configuration","param","apiKey","accessToken","__createBinding","o","m","k","k2","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","__exportStar","obj","prop","module","qs","sep","eq","regexp","split","maxKeys","len","kstr","vstr","x","idx","indexOf","substr","decodeURIComponent","isArray","stringifyPrimitive","isFinite","keys","map","ks","decode","encode","root","nodeType","freeGlobal","global","window","self","punycode","maxInt","base","regexPunycode","regexNonASCII","regexSeparators","errors","floor","Math","stringFromCharCode","fromCharCode","error","type","RangeError","array","fn","mapDomain","string","parts","ucs2decode","extra","output","counter","charCodeAt","ucs2encode","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","baseMinusTMin","input","out","basic","j","index","oldi","w","baseMinusT","codePoint","inputLength","bias","lastIndexOf","splice","handledCPCount","basicLength","q","currentValue","handledCPCountPlusOne","qMinusT","test","slice","toLowerCase","util","Url","protocol","slashes","auth","host","port","hostname","hash","pathname","path","href","urlParse","source","relative","resolveObject","isString","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","unsafeProtocol","hostlessProtocol","slashedProtocol","querystring","parseQueryString","slashesDenoteHost","isObject","u","queryIndex","splitter","uSplit","rest","trim","simplePath","exec","proto","lowerProto","match","atSign","hostEnd","hec","parseHost","ipv6Hostname","hostparts","l","part","newpart","validParts","notHost","bit","unshift","toASCII","h","ae","esc","escape","qm","charAt","rel","tkeys","tk","tkey","rkeys","rk","rkey","relPath","shift","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","isNullOrUndefined","authInHost","isNull","last","hasTrailingSlash","up","isAbsolute","arg"],"sourceRoot":""}